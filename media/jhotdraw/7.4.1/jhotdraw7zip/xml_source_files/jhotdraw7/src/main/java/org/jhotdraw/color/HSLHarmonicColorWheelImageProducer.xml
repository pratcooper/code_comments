<?xml version="1.0" ?>
<srcfile name="HSLHarmonicColorWheelImageProducer.java" file_path="/Users/valerio/Research/Code/Source Code Comments Classification/comments_classification/media/jhotdraw/7.4.1/jhotdraw7zip/extracted/jhotdraw7/src/main/java/org/jhotdraw/color/HSLHarmonicColorWheelImageProducer.java" >
 <node name="COMPILATION_UNIT" line="0" instruction_class="COMPILATION_UNIT" instruction="COMPILATION_UNIT">
   <node name="PACKAGE_DECLARATION" line="0" instruction_class="KEYWORD" instruction="PACKAGE_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="color" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Color" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Point" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
       <node name="public" line="25" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
       </node>
     </node>
     <node name="HSLHarmonicColorWheelImageProducer" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
     </node>
     <node name="extends" line="25" instruction_class="KEYWORD" instruction="INHERITANCE_KEYWORD">
       <node name="ColorWheelImageProducer" line="25" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
       </node>
     </node>
     <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="27" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="float" line="27" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="brights" line="27" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="28" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="28" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="isDiscrete" line="28" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="true" line="28" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
           </node>
         </node>
       </statement_node>
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="30" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="HSLHarmonicColorWheelImageProducer" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="30" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="w" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="30" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="h" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
           <node name="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION" line="0" instruction_class="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION" instruction="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION">
             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                 <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                   <node name="HSLRYBColorSystem" line="31" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="w" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="h" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="33" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="HSLHarmonicColorWheelImageProducer" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ColorSystem" line="33" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="sys" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="33" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="w" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="33" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="h" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
           <node name="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION" line="0" instruction_class="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION" instruction="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION">
             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                 <node name="sys" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="w" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="h" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="protected" line="38" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="generateLookupTables" line="38" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="39" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="isDiscrete" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="false" line="39" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="40" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="isDiscrete" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="generateDiscreteLookupTables" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="generateContiguousLookupTables" line="43" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="protected" line="47" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="generateContiguousLookupTables" line="47" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="48" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="radials" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="float" line="48" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="*" line="48" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="w" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="h" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="49" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="angulars" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="float" line="49" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="*" line="49" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="w" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="h" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="50" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="brights" line="50" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="float" line="50" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="*" line="50" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="w" line="50" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="h" line="50" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="51" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="alphas" line="51" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="int" line="51" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="*" line="51" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="w" line="51" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="h" line="51" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="52" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="radius" line="52" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="getRadius" line="52" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="55" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="blend" line="55" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="55" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="/" line="55" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="+" line="55" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="radius" line="55" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="2f" line="55" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                   <node name="radius" line="55" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="1f" line="55" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="58" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cx" line="58" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="58" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="w" line="58" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2" line="58" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="59" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cy" line="59" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="59" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="h" line="59" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2" line="59" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="61" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="61" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="x" line="61" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="61" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="61" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="x" line="61" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="w" line="61" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="x" line="61" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="62" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="kx" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="-" line="62" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="x" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="cx" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="63" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="squarekx" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="*" line="63" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="kx" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="kx" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="65" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="65" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="y" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="65" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="&lt;" line="65" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="y" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="h" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="y" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="int" line="66" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="ky" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="-" line="66" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="cy" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="y" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="int" line="68" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="index" line="68" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="+" line="68" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="x" line="68" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="*" line="68" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="y" line="68" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="w" line="68" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="float" line="69" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="r" line="69" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="/" line="69" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="float" line="69" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="Math" line="69" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="sqrt" line="69" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="69" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="squarekx" line="69" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="*" line="69" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                     <node name="ky" line="69" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ky" line="69" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="radius" line="69" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="float" line="70" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="sat" line="70" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="r" line="70" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="71" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="r" line="71" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1f" line="71" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="72" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="alphas" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="0xff000000" line="72" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="73" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="radials" line="73" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="73" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="1f" line="73" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="74" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="brights" line="74" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="74" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="-" line="74" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="1f" line="74" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                             <node name="sat" line="74" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="76" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="alphas" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                               <node name="int" line="76" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                               </node>
                               <node name="/" line="76" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                 <node name="*" line="76" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                   <node name="-" line="76" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="blend" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="Math" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="min" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="blend" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="-" line="76" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                             <node name="r" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="1f" line="76" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="255" line="76" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                                 <node name="blend" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <node name="24" line="76" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="77" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="radials" line="77" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="77" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="1f" line="77" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="78" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="brights" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="0" line="78" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="80" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="80" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="alphas" line="80" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="index" line="80" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="0" line="80" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="81" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="angulars" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                             <node name="float" line="81" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                             </node>
                             <node name="/" line="81" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                               <node name="/" line="81" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="Math" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="atan2" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="ky" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="kx" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="Math" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="PI" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                               <node name="2d" line="81" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="protected" line="87" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="generateDiscreteLookupTables" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="88" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="radials" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="float" line="88" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="*" line="88" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="w" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="h" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="89" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="angulars" line="89" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="float" line="89" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="*" line="89" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="w" line="89" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="h" line="89" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="90" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="brights" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="float" line="90" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="*" line="90" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="w" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="h" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="91" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="alphas" line="91" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="int" line="91" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="*" line="91" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="w" line="91" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="h" line="91" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="92" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="radius" line="92" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="getRadius" line="92" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="95" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="blend" line="95" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="95" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="/" line="95" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="+" line="95" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="radius" line="95" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="2f" line="95" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                   <node name="radius" line="95" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="1f" line="95" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="98" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cx" line="98" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="98" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="w" line="98" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2" line="98" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="99" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cy" line="99" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="99" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="h" line="99" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2" line="99" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="100" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="100" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="x" line="100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="100" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="100" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="x" line="100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="w" line="100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="x" line="100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="101" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="kx" line="101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="-" line="101" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="x" line="101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="cx" line="101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="102" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="squarekx" line="102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="*" line="102" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="kx" line="102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="kx" line="102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="104" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="104" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="y" line="104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="104" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="&lt;" line="104" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="y" line="104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="h" line="104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="y" line="104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="int" line="105" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="ky" line="105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="-" line="105" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="cy" line="105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="y" line="105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="int" line="107" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="index" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="+" line="107" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="x" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="*" line="107" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="y" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="w" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="float" line="108" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="r" line="108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="/" line="108" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="float" line="108" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="Math" line="108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="sqrt" line="108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="108" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="squarekx" line="108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="*" line="108" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                     <node name="ky" line="108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ky" line="108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="radius" line="108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="float" line="109" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="sat" line="109" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="r" line="109" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="110" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="r" line="110" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1f" line="110" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="111" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="alphas" line="111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="0xff000000" line="111" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="112" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="radials" line="112" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="112" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="1f" line="112" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="113" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="brights" line="113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="/" line="113" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                               <node name="float" line="113" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="Math" line="113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="round" line="113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="*" line="113" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                       <node name="-" line="113" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="1f" line="113" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                         </node>
                                         <node name="sat" line="113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="12f" line="113" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="12f" line="113" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="115" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="alphas" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                               <node name="int" line="115" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                               </node>
                               <node name="/" line="115" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                 <node name="*" line="115" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                   <node name="-" line="115" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="blend" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="Math" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="min" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="blend" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="-" line="115" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                             <node name="r" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="1f" line="115" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="255" line="115" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                                 <node name="blend" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <node name="24" line="115" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="116" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="radials" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="1f" line="116" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="117" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="brights" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="0f" line="117" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="119" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="119" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="alphas" line="119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="index" line="119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="0" line="119" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="120" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="angulars" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="index" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="/" line="120" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="Math" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="round" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="*" line="120" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                     <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                       <node name="float" line="120" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                       </node>
                                       <node name="/" line="120" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                         <node name="/" line="120" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="Math" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="atan2" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                 <node name="ky" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="kx" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="Math" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="PI" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                         </node>
                                         <node name="2d" line="120" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="12f" line="120" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="12f" line="120" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="127" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="generateColorWheel" line="127" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="128" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="radius" line="128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="float" line="128" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Math" line="128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="min" line="128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="w" line="128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="h" line="128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="129" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="129" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="index" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="129" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="129" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="index" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="pixels" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="index" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="130" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="130" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="alphas" line="130" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="index" line="130" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="0" line="130" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="131" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="pixels" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="index" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="|" line="131" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="alphas" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="index" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="&amp;" line="131" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                           <node name="0xffffff" line="131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="colorSystem" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="toRGB" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="angulars" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="index" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="radials" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="index" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="brights" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="index" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="newPixels" line="134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="135" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="isPixelsValid" line="135" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="false" line="135" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="protected" line="139" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Point" line="139" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getColorLocation" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Color" line="139" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="c" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="139" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="width" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="139" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="height" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="float" line="140" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="hsb" line="140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="float" line="140" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="3" line="140" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="141" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="hsb" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="colorSystem" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="toComponents" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="c" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getRGB" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="hsb" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="142" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="getColorLocation" line="142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="hsb" line="142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="hsb" line="142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="hsb" line="142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="2" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="width" line="142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="height" line="142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="145" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="protected" line="146" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Point" line="146" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getColorLocation" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="146" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="hue" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="146" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="saturation" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="146" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="brightness" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="146" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="width" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="146" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="height" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="147" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="radius" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="147" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Math" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="min" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="width" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="height" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="2f" line="147" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="148" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="radiusH" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="148" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="radius" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2f" line="148" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="150" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="saturation" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="Math" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="max" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="0f" line="150" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Math" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="min" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="1f" line="150" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                           <node name="saturation" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="151" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="brightness" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="Math" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="max" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="0f" line="151" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Math" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="min" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="1f" line="151" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                           <node name="brightness" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Point" line="153" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="p" line="153" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="154" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="p" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="Point" line="154" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="+" line="155" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="/" line="155" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="width" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="2" line="155" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="int" line="155" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="*" line="155" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="-" line="155" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="radius" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="*" line="155" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                               <node name="radius" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="brightness" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="Math" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="cos" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="*" line="155" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                   <node name="*" line="155" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                     <node name="hue" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="Math" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="PI" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                   <node name="2d" line="155" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="-" line="156" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="/" line="156" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="height" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="2" line="156" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="int" line="156" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="*" line="156" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="-" line="156" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="radius" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="*" line="156" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                               <node name="radius" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="brightness" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="Math" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="sin" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="*" line="156" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                   <node name="*" line="156" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                     <node name="hue" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="Math" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="PI" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                   <node name="2d" line="156" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="157" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="p" line="157" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="protected" line="161" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="float" line="161" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="getColorAt" line="161" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="161" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="x" line="161" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="161" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="y" line="161" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="161" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="width" line="161" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="161" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="height" line="161" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="-=" line="162" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="x" line="162" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="162" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="width" line="162" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2" line="162" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="-=" line="163" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="y" line="163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="163" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="height" line="163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2" line="163" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="164" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="r" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="float" line="164" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Math" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="sqrt" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="164" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="*" line="164" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="x" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="*" line="164" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="y" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="165" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="theta" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="float" line="165" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Math" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="atan2" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                         <node name="-" line="165" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="y" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <node name="x" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="166" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="radius" line="166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="166" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Math" line="166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="min" line="166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="width" line="166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="height" line="166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="2f" line="166" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="float" line="168" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="hsb" line="168" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="169" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="sat" line="169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="169" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                   <node name="float" line="169" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="r" line="169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="radius" line="169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="170" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="hue" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="float" line="170" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="/" line="170" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="/" line="170" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="theta" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Math" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="PI" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="2d" line="170" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="171" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="171" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="hue" line="171" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="171" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="+=" line="172" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="hue" line="172" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="1f" line="172" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="174" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="hsb" line="174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_INITIALIZED_ARRAY" line="0" instruction_class="NEW_INITIALIZED_ARRAY" instruction="NEW_INITIALIZED_ARRAY">
                 <node name="float" line="174" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="[" line="174" instruction_class="[" instruction="[">
                 </node>
                 <node name="ARRAY_INITIALIZER" line="0" instruction_class="ARRAY_INITIALIZER" instruction="ARRAY_INITIALIZER">
                   <node name="hue" line="175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="1f" line="176" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                   </node>
                   <node name="-" line="177" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="1f" line="177" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="sat" line="177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="180" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="hsb" line="180" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
     </node>
   </class_statement_node>
 </node>
</srcfile>