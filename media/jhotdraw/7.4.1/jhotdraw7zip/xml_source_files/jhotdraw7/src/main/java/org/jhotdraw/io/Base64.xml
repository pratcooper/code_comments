<?xml version="1.0" ?>
<srcfile name="Base64.java" file_path="/Users/valerio/Research/Code/Source Code Comments Classification/comments_classification/media/jhotdraw/7.4.1/jhotdraw7zip/extracted/jhotdraw7/src/main/java/org/jhotdraw/io/Base64.java" >
 <node name="COMPILATION_UNIT" line="0" instruction_class="COMPILATION_UNIT" instruction="COMPILATION_UNIT">
   <node name="PACKAGE_DECLARATION" line="0" instruction_class="KEYWORD" instruction="PACKAGE_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="1" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="1" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="io" line="1" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
       <node name="public" line="49" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
       </node>
     </node>
     <node name="Base64" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
     </node>
     <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="56" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="56" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="56" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="56" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="NO_OPTIONS" line="56" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="0" line="56" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="59" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="59" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="59" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="59" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="ENCODE" line="59" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="1" line="59" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="63" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="63" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="63" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="63" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="DECODE" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="0" line="63" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="67" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="67" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="67" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="67" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="GZIP" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="2" line="67" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="71" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="71" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="71" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="71" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="DONT_BREAK_LINES" line="71" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="8" line="71" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="78" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="78" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="78" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="78" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="MAX_LINE_LENGTH" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="76" line="78" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="82" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="82" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="82" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="byte" line="82" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="EQUALS_SIGN" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
             <node name="byte" line="82" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="&#039;=&#039;" line="82" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
             </node>
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="86" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="86" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="86" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="byte" line="86" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="NEW_LINE" line="86" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
             <node name="byte" line="86" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="&#039;\n&#039;" line="86" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
             </node>
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="90" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="90" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="90" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="90" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="PREFERRED_ENCODING" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="&quot;UTF-8&quot;" line="90" instruction_class="LITERAL" instruction="STRING_LITERAL">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="94" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="94" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="94" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="byte" line="94" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="ALPHABET" line="94" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="95" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="95" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="95" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="byte" line="95" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="_NATIVE_ALPHABET" line="95" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="ARRAY_INITIALIZER" line="0" instruction_class="ARRAY_INITIALIZER" instruction="ARRAY_INITIALIZER">
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="97" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;A&#039;" line="97" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="97" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;B&#039;" line="97" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="97" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;C&#039;" line="97" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="97" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;D&#039;" line="97" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="97" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;E&#039;" line="97" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="97" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;F&#039;" line="97" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="97" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;G&#039;" line="97" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="98" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;H&#039;" line="98" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="98" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;I&#039;" line="98" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="98" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;J&#039;" line="98" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="98" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;K&#039;" line="98" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="98" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;L&#039;" line="98" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="98" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;M&#039;" line="98" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="98" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;N&#039;" line="98" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="99" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;O&#039;" line="99" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="99" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;P&#039;" line="99" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="99" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;Q&#039;" line="99" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="99" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;R&#039;" line="99" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="99" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;S&#039;" line="99" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="99" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;T&#039;" line="99" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="99" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;U&#039;" line="99" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="100" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;V&#039;" line="100" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="100" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;W&#039;" line="100" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="100" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;X&#039;" line="100" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="100" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;Y&#039;" line="100" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="100" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;Z&#039;" line="100" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="101" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;a&#039;" line="101" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="101" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;b&#039;" line="101" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="101" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;c&#039;" line="101" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="101" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;d&#039;" line="101" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="101" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;e&#039;" line="101" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="101" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;f&#039;" line="101" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="101" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;g&#039;" line="101" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="102" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;h&#039;" line="102" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="102" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;i&#039;" line="102" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="102" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;j&#039;" line="102" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="102" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;k&#039;" line="102" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="102" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;l&#039;" line="102" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="102" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;m&#039;" line="102" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="102" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;n&#039;" line="102" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="103" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;o&#039;" line="103" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="103" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;p&#039;" line="103" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="103" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;q&#039;" line="103" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="103" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;r&#039;" line="103" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="103" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;s&#039;" line="103" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="103" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;t&#039;" line="103" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="103" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;u&#039;" line="103" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="104" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;v&#039;" line="104" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="104" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;w&#039;" line="104" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="104" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;x&#039;" line="104" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="104" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;y&#039;" line="104" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="104" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;z&#039;" line="104" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="105" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;0&#039;" line="105" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="105" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;1&#039;" line="105" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="105" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;2&#039;" line="105" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="105" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;3&#039;" line="105" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="105" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;4&#039;" line="105" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="105" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;5&#039;" line="105" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="106" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;6&#039;" line="106" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="106" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;7&#039;" line="106" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="106" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;8&#039;" line="106" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="106" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;9&#039;" line="106" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="106" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;+&#039;" line="106" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
               <node name="byte" line="106" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
               <node name="&#039;/&#039;" line="106" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
           </node>
         </node>
       </statement_node>
       <node name="STATIC_INITIALIZER" line="0" instruction_class="STATIC_INITIALIZER" instruction="STATIC_INITIALIZER">
         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="112" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="__bytes" line="112" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="113" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="115" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="__bytes" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;" line="115" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                       <node name="getBytes" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="PREFERRED_ENCODING" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="117" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="UnsupportedEncodingException" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="use" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="119" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="__bytes" line="119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="_NATIVE_ALPHABET" line="119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="121" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ALPHABET" line="121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="__bytes" line="121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="129" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="129" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="129" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="byte" line="129" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="DECODABET" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="ARRAY_INITIALIZER" line="0" instruction_class="ARRAY_INITIALIZER" instruction="ARRAY_INITIALIZER">
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="132" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="5" line="132" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="132" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="5" line="132" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="133" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="133" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="133" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="133" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="134" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="5" line="134" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="135" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="136" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="136" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="136" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="136" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="136" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="136" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="136" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="136" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="136" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="136" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="137" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="5" line="137" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="62" line="139" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="140" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="140" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="140" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="140" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="140" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="140" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="63" line="141" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="52" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="53" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="54" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="55" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="56" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="57" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="58" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="59" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="60" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="61" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="143" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="143" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="143" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="143" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="143" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="143" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="144" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="1" line="144" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="145" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="145" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="145" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="145" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="145" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="145" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="0" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="1" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="2" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="3" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="4" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="5" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="6" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="7" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="8" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="9" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="10" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="11" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="12" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="13" line="146" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="14" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="15" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="16" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="17" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="18" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="19" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="20" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="21" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="22" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="23" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="24" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="25" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="148" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="148" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="148" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="148" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="148" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="148" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="148" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="148" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="148" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="148" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="148" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="148" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="26" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="27" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="28" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="29" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="30" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="31" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="32" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="33" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="34" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="35" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="36" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="37" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="38" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="39" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="40" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="41" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="42" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="43" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="44" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="45" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="46" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="47" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="48" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="49" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="50" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="51" line="150" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="151" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="151" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="151" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="151" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="151" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="151" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="-" line="151" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="9" line="151" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="166" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="166" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="166" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="byte" line="166" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="WHITE_SPACE_ENC" line="166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
             <node name="-" line="166" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
               <node name="5" line="166" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="167" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="167" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="167" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="byte" line="167" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="EQUALS_SIGN_ENC" line="167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
             <node name="-" line="167" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
               <node name="1" line="167" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </node>
         </node>
       </statement_node>
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="171" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Base64" line="171" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="193" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="193" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="byte" line="193" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="encode3to4" line="193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="193" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="b4" line="193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="193" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="threeBytes" line="193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="193" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="numSigBytes" line="193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="encode3to4" line="195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="threeBytes" line="195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="195" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="numSigBytes" line="195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="b4" line="195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="195" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="196" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="b4" line="196" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="221" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="221" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="byte" line="221" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="encode3to4" line="221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="222" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="source" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="222" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="srcOffset" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="222" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="numSigBytes" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="223" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="destination" line="223" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="223" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="destOffset" line="223" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="236" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="inBuff" line="236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="|" line="238" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                 <node name="|" line="237" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                   <node name="?" line="236" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="&gt;" line="236" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="numSigBytes" line="236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="0" line="236" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                       <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="source" line="236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="srcOffset" line="236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="24" line="236" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="8" line="236" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <node name="0" line="236" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="?" line="237" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="&gt;" line="237" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="numSigBytes" line="237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1" line="237" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                       <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="source" line="237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="+" line="237" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="srcOffset" line="237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="237" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                         <node name="24" line="237" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="16" line="237" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <node name="0" line="237" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
                 <node name="?" line="238" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="&gt;" line="238" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="numSigBytes" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="2" line="238" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                     <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="source" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="+" line="238" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="srcOffset" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="2" line="238" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                       <node name="24" line="238" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <node name="24" line="238" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="0" line="238" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="switch" line="240" instruction_class="CONDITIONAL_STATEMENT" instruction="SWITCH_STATEMENT">
             <node name="numSigBytes" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
               <node name="case" line="242" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                 <node name="3" line="242" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="243" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="destOffset" line="243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="ALPHABET" line="243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                       <node name="inBuff" line="243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="18" line="243" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="244" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="244" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="destOffset" line="244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1" line="244" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="ALPHABET" line="244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&amp;" line="244" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="inBuff" line="244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="12" line="244" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="0x3f" line="244" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="245" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="245" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="destOffset" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="2" line="245" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="ALPHABET" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&amp;" line="245" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="inBuff" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="6" line="245" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="0x3f" line="245" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="246" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="246" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="destOffset" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="3" line="246" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="ALPHABET" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&amp;" line="246" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="inBuff" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="0x3f" line="246" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="return" line="247" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="destination" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </statement_node>
             </node>
             <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
               <node name="case" line="249" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                 <node name="2" line="249" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="250" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="250" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="destOffset" line="250" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="ALPHABET" line="250" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                       <node name="inBuff" line="250" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="18" line="250" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="251" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="251" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="251" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="destOffset" line="251" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1" line="251" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="ALPHABET" line="251" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&amp;" line="251" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="inBuff" line="251" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="12" line="251" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="0x3f" line="251" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="252" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="252" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="252" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="destOffset" line="252" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="2" line="252" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="ALPHABET" line="252" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&amp;" line="252" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="inBuff" line="252" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="6" line="252" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="0x3f" line="252" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="253" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="253" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="destOffset" line="253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="3" line="253" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <node name="EQUALS_SIGN" line="253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="return" line="254" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="destination" line="254" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </statement_node>
             </node>
             <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
               <node name="case" line="256" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                 <node name="1" line="256" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="257" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="destOffset" line="257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="ALPHABET" line="257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                       <node name="inBuff" line="257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="18" line="257" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="258" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="258" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="258" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="destOffset" line="258" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1" line="258" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="ALPHABET" line="258" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&amp;" line="258" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="inBuff" line="258" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="12" line="258" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="0x3f" line="258" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="259" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="259" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="destOffset" line="259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="2" line="259" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <node name="EQUALS_SIGN" line="259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="260" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="260" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="destOffset" line="260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="3" line="260" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <node name="EQUALS_SIGN" line="260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="return" line="261" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="destination" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </statement_node>
             </node>
             <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
               <node name="default" line="263" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
               </node>
               <statement_node name="return" line="264" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="destination" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </statement_node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="281" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="281" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="281" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="encodeObject" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="java" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="io" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="Serializable" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="serializableObject" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="283" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="encodeObject" line="283" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="serializableObject" line="283" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NO_OPTIONS" line="283" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="311" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="311" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="311" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="encodeObject" line="311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="java" line="311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="io" line="311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="Serializable" line="311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="serializableObject" line="311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="311" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="options" line="311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="java" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="io" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ByteArrayOutputStream" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="baos" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="314" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="java" line="315" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="io" line="315" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="OutputStream" line="315" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="b64os" line="315" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="315" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="java" line="316" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="io" line="316" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ObjectOutputStream" line="316" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="oos" line="316" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="316" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="317" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="util" line="317" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="zip" line="317" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="GZIPOutputStream" line="317" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="gzos" line="317" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="317" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="320" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="gzip" line="320" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="&amp;" line="320" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                 <node name="options" line="320" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="GZIP" line="320" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="321" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="dontBreakLines" line="321" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="&amp;" line="321" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                 <node name="options" line="321" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="DONT_BREAK_LINES" line="321" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="323" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="326" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="baos" line="326" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="java" line="326" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="io" line="326" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ByteArrayOutputStream" line="326" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="327" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="b64os" line="327" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Base64" line="327" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="OutputStream" line="327" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="baos" line="327" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="|" line="327" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                           <node name="ENCODE" line="327" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="dontBreakLines" line="327" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="330" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="330" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="gzip" line="330" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="GZIP" line="330" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="332" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="gzos" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="java" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="util" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="zip" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="GZIPOutputStream" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="b64os" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="333" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="oos" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="java" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="io" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ObjectOutputStream" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="gzos" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="336" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="oos" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="java" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="io" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ObjectOutputStream" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="b64os" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="oos" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="writeObject" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="serializableObject" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="340" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="IOException" line="340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="e" line="340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="e" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="printStackTrace" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="return" line="343" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                   <node name="null" line="343" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </statement_node>
               </statement_node>
             </node>
             <node name="finally" line="345" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="try" line="347" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="oos" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="close" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="347" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="347" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     </statement_node>
                   </node>
                 </statement_node>
                 <statement_node name="try" line="348" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="gzos" line="348" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="close" line="348" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="348" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="348" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="348" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     </statement_node>
                   </node>
                 </statement_node>
                 <statement_node name="try" line="349" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="b64os" line="349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="close" line="349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="349" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="349" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     </statement_node>
                   </node>
                 </statement_node>
                 <statement_node name="try" line="350" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="baos" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="close" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="350" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="350" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     </statement_node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="try" line="354" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="356" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                   <node name="String" line="356" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="baos" line="356" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="toByteArray" line="356" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="PREFERRED_ENCODING" line="356" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="358" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="UnsupportedEncodingException" line="358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="uue" line="358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="return" line="360" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="String" line="360" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="baos" line="360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="toByteArray" line="360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="374" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="374" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="374" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="encodeBytes" line="374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="374" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="source" line="374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="376" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="encodeBytes" line="376" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="source" line="376" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="376" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="source" line="376" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="length" line="376" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="NO_OPTIONS" line="376" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="401" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="401" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="401" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="encodeBytes" line="401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="401" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="source" line="401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="401" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="options" line="401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="403" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="encodeBytes" line="403" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="source" line="403" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="403" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="source" line="403" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="length" line="403" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="options" line="403" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="416" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="416" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="416" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="encodeBytes" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="416" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="source" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="416" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="off" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="416" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="len" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="418" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="encodeBytes" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="source" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="off" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="len" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NO_OPTIONS" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="445" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="445" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="445" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="encodeBytes" line="445" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="445" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="source" line="445" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="445" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="off" line="445" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="445" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="len" line="445" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="445" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="options" line="445" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="448" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="dontBreakLines" line="448" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="&amp;" line="448" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                 <node name="options" line="448" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="DONT_BREAK_LINES" line="448" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="449" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="gzip" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="&amp;" line="449" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                 <node name="options" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="GZIP" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="452" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="452" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="gzip" line="452" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="GZIP" line="452" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="454" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="454" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ByteArrayOutputStream" line="454" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="baos" line="454" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="454" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="java" line="455" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="util" line="455" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="zip" line="455" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="GZIPOutputStream" line="455" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="gzos" line="455" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="455" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Base64" line="456" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="OutputStream" line="456" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="b64os" line="456" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="456" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="try" line="459" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="462" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="baos" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="java" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="io" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ByteArrayOutputStream" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="463" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="b64os" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="Base64" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="OutputStream" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="baos" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="|" line="463" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                               <node name="ENCODE" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="dontBreakLines" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="464" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="gzos" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="java" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="util" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="zip" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="GZIPOutputStream" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="b64os" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="gzos" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="write" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="source" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="off" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="len" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="gzos" line="467" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="close" line="467" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <node name="catch" line="469" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                   <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="java" line="469" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="io" line="469" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="IOException" line="469" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="e" line="469" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="e" line="471" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="printStackTrace" line="471" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="return" line="472" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="null" line="472" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </statement_node>
                   </statement_node>
                 </node>
                 <node name="finally" line="474" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="try" line="476" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="gzos" line="476" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="close" line="476" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                       <node name="catch" line="476" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                         <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="Exception" line="476" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="e" line="476" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         </statement_node>
                       </node>
                     </statement_node>
                     <statement_node name="try" line="477" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="b64os" line="477" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="close" line="477" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                       <node name="catch" line="477" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                         <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="Exception" line="477" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="e" line="477" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         </statement_node>
                       </node>
                     </statement_node>
                     <statement_node name="try" line="478" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="baos" line="478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="close" line="478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                       <node name="catch" line="478" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                         <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="Exception" line="478" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="e" line="478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         </statement_node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </node>
               </statement_node>
               <statement_node name="try" line="482" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="484" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="String" line="484" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="baos" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="toByteArray" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="PREFERRED_ENCODING" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <node name="catch" line="486" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                   <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="java" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="io" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="UnsupportedEncodingException" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="uue" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="488" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="String" line="488" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="baos" line="488" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="toByteArray" line="488" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="boolean" line="496" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="breakLines" line="496" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="==" line="496" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="dontBreakLines" line="496" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="496" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="498" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="len43" line="498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="/" line="498" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="*" line="498" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="len" line="498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="4" line="498" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <node name="3" line="498" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="byte" line="499" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="outBuff" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="byte" line="499" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="+" line="501" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="+" line="500" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="len43" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="?" line="500" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                           <node name="&gt;" line="500" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                             <node name="%" line="500" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                               <node name="len" line="500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="3" line="500" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <node name="0" line="500" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="4" line="500" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                           <node name="0" line="500" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                       <node name="?" line="501" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                         <node name="breakLines" line="501" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="/" line="501" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="len43" line="501" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="MAX_LINE_LENGTH" line="501" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="0" line="501" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="502" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="d" line="502" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="502" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="503" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="e" line="503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="503" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="504" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="len2" line="504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="-" line="504" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="len" line="504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="2" line="504" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="505" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="lineLength" line="505" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="505" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="506" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="&lt;" line="506" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="d" line="506" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="len2" line="506" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+=" line="506" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="d" line="506" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="3" line="506" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="+=" line="506" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="e" line="506" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="4" line="506" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="encode3to4" line="508" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="source" line="508" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="+" line="508" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="d" line="508" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="off" line="508" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="3" line="508" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                           <node name="outBuff" line="508" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="e" line="508" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="+=" line="510" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="lineLength" line="510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="4" line="510" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="511" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&amp;&amp;" line="511" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="breakLines" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="==" line="511" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="lineLength" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="MAX_LINE_LENGTH" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="513" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="outBuff" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="+" line="513" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="e" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="4" line="513" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                           <node name="NEW_LINE" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                           <node name="e" line="514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="515" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="lineLength" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="515" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="519" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&lt;" line="519" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="d" line="519" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="len" line="519" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="encode3to4" line="521" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="source" line="521" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="+" line="521" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="d" line="521" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="off" line="521" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="-" line="521" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="len" line="521" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="d" line="521" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="outBuff" line="521" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="e" line="521" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="+=" line="522" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="e" line="522" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="4" line="522" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="try" line="527" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="529" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="String" line="529" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="outBuff" line="529" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="529" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                           <node name="e" line="529" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="PREFERRED_ENCODING" line="529" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <node name="catch" line="531" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                   <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="java" line="531" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="io" line="531" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="UnsupportedEncodingException" line="531" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="uue" line="531" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="533" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="String" line="533" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="outBuff" line="533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="0" line="533" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                             <node name="e" line="533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="569" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="569" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="569" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="decode4to3" line="569" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="569" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="source" line="569" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="569" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="srcOffset" line="569" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="569" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="destination" line="569" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="569" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="destOffset" line="569" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="572" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="572" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="source" line="572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="+" line="572" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="srcOffset" line="572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="2" line="572" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
               <node name="EQUALS_SIGN" line="572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="577" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="outBuff" line="577" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="|" line="578" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                     <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                       <node name="&amp;" line="577" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="DECODABET" line="577" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="source" line="577" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="srcOffset" line="577" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <node name="0xFF" line="577" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="18" line="577" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                       <node name="&amp;" line="578" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="DECODABET" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="source" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="+" line="578" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="srcOffset" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="1" line="578" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="0xFF" line="578" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="12" line="578" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="580" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="destination" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="destOffset" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="byte" line="580" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                       <node name="outBuff" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="16" line="580" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="return" line="581" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="1" line="581" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="585" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="==" line="585" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                   <node name="source" line="585" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="+" line="585" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="srcOffset" line="585" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="3" line="585" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
                 <node name="EQUALS_SIGN" line="585" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="591" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="outBuff" line="591" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="|" line="593" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="|" line="592" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                         <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                           <node name="&amp;" line="591" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="DECODABET" line="591" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="source" line="591" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="srcOffset" line="591" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <node name="0xFF" line="591" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="18" line="591" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                           <node name="&amp;" line="592" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="DECODABET" line="592" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="source" line="592" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="+" line="592" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="srcOffset" line="592" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="1" line="592" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="0xFF" line="592" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="12" line="592" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                       <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="&amp;" line="593" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="DECODABET" line="593" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="source" line="593" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="+" line="593" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="srcOffset" line="593" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="2" line="593" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="0xFF" line="593" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="6" line="593" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="595" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                       <node name="destination" line="595" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="destOffset" line="595" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                       <node name="byte" line="595" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="outBuff" line="595" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="16" line="595" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="596" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                       <node name="destination" line="596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="+" line="596" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="destOffset" line="596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="1" line="596" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                     <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                       <node name="byte" line="596" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="UNSIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="outBuff" line="596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="8" line="596" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="return" line="597" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                   <node name="2" line="597" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="try" line="603" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="609" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="outBuff" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="|" line="612" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                           <node name="|" line="611" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                             <node name="|" line="610" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                               <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                 <node name="&amp;" line="609" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                     <node name="DECODABET" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                       <node name="source" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="srcOffset" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                   <node name="0xFF" line="609" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                                 <node name="18" line="609" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                 <node name="&amp;" line="610" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                     <node name="DECODABET" line="610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                       <node name="source" line="610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="+" line="610" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="srcOffset" line="610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="1" line="610" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="0xFF" line="610" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                                 <node name="12" line="610" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                             <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                               <node name="&amp;" line="611" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="DECODABET" line="611" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                     <node name="source" line="611" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="+" line="611" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="srcOffset" line="611" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="2" line="611" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                                 <node name="0xFF" line="611" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <node name="6" line="611" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                           <node name="&amp;" line="612" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="DECODABET" line="612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="source" line="612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="+" line="612" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="srcOffset" line="612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="3" line="612" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="0xFF" line="612" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="615" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="destination" line="615" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="destOffset" line="615" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="byte" line="615" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                           <node name="SIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                             <node name="outBuff" line="615" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="16" line="615" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="616" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="destination" line="616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="+" line="616" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="destOffset" line="616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="616" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="byte" line="616" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                           <node name="SIGNED_RIGHT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                             <node name="outBuff" line="616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="8" line="616" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="617" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="destination" line="617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="+" line="617" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="destOffset" line="617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="2" line="617" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="byte" line="617" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                           <node name="outBuff" line="617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="return" line="619" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="3" line="619" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="620" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="620" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="620" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="System" line="621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="out" line="621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="println" line="621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="621" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="+" line="621" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="621" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="&quot;&quot;" line="621" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                       <node name="source" line="621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="srcOffset" line="621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                   <node name="&quot;: &quot;" line="621" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="DECODABET" line="621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                     <node name="source" line="621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="srcOffset" line="621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="System" line="622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="out" line="622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="println" line="622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="622" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="+" line="622" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="622" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="&quot;&quot;" line="622" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                       <node name="source" line="622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="+" line="622" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="srcOffset" line="622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="1" line="622" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="&quot;: &quot;" line="622" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="DECODABET" line="622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                     <node name="source" line="622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="+" line="622" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="srcOffset" line="622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="1" line="622" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="System" line="623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="out" line="623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="println" line="623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="623" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="+" line="623" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="623" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="&quot;&quot;" line="623" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                       <node name="source" line="623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="+" line="623" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="srcOffset" line="623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="2" line="623" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="&quot;: &quot;" line="623" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="DECODABET" line="623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                     <node name="source" line="623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="+" line="623" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="srcOffset" line="623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="2" line="623" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="System" line="624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="out" line="624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="println" line="624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="624" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="+" line="624" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="624" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="&quot;&quot;" line="624" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                       <node name="source" line="624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="+" line="624" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="srcOffset" line="624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="3" line="624" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="&quot;: &quot;" line="624" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="DECODABET" line="624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                     <node name="source" line="624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="+" line="624" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="srcOffset" line="624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="3" line="624" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="return" line="625" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                         <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                           <node name="-" line="625" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="1" line="625" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="644" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="644" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="byte" line="644" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="decode" line="644" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="644" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="source" line="644" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="644" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="off" line="644" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="644" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="len" line="644" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="646" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="len34" line="646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="646" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="*" line="646" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="len" line="646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="3" line="646" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <node name="4" line="646" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="647" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="outBuff" line="647" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="byte" line="647" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="len34" line="647" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="648" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="outBuffPosn" line="648" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="648" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="650" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="b4" line="650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="byte" line="650" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="4" line="650" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="651" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="b4Posn" line="651" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="651" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="652" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="i" line="652" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="652" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="byte" line="653" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="sbiCrop" line="653" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="653" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="byte" line="654" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="sbiDecode" line="654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="654" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="655" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="=" line="655" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="i" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="off" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="&lt;" line="655" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="+" line="655" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="off" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="len" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="657" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="sbiCrop" line="657" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="byte" line="657" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="&amp;" line="657" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="source" line="657" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="657" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="0x7f" line="657" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="658" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="sbiDecode" line="658" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="DECODABET" line="658" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="sbiCrop" line="658" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="660" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="sbiDecode" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="WHITE_SPACE_ENC" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="662" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="sbiDecode" line="662" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="EQUALS_SIGN_ENC" line="662" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="664" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="b4" line="664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                               <node name="b4Posn" line="664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="sbiCrop" line="664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="665" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="&gt;" line="665" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                           <node name="b4Posn" line="665" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3" line="665" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="+=" line="667" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="outBuffPosn" line="667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="decode4to3" line="667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="b4" line="667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="0" line="667" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                     <node name="outBuff" line="667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="outBuffPosn" line="667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="668" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="b4Posn" line="668" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="0" line="668" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="if" line="671" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="==" line="671" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="sbiCrop" line="671" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="EQUALS_SIGN" line="671" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <statement_node name="break" line="672" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="System" line="680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="err" line="680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="println" line="680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="+" line="680" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="+" line="680" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="+" line="680" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="+" line="680" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="&quot;Bad Base64 input character at &quot;" line="680" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                   <node name="i" line="680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="&quot;: &quot;" line="680" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="source" line="680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="i" line="680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <node name="&quot;(decimal)&quot;" line="680" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="return" line="681" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="null" line="681" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="685" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="out" line="685" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="byte" line="685" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="outBuffPosn" line="685" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="System" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="arraycopy" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="outBuff" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="686" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="out" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="686" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="outBuffPosn" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="687" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="out" line="687" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="701" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="701" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="byte" line="701" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="decode" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="701" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="s" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="703" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bytes" line="703" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="704" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="706" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="bytes" line="706" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="s" line="706" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getBytes" line="706" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="PREFERRED_ENCODING" line="706" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="708" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="708" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="708" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="UnsupportedEncodingException" line="708" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="uee" line="708" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="710" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="bytes" line="710" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="s" line="710" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getBytes" line="710" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="715" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="bytes" line="715" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="decode" line="715" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="bytes" line="715" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="715" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="bytes" line="715" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="715" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="720" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="720" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="720" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="bytes" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="720" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="bytes" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="4" line="720" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="723" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="head" line="723" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="|" line="723" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                     <node name="&amp;" line="723" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="int" line="723" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bytes" line="723" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="723" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                       <node name="0xff" line="723" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <node name="&amp;" line="723" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bytes" line="723" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="723" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="8" line="723" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="0xff00" line="723" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="724" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="724" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="java" line="724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="util" line="724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="zip" line="724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="GZIPInputStream" line="724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="GZIP_MAGIC" line="724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="head" line="724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="java" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="io" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ByteArrayInputStream" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="bais" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="null" line="726" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="java" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="util" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="zip" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="GZIPInputStream" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="gzis" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="null" line="727" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="java" line="728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="io" line="728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ByteArrayOutputStream" line="728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="baos" line="728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="null" line="728" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                       <node name="byte" line="729" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="buffer" line="729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                         <node name="byte" line="729" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="2048" line="729" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="int" line="730" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="length" line="730" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="0" line="730" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="try" line="732" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="734" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="baos" line="734" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="java" line="734" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="io" line="734" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ByteArrayOutputStream" line="734" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="735" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="bais" line="735" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="java" line="735" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="io" line="735" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ByteArrayInputStream" line="735" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="bytes" line="735" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="736" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="gzis" line="736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="java" line="736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="util" line="736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="zip" line="736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="GZIPInputStream" line="736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="bais" line="736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="while" line="738" instruction_class="LOOP_STATEMENT" instruction="WHILE_STATEMENT">
                         <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                           <node name="=" line="738" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                             <node name="length" line="738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="gzis" line="738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="read" line="738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="buffer" line="738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="0" line="738" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="baos" line="740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="write" line="740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="buffer" line="740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="0" line="740" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                   <node name="length" line="740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="744" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="bytes" line="744" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="baos" line="744" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="toByteArray" line="744" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <node name="catch" line="747" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                       <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="java" line="747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="io" line="747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="IOException" line="747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="e" line="747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       </statement_node>
                     </node>
                     <node name="finally" line="751" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="try" line="753" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="baos" line="753" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="close" line="753" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                           <node name="catch" line="753" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                             <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="Exception" line="753" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="e" line="753" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             </statement_node>
                           </node>
                         </statement_node>
                         <statement_node name="try" line="754" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="gzis" line="754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="close" line="754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                           <node name="catch" line="754" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                             <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="Exception" line="754" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="e" line="754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             </statement_node>
                           </node>
                         </statement_node>
                         <statement_node name="try" line="755" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="bais" line="755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="close" line="755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                           <node name="catch" line="755" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                             <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="Exception" line="755" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="e" line="755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             </statement_node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="761" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="bytes" line="761" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="775" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="775" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Object" line="775" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="decodeToObject" line="775" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="775" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="encodedObject" line="775" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="778" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="objBytes" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="decode" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="encodedObject" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="java" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="io" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ByteArrayInputStream" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bais" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="780" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="java" line="781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="io" line="781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ObjectInputStream" line="781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="ois" line="781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="781" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Object" line="782" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="obj" line="782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="782" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="784" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="786" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="bais" line="786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="java" line="786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="io" line="786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ByteArrayInputStream" line="786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="objBytes" line="786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="787" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ois" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="java" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="io" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ObjectInputStream" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="bais" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="789" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="obj" line="789" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="ois" line="789" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="readObject" line="789" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="791" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="791" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="791" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="IOException" line="791" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="e" line="791" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="e" line="793" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="printStackTrace" line="793" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="794" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="obj" line="794" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="null" line="794" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
             <node name="catch" line="796" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="796" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="lang" line="796" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ClassNotFoundException" line="796" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="e" line="796" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="e" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="printStackTrace" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="799" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="obj" line="799" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="null" line="799" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
             <node name="finally" line="801" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="try" line="803" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="bais" line="803" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="close" line="803" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="803" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="803" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="803" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     </statement_node>
                   </node>
                 </statement_node>
                 <statement_node name="try" line="804" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="ois" line="804" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="close" line="804" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="804" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="804" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="804" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     </statement_node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="return" line="807" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="obj" line="807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="821" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="821" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="821" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="encodeToFile" line="821" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="821" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="dataToEncode" line="821" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="821" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="filename" line="821" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="823" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="success" line="823" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="false" line="823" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Base64" line="824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="OutputStream" line="824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bos" line="824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="824" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="825" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="827" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="bos" line="827" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Base64" line="827" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="OutputStream" line="827" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="java" line="828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="io" line="828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="FileOutputStream" line="828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="filename" line="828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="Base64" line="828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ENCODE" line="828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="bos" line="829" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="write" line="829" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="dataToEncode" line="829" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="830" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="success" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="true" line="830" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="832" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="IOException" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="e" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="835" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="success" line="835" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="false" line="835" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
             <node name="finally" line="837" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="try" line="839" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="bos" line="839" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="close" line="839" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="839" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="839" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="839" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     </statement_node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="return" line="842" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="success" line="842" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="855" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="855" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="855" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="decodeToFile" line="855" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="855" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="dataToDecode" line="855" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="855" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="filename" line="855" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="857" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="success" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="false" line="857" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Base64" line="858" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="OutputStream" line="858" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bos" line="858" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="858" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="859" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="861" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="bos" line="861" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Base64" line="861" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="OutputStream" line="861" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="java" line="862" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="io" line="862" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="FileOutputStream" line="862" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="filename" line="862" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="Base64" line="862" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="DECODE" line="862" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="bos" line="863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="write" line="863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="dataToDecode" line="863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getBytes" line="863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="PREFERRED_ENCODING" line="863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="864" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="success" line="864" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="true" line="864" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="866" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="866" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="866" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="IOException" line="866" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="e" line="866" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="868" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="success" line="868" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="false" line="868" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
             <node name="finally" line="870" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="try" line="872" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="bos" line="872" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="close" line="872" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="872" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="872" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="872" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     </statement_node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="return" line="875" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="success" line="875" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="890" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="890" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="byte" line="890" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="decodeFromFile" line="890" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="890" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="filename" line="890" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="892" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="decodedData" line="892" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="892" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Base64" line="893" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="InputStream" line="893" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bis" line="893" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="893" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="894" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="File" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="file" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="java" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="io" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="File" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="filename" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="byte" line="898" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="buffer" line="898" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="898" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="899" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="length" line="899" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="899" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="900" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="numBytes" line="900" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="900" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="903" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&gt;" line="903" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="file" line="903" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="903" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Integer" line="903" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="MAX_VALUE" line="903" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="System" line="905" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="err" line="905" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="println" line="905" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="+" line="905" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="+" line="905" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="&quot;File is too big for this convenience method (&quot;" line="905" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="file" line="905" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="length" line="905" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </node>
                             <node name="&quot; bytes).&quot;" line="905" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="return" line="906" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="null" line="906" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="908" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="buffer" line="908" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="byte" line="908" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                       <node name="int" line="908" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="file" line="908" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="length" line="908" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="911" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="bis" line="911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Base64" line="911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="InputStream" line="911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="java" line="912" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="io" line="912" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="BufferedInputStream" line="912" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="java" line="913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="io" line="913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="FileInputStream" line="913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="file" line="913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="Base64" line="913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="DECODE" line="913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="while" line="916" instruction_class="LOOP_STATEMENT" instruction="WHILE_STATEMENT">
                 <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="=" line="916" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="numBytes" line="916" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="bis" line="916" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="read" line="916" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="buffer" line="916" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="length" line="916" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="4096" line="916" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="0" line="916" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="+=" line="917" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="length" line="917" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="numBytes" line="917" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="920" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="decodedData" line="920" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="byte" line="920" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="length" line="920" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="System" line="921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="arraycopy" line="921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="buffer" line="921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="0" line="921" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                       <node name="decodedData" line="921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="0" line="921" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                       <node name="length" line="921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="924" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="924" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="924" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="IOException" line="924" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="e" line="924" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="System" line="926" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="err" line="926" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="println" line="926" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="+" line="926" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="&quot;Error decoding from file &quot;" line="926" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="filename" line="926" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
             <node name="finally" line="928" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="try" line="930" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="bis" line="930" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="close" line="930" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="930" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="930" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="930" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     </statement_node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="return" line="933" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="decodedData" line="933" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="947" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="947" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="947" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="encodeFromFile" line="947" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="947" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="filename" line="947" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="949" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="encodedData" line="949" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="949" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Base64" line="950" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="InputStream" line="950" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bis" line="950" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="950" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="951" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="954" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="954" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="File" line="954" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="file" line="954" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="java" line="954" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="io" line="954" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="File" line="954" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="filename" line="954" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="byte" line="955" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="buffer" line="955" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="byte" line="955" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                       <node name="int" line="955" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="*" line="955" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="file" line="955" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="length" line="955" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="1.4" line="955" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="956" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="length" line="956" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="956" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="957" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="numBytes" line="957" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="957" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="960" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="bis" line="960" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Base64" line="960" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="InputStream" line="960" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="java" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="io" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="BufferedInputStream" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="java" line="962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="io" line="962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="FileInputStream" line="962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="file" line="962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="Base64" line="962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ENCODE" line="962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="while" line="965" instruction_class="LOOP_STATEMENT" instruction="WHILE_STATEMENT">
                 <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="=" line="965" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="numBytes" line="965" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="bis" line="965" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="read" line="965" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="buffer" line="965" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="length" line="965" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="4096" line="965" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="0" line="965" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="+=" line="966" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="length" line="966" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="numBytes" line="966" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="969" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="encodedData" line="969" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="String" line="969" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="buffer" line="969" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="969" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="length" line="969" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="Base64" line="969" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="PREFERRED_ENCODING" line="969" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="972" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="972" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="972" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="IOException" line="972" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="e" line="972" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="System" line="974" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="err" line="974" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="println" line="974" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="+" line="974" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="&quot;Error encoding from file &quot;" line="974" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="filename" line="974" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
             <node name="finally" line="976" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="try" line="978" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="bis" line="978" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="close" line="978" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <node name="catch" line="978" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                     <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="Exception" line="978" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="e" line="978" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     </statement_node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="return" line="981" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="encodedData" line="981" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="999" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="999" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="InputStream" line="999" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="extends" line="999" instruction_class="KEYWORD" instruction="INHERITANCE_KEYWORD">
           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
               <node name="java" line="999" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="io" line="999" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="FilterInputStream" line="999" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1001" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="boolean" line="1001" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="encode" line="1001" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1002" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="int" line="1002" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="position" line="1002" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1003" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="1003" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="buffer" line="1003" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1004" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="int" line="1004" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bufferLength" line="1004" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1005" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="int" line="1005" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="numSigBytes" line="1005" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1006" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="int" line="1006" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="lineLength" line="1006" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1007" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="boolean" line="1007" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="breakLines" line="1007" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1016" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="InputStream" line="1016" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="1016" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="1016" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="InputStream" line="1016" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="in" line="1016" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
               <node name="ALTERNATE_CONSTRUCTOR_INVOCATION" line="0" instruction_class="ALTERNATE_CONSTRUCTOR_INVOCATION" instruction="ALTERNATE_CONSTRUCTOR_INVOCATION">
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="in" line="1018" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="DECODE" line="1018" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1043" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="InputStream" line="1043" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="1043" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="1043" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="InputStream" line="1043" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="in" line="1043" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="1043" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="options" line="1043" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
               <node name="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION" line="0" instruction_class="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION" instruction="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION">
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="in" line="1045" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1046" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="breakLines" line="1046" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="!=" line="1046" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="&amp;" line="1046" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="options" line="1046" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="DONT_BREAK_LINES" line="1046" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="DONT_BREAK_LINES" line="1046" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1047" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="encode" line="1047" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="==" line="1047" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="&amp;" line="1047" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="options" line="1047" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ENCODE" line="1047" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ENCODE" line="1047" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1048" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="bufferLength" line="1048" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="?" line="1048" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="encode" line="1048" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="4" line="1048" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="3" line="1048" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1049" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="buffer" line="1049" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="byte" line="1049" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="bufferLength" line="1049" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1050" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="position" line="1050" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                     <node name="-" line="1050" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="1" line="1050" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1051" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="lineLength" line="1051" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="0" line="1051" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1061" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="int" line="1061" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="read" line="1061" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
             </node>
             <node name="throws" line="1061" instruction_class="throws" instruction="throws">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="1061" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="io" line="1061" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="IOException" line="1061" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="if" line="1064" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&lt;" line="1064" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="position" line="1064" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="1064" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="1066" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="encode" line="1066" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                           <node name="byte" line="1068" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="b3" line="1068" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                             <node name="byte" line="1068" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                             </node>
                             <node name="3" line="1068" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="int" line="1069" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="numBinaryBytes" line="1069" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="1069" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="for" line="1070" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                         <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                           <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                             <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="int" line="1070" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                               </node>
                               <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                 <node name="i" line="1070" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="0" line="1070" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </statement_node>
                           </node>
                           <node name="&lt;" line="1070" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                             <node name="i" line="1070" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="3" line="1070" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                                 <node name="i" line="1070" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="try" line="1072" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                                 </node>
                                 <node name="int" line="1074" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                 </node>
                                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                   <node name="b" line="1074" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="in" line="1074" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="read" line="1074" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                               <statement_node name="if" line="1077" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                 <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                                   <node name="b" line="1077" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="0" line="1077" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="=" line="1079" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                         <node name="b3" line="1079" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="i" line="1079" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                         <node name="byte" line="1079" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                         </node>
                                         <node name="b" line="1079" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                                       <node name="numBinaryBytes" line="1080" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                             <node name="catch" line="1084" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                                 </node>
                                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="java" line="1084" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="io" line="1084" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="IOException" line="1084" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="e" line="1084" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                 <statement_node name="if" line="1087" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                   <node name="==" line="1087" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                     <node name="i" line="1087" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="0" line="1087" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                   <statement_node name="throw" line="1088" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                                     <node name="e" line="1088" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="if" line="1093" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="&gt;" line="1093" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                           <node name="numBinaryBytes" line="1093" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="1093" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="encode3to4" line="1095" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="b3" line="1095" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="0" line="1095" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                   <node name="numBinaryBytes" line="1095" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="buffer" line="1095" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="0" line="1095" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="1096" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="position" line="1096" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="0" line="1096" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="1097" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="numSigBytes" line="1097" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="4" line="1097" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="return" line="1101" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                               <node name="-" line="1101" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="1" line="1101" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                           <node name="byte" line="1108" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="b4" line="1108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                             <node name="byte" line="1108" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                             </node>
                             <node name="4" line="1108" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="int" line="1109" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="i" line="1109" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="1109" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="for" line="1110" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                         <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                           <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="=" line="1110" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                 <node name="i" line="1110" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="0" line="1110" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="&lt;" line="1110" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                             <node name="i" line="1110" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="4" line="1110" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                                 <node name="i" line="1110" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="int" line="1113" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="b" line="1113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="0" line="1113" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="do" line="1114" instruction_class="LOOP_STATEMENT" instruction="DOWHILE_STATEMENT">
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="=" line="1114" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                   <node name="b" line="1114" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="in" line="1114" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="read" line="1114" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                             <node name="&amp;&amp;" line="1115" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                               <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                                 <node name="b" line="1115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="0" line="1115" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="DECODABET" line="1115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="&amp;" line="1115" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                     <node name="b" line="1115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="0x7f" line="1115" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                                 <node name="WHITE_SPACE_ENC" line="1115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="if" line="1117" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="&lt;" line="1117" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                               <node name="b" line="1117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="0" line="1117" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <statement_node name="break" line="1118" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                             </statement_node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="1120" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="b4" line="1120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="i" line="1120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                 <node name="byte" line="1120" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                 </node>
                                 <node name="b" line="1120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="if" line="1123" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="==" line="1123" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="i" line="1123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="4" line="1123" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="1125" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="numSigBytes" line="1125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="decode4to3" line="1125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="b4" line="1125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="0" line="1125" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                     <node name="buffer" line="1125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="0" line="1125" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="1126" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="position" line="1126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="0" line="1126" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="if" line="1128" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                           <node name="==" line="1128" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                             <node name="i" line="1128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="0" line="1128" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="return" line="1129" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                                 <node name="-" line="1129" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="1" line="1129" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="throw" line="1134" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="java" line="1134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="io" line="1134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="IOException" line="1134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="&quot;Improperly padded Base64 input.&quot;" line="1134" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="1141" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="position" line="1141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="1141" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="1144" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="position" line="1144" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="numSigBytes" line="1144" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="return" line="1145" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                         <node name="-" line="1145" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="1" line="1145" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="1147" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&amp;&amp;" line="1147" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="&amp;&amp;" line="1147" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                         <node name="encode" line="1147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="breakLines" line="1147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                         <node name="lineLength" line="1147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="MAX_LINE_LENGTH" line="1147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1149" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="lineLength" line="1149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="1149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="return" line="1150" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                         <node name="&#039;\n&#039;" line="1150" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                           <node name="lineLength" line="1154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="int" line="1158" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="b" line="1158" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="buffer" line="1158" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                               <node name="position" line="1158" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1160" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                           <node name="position" line="1160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="bufferLength" line="1160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="=" line="1161" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                             <node name="position" line="1161" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                               <node name="-" line="1161" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="1" line="1161" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="return" line="1163" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                         <node name="&amp;" line="1163" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                           <node name="b" line="1163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0xFF" line="1163" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="throw" line="1172" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="java" line="1172" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="io" line="1172" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="IOException" line="1172" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;Error in Base64 code reading stream.&quot;" line="1172" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1189" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="int" line="1189" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="read" line="1189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="byte" line="1189" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                 </node>
                 <node name="dest" line="1189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="1189" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="off" line="1189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="1189" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="len" line="1189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="throws" line="1189" instruction_class="throws" instruction="throws">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="1189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="io" line="1189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="IOException" line="1189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="1191" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="i" line="1191" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="1192" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="b" line="1192" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="1193" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="=" line="1193" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="i" line="1193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="1193" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="&lt;" line="1193" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="i" line="1193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="len" line="1193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="i" line="1193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="1195" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="b" line="1195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="read" line="1195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="1200" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="b" line="1200" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="0" line="1200" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1201" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="dest" line="1201" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="+" line="1201" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="off" line="1201" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="i" line="1201" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="byte" line="1201" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                           <node name="b" line="1201" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1202" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="==" line="1202" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="i" line="1202" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="1202" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <statement_node name="return" line="1203" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                         <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                           <node name="-" line="1203" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="1" line="1203" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="break" line="1205" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="return" line="1207" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="i" line="1207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </statement_node>
             </statement_node>
           </method_statement_node>
         </node>
       </class_statement_node>
       <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="1229" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="1229" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="OutputStream" line="1229" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="extends" line="1229" instruction_class="KEYWORD" instruction="INHERITANCE_KEYWORD">
           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
               <node name="java" line="1229" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="io" line="1229" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="FilterOutputStream" line="1229" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1231" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="boolean" line="1231" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="encode" line="1231" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1232" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="int" line="1232" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="position" line="1232" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1233" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="1233" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="buffer" line="1233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1234" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="int" line="1234" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bufferLength" line="1234" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1235" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="int" line="1235" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="lineLength" line="1235" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1236" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="boolean" line="1236" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="breakLines" line="1236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1237" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="1237" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="b4" line="1237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="1238" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="boolean" line="1238" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="suspendEncoding" line="1238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1246" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="OutputStream" line="1246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="1246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="1246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="OutputStream" line="1246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="out" line="1246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
               <node name="ALTERNATE_CONSTRUCTOR_INVOCATION" line="0" instruction_class="ALTERNATE_CONSTRUCTOR_INVOCATION" instruction="ALTERNATE_CONSTRUCTOR_INVOCATION">
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="out" line="1248" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ENCODE" line="1248" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1272" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="OutputStream" line="1272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="java" line="1272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="io" line="1272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="OutputStream" line="1272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="out" line="1272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="1272" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="options" line="1272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
               <node name="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION" line="0" instruction_class="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION" instruction="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION">
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="out" line="1274" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1275" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="breakLines" line="1275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="!=" line="1275" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="&amp;" line="1275" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="options" line="1275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="DONT_BREAK_LINES" line="1275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="DONT_BREAK_LINES" line="1275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1276" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="encode" line="1276" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="==" line="1276" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="&amp;" line="1276" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                       <node name="options" line="1276" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ENCODE" line="1276" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ENCODE" line="1276" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1277" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="bufferLength" line="1277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="?" line="1277" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="encode" line="1277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="3" line="1277" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="4" line="1277" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1278" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="buffer" line="1278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="byte" line="1278" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="bufferLength" line="1278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1279" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="position" line="1279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="0" line="1279" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1280" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="lineLength" line="1280" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="0" line="1280" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1281" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="suspendEncoding" line="1281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="false" line="1281" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1282" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="b4" line="1282" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="byte" line="1282" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="4" line="1282" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1298" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
             </node>
             <node name="write" line="1298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="1298" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="theByte" line="1298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="throws" line="1298" instruction_class="throws" instruction="throws">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="1298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="io" line="1298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="IOException" line="1298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="if" line="1301" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="suspendEncoding" line="1301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                           </node>
                           <node name="out" line="1303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="write" line="1303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="theByte" line="1303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="return" line="1304" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="1308" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="encode" line="1308" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="1310" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="buffer" line="1310" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                           <node name="position" line="1310" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="byte" line="1310" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="theByte" line="1310" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="1311" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="position" line="1311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="bufferLength" line="1311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="out" line="1313" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="write" line="1313" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="encode3to4" line="1313" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="b4" line="1313" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="buffer" line="1313" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="bufferLength" line="1313" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="+=" line="1315" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="lineLength" line="1315" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="4" line="1315" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1316" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="&amp;&amp;" line="1316" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                           <node name="breakLines" line="1316" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                             <node name="lineLength" line="1316" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="MAX_LINE_LENGTH" line="1316" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="out" line="1318" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="write" line="1318" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="NEW_LINE" line="1318" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="1319" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="lineLength" line="1319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="0" line="1319" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1322" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="position" line="1322" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="1322" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="1330" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&gt;" line="1330" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="DECODABET" line="1330" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&amp;" line="1330" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                           <node name="theByte" line="1330" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0x7f" line="1330" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                       <node name="WHITE_SPACE_ENC" line="1330" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1332" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="buffer" line="1332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                               <node name="position" line="1332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                             <node name="byte" line="1332" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                             </node>
                             <node name="theByte" line="1332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1333" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                           <node name="position" line="1333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="bufferLength" line="1333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="int" line="1335" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="len" line="1335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="Base64" line="1335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="decode4to3" line="1335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="buffer" line="1335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="0" line="1335" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                     <node name="b4" line="1335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="0" line="1335" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="out" line="1336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="write" line="1336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="b4" line="1336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="0" line="1336" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                   <node name="len" line="1336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="1338" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="position" line="1338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="0" line="1338" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="if" line="1341" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1341" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="DECODABET" line="1341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&amp;" line="1341" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                             <node name="theByte" line="1341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="0x7f" line="1341" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                         <node name="WHITE_SPACE_ENC" line="1341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1343" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="java" line="1343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="io" line="1343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="IOException" line="1343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;Invalid character in Base64 data.&quot;" line="1343" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1359" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
             </node>
             <node name="write" line="1359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="byte" line="1359" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                 </node>
                 <node name="theBytes" line="1359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="1359" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="off" line="1359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="1359" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="len" line="1359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="throws" line="1359" instruction_class="throws" instruction="throws">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="1359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="io" line="1359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="IOException" line="1359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="if" line="1362" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="suspendEncoding" line="1362" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                           </node>
                           <node name="out" line="1364" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="write" line="1364" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="theBytes" line="1364" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="off" line="1364" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="len" line="1364" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="return" line="1365" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="for" line="1368" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="1368" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="i" line="1368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="1368" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="&lt;" line="1368" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="i" line="1368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="len" line="1368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="i" line="1368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="write" line="1370" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="theBytes" line="1370" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="+" line="1370" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="off" line="1370" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="i" line="1370" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1381" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
             </node>
             <node name="flushBase64" line="1381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
             </node>
             <node name="throws" line="1381" instruction_class="throws" instruction="throws">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="1381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="io" line="1381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="IOException" line="1381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="if" line="1383" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&gt;" line="1383" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="position" line="1383" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="1383" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="1385" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="encode" line="1385" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="out" line="1387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="write" line="1387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="encode3to4" line="1387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="b4" line="1387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="buffer" line="1387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="position" line="1387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1388" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="position" line="1388" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="1388" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="throw" line="1392" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="java" line="1392" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="io" line="1392" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="IOException" line="1392" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="&quot;Base64 input not properly padded.&quot;" line="1392" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1404" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
             </node>
             <node name="close" line="1404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
             </node>
             <node name="throws" line="1404" instruction_class="throws" instruction="throws">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="1404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="io" line="1404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="IOException" line="1404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="flushBase64" line="1407" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                     </node>
                     <node name="close" line="1411" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1413" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="buffer" line="1413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="1413" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1414" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="out" line="1414" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="1414" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1426" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
             </node>
             <node name="suspendEncoding" line="1426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
             </node>
             <node name="throws" line="1426" instruction_class="throws" instruction="throws">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="1426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="io" line="1426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="IOException" line="1426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="flushBase64" line="1428" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1429" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="suspendEncoding" line="1429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="true" line="1429" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="1440" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
             </node>
             <node name="resumeEncoding" line="1440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1442" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="suspendEncoding" line="1442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="false" line="1442" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </method_statement_node>
         </node>
       </class_statement_node>
     </node>
   </class_statement_node>
 </node>
</srcfile>