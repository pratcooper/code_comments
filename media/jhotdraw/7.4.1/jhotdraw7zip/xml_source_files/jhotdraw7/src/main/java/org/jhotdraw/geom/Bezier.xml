<?xml version="1.0" ?>
<srcfile name="Bezier.java" file_path="/Users/valerio/Research/Code/Source Code Comments Classification/comments_classification/media/jhotdraw/7.4.1/jhotdraw7zip/extracted/jhotdraw7/src/main/java/org/jhotdraw/geom/Bezier.java" >
 <node name="COMPILATION_UNIT" line="0" instruction_class="COMPILATION_UNIT" instruction="COMPILATION_UNIT">
   <node name="PACKAGE_DECLARATION" line="0" instruction_class="KEYWORD" instruction="PACKAGE_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="geom" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="geom" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="java" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="util" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
       <node name="public" line="34" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
       </node>
     </node>
     <node name="Bezier" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
     </node>
     <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="37" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Bezier" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="40" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="40" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="main" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="String" line="40" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <node name="args" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="d" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="d" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="add" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="0" line="42" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="0" line="42" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="d" line="43" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="add" line="43" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="43" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="43" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="5" line="43" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="1" line="43" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="d" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="add" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="10" line="44" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="0" line="44" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="d" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="add" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="10" line="45" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="10" line="45" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="d" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="add" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="0" line="46" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="10" line="46" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="d" line="47" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="add" line="47" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="47" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="47" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="0" line="47" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="0" line="47" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="segments" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="splitAtCorners" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="d" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="*" line="48" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="/" line="48" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="45" line="48" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="180d" line="48" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Math" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="PI" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <node name="2d" line="48" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="49" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               </node>
               <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="ArrayList" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                   <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     <node name="Point2D" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="Double" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="seg" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="segments" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="for" line="50" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="50" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="i" line="50" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="50" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="&lt;" line="50" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="i" line="50" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="2" line="50" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="i" line="50" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="51" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="seg" line="51" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="reduceNoise" line="51" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="seg" line="51" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="0.8" line="51" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="65" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="65" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="BezierPath" line="65" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="fitBezierPath" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="digitizedPoints" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="65" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="error" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="66" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="fitBezierPath" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Arrays" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="asList" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="digitizedPoints" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="error" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="76" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="76" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="BezierPath" line="76" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="fitBezierPath" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="util" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="List" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="digitizedPoints" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="76" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="error" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="segments" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="ArrayList" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="Point2D" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="Double" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="79" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="segments" line="79" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="splitAtCorners" line="79" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="digitizedPoints" line="79" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="*" line="79" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="/" line="79" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="77" line="79" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="180d" line="79" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Math" line="79" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="PI" line="79" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <node name="*" line="79" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="error" line="79" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="error" line="79" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="82" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="82" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="i" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="82" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="n" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="segments" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="size" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="82" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="n" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="seg" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="segments" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="i" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="84" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="seg" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="removeClosePoints" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="seg" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="*" line="84" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="error" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="2" line="84" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="85" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="seg" line="85" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="reduceNoise" line="85" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="seg" line="85" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0.8" line="85" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="segments" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="set" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="i" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="seg" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="BezierPath" line="92" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="fittedPath" line="92" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="BezierPath" line="92" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="96" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="isEmpty" line="96" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="false" line="96" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="97" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               </node>
               <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="ArrayList" line="97" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                   <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     <node name="Point2D" line="97" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="Double" line="97" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="seg" line="97" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="segments" line="97" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="98" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="seg" line="98" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="isEmpty" line="98" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="99" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="isEmpty" line="99" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="false" line="99" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="break" line="100" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="103" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="!" line="103" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                 <node name="isEmpty" line="103" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="double" line="105" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="errorSquared" line="105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="*" line="105" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="error" line="105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="error" line="105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="106" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     <node name="ArrayList" line="106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                       <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         <node name="Point2D" line="106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="Double" line="106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="seg" line="106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="segments" line="106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="switch" line="107" instruction_class="CONDITIONAL_STATEMENT" instruction="SWITCH_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="seg" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="size" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                       <node name="case" line="108" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                         <node name="0" line="108" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <statement_node name="break" line="109" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                       </statement_node>
                     </node>
                     <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                       <node name="case" line="110" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                         <node name="1" line="110" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="fittedPath" line="111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="add" line="111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   <node name="BezierPath" line="111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="Node" line="111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="seg" line="111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="get" line="111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="0" line="111" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="break" line="112" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                       </statement_node>
                     </node>
                     <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                       <node name="case" line="113" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                         <node name="2" line="113" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <statement_node name="if" line="114" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="fittedPath" line="114" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="isEmpty" line="114" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="fittedPath" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="add" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                       <node name="BezierPath" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="Node" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="seg" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="get" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="0" line="115" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="fittedPath" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="lineTo" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="seg" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="get" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="1" line="117" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                                 <node name="x" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="seg" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="get" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="1" line="117" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                                 <node name="y" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="break" line="118" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                       </statement_node>
                     </node>
                     <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                       <node name="default" line="119" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       </node>
                       <statement_node name="if" line="120" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="fittedPath" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="isEmpty" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="fittedPath" line="121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="add" line="121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                       <node name="BezierPath" line="121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="Node" line="121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="seg" line="121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="get" line="121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="0" line="121" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="Point2D" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="Double" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="tHat1" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="Point2D" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="Double" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="Point2D" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="Double" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="tHat2" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="Point2D" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="Double" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="126" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="tHat1" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="computeLeftTangent" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="seg" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="0" line="126" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="127" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="tHat2" line="127" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="computeRightTangent" line="127" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="seg" line="127" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="-" line="127" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="seg" line="127" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="size" line="127" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                   <node name="1" line="127" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="fitCubic" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="seg" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="0" line="129" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                               <node name="-" line="129" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="seg" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="size" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="1" line="129" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <node name="tHat1" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="tHat2" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="errorSquared" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="fittedPath" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="break" line="130" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                       </statement_node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="134" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="fittedPath" line="134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="146" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="146" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="BezierPath" line="146" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="fitBezierPath" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="BezierPath" line="146" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="digitizedPoints" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="146" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="error" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="d" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="digitizedPoints" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="size" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="148" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               </node>
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="BezierPath" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Node" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="n" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="digitizedPoints" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="d" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="Point2D" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="Double" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="n" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="x" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="n" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="y" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="151" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="fitBezierPath" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="d" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="error" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="173" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="173" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="ArrayList" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </node>
         </node>
         <node name="removeClosePoints" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="util" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="List" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="digitizedPoints" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="173" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="minDistance" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="174" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="174" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="minDistance" line="174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="174" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="175" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="removeCoincidentPoints" line="175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="digitizedPoints" line="175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="double" line="178" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="squaredDistance" line="178" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="*" line="178" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="minDistance" line="178" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="minDistance" line="178" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="java" line="179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="util" line="179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ArrayList" line="179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="cleaned" line="179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="ArrayList" line="179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="Point2D" line="179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="Double" line="179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="180" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&gt;" line="180" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="digitizedPoints" line="180" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="size" line="180" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="0" line="180" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="prev" line="181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="digitizedPoints" line="181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="0" line="181" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="cleaned" line="182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="add" line="182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="prev" line="182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="for" line="183" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                     <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         <node name="Point2D" line="183" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="Double" line="183" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="p" line="183" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="digitizedPoints" line="183" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="184" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="&gt;" line="184" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="v2SquaredDistanceBetween2Points" line="184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="prev" line="184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="p" line="184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="squaredDistance" line="184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="cleaned" line="185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="add" line="185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="p" line="185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="186" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="prev" line="186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="p" line="186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="189" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                       <node name="!" line="189" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="prev" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="equals" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="digitizedPoints" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="get" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="-" line="189" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="digitizedPoints" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="size" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="1" line="189" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="cleaned" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="set" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="-" line="190" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="cleaned" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="size" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="1" line="190" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="digitizedPoints" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="get" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="-" line="190" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="digitizedPoints" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="size" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="1" line="190" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="return" line="193" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="cleaned" line="193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="210" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="210" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="ArrayList" line="210" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="210" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="210" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </node>
         </node>
         <node name="removeCoincidentPoints" line="210" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="210" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="util" line="210" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="List" line="210" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="210" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="210" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="digitizedPoints" line="210" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="util" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ArrayList" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cleaned" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="212" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&gt;" line="212" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="digitizedPoints" line="212" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="size" line="212" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="0" line="212" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="213" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="213" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="prev" line="213" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="digitizedPoints" line="213" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="213" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="0" line="213" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="cleaned" line="214" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="214" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="prev" line="214" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="215" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     <node name="Point2D" line="215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="Double" line="215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="p" line="215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="digitizedPoints" line="215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="216" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                       <node name="!" line="216" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="prev" line="216" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="equals" line="216" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="p" line="216" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="cleaned" line="217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="add" line="217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="p" line="217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="218" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="prev" line="218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="p" line="218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="222" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="cleaned" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="238" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="238" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="ArrayList" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </node>
         </node>
         <node name="splitAtCorners" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="util" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="List" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="digitizedPoints" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="238" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="maxAngle" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="238" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="minDistance" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="239" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="Integer" line="239" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cornerIndices" line="239" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="findCorners" line="239" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="digitizedPoints" line="239" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="maxAngle" line="239" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="minDistance" line="239" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="segments" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="ArrayList" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="Point2D" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="Double" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="+" line="240" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="cornerIndices" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="size" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="1" line="240" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="242" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="242" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="cornerIndices" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="size" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="0" line="242" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="segments" line="243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="ArrayList" line="243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="Point2D" line="243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="Double" line="243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="digitizedPoints" line="243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="segments" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="ArrayList" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="Point2D" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="Double" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="digitizedPoints" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="subList" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="0" line="245" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                   <node name="+" line="245" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="cornerIndices" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="get" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="0" line="245" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                     <node name="1" line="245" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="246" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="246" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="i" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="1" line="246" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="&lt;" line="246" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="i" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="cornerIndices" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="size" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="i" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="segments" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="add" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="ArrayList" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   <node name="Point2D" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="Double" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="digitizedPoints" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="subList" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="cornerIndices" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="get" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="-" line="247" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                               <node name="i" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="1" line="247" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <node name="+" line="247" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="cornerIndices" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="get" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="i" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                         <node name="1" line="247" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="segments" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="ArrayList" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="Point2D" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="Double" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="digitizedPoints" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="subList" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="cornerIndices" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="get" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="-" line="249" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="cornerIndices" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="size" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             </node>
                                           </node>
                                           <node name="1" line="249" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="digitizedPoints" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="size" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="252" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="segments" line="252" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="264" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="264" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="ArrayList" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="Integer" line="264" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
           </node>
         </node>
         <node name="findCorners" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="util" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="List" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="digitizedPoints" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="264" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="minAngle" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="264" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="minDistance" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="265" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="Integer" line="265" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cornerIndices" line="265" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="265" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="Integer" line="265" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="267" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="squaredDistance" line="267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="*" line="267" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="minDistance" line="267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="minDistance" line="267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="269" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="previousCorner" line="269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                 <node name="-" line="269" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="1" line="269" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="270" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="previousCornerAngle" line="270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="270" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="272" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="272" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="i" line="272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1" line="272" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="n" line="272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="digitizedPoints" line="272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="size" line="272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="272" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="-" line="272" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="n" line="272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="1" line="272" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="p" line="273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="digitizedPoints" line="273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="i" line="273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="276" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="276" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="prev" line="276" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="276" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="boolean" line="277" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="intersectsPreviousCorner" line="277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="false" line="277" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="278" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="278" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="j" line="278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="-" line="278" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="i" line="278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="278" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="j" line="278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="278" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_DECREMENT_EXPRESSION" line="0" instruction_class="POST_DECREMENT_EXPRESSION" instruction="POST_DECREMENT_EXPRESSION">
                         <node name="j" line="278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="279" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="||" line="279" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="==" line="279" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="j" line="279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="previousCorner" line="279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="v2SquaredDistanceBetween2Points" line="279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="digitizedPoints" line="279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="get" line="279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="j" line="279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="p" line="279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="squaredDistance" line="279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="280" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="prev" line="280" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="digitizedPoints" line="280" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="get" line="280" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="j" line="280" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="281" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="intersectsPreviousCorner" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&lt;" line="281" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                             <node name="j" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="previousCorner" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="break" line="282" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="285" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="285" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="prev" line="285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="285" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="continue" line="286" instruction_class="CONTROLFLOW_STATEMENT" instruction="CONTINUE_STATEMENT">
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="290" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="290" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="next" line="290" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="290" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="291" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="291" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="j" line="291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="+" line="291" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="i" line="291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="291" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="&lt;" line="291" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="j" line="291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="n" line="291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="j" line="291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="292" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="v2SquaredDistanceBetween2Points" line="292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="digitizedPoints" line="292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="get" line="292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="j" line="292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="p" line="292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="squaredDistance" line="292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="293" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="next" line="293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="digitizedPoints" line="293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="get" line="293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="j" line="293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="break" line="294" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="297" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="297" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="next" line="297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="297" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="continue" line="298" instruction_class="CONTROLFLOW_STATEMENT" instruction="CONTINUE_STATEMENT">
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="double" line="301" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="aPrev" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Math" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="atan2" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="-" line="301" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="prev" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="y" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="y" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <node name="-" line="301" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="prev" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="x" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="x" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="double" line="302" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="aNext" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Math" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="atan2" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="-" line="302" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="next" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="y" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="y" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <node name="-" line="302" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="next" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="x" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="x" line="302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="double" line="303" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="angle" line="303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Math" line="303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="abs" line="303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="-" line="303" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="aPrev" line="303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="aNext" line="303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="304" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="||" line="304" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="&lt;" line="304" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="angle" line="304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="-" line="304" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Math" line="304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="PI" line="304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="minAngle" line="304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="&gt;" line="304" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="angle" line="304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="304" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Math" line="304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="PI" line="304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="minAngle" line="304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="305" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="intersectsPreviousCorner" line="305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="cornerIndices" line="306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="set" line="306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="-" line="306" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="cornerIndices" line="306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="size" line="306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="1" line="306" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <node name="i" line="306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="cornerIndices" line="308" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="add" line="308" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="i" line="308" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="310" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="previousCorner" line="310" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="i" line="310" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="311" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="previousCornerAngle" line="311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="angle" line="311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="314" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="cornerIndices" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="332" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="332" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="ArrayList" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </node>
         </node>
         <node name="reduceNoise" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="util" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="List" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="digitizedPoints" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="332" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="weight" line="332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="java" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="util" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ArrayList" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cleaned" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="334" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&gt;" line="334" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="digitizedPoints" line="334" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="size" line="334" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="0" line="334" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="prev" line="335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="digitizedPoints" line="335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="0" line="335" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="cleaned" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="prev" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="double" line="337" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="pnWeight" line="337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="/" line="337" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="-" line="337" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="1d" line="337" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                       </node>
                       <node name="weight" line="337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="2d" line="337" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="338" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="338" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="i" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="1" line="338" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="n" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="-" line="338" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="digitizedPoints" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="size" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="1" line="338" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="&lt;" line="338" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="i" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="n" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="i" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="cur" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="digitizedPoints" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="i" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="next" line="340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="digitizedPoints" line="340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="+" line="340" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="i" line="340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="1" line="340" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="cleaned" line="341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="add" line="341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="Point2D" line="341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="Double" line="341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="342" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="342" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="*" line="342" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="cur" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="x" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="weight" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="*" line="342" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                       <node name="pnWeight" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="prev" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="x" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="*" line="342" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                     <node name="pnWeight" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="next" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="x" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                                 <node name="+" line="343" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="343" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="*" line="343" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="cur" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="y" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="weight" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="*" line="343" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                       <node name="pnWeight" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="prev" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="y" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="*" line="343" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                     <node name="pnWeight" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="next" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="y" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="344" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="prev" line="344" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="cur" line="344" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="346" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&gt;" line="346" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="digitizedPoints" line="346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="size" line="346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="1" line="346" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="cleaned" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="add" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="digitizedPoints" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="get" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="-" line="347" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="digitizedPoints" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="size" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                   <node name="1" line="347" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="350" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="cleaned" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="367" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="367" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="fitCubic" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="d" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="367" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="first" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="367" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="last" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="tHat1" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="tHat2" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="369" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="errorSquared" line="369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="BezierPath" line="369" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="bezierPath" line="369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="371" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="371" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bezCurve" line="371" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="372" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="u" line="372" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="373" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="maxError" line="373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="int" line="374" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="splitPoint" line="374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="int" line="374" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="1" line="374" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="377" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="nPts" line="377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="378" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="iterationError" line="378" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="379" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="maxIterations" line="379" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="4" line="379" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tHatCenter" line="380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="381" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="i" line="381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="385" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="tHat1" line="385" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="385" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="385" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tHat1" line="385" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="clone" line="385" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="386" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="tHat2" line="386" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="386" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="386" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tHat2" line="386" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="clone" line="386" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="388" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="iterationError" line="388" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="*" line="388" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="errorSquared" line="388" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="errorSquared" line="388" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="389" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="nPts" line="389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="+" line="389" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="-" line="389" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="last" line="389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="first" line="389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="1" line="389" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="392" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="392" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="nPts" line="392" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="2" line="392" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="double" line="393" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="dist" line="393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="/" line="393" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="v2DistanceBetween2Points" line="393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="d" line="393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="get" line="393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="last" line="393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="d" line="393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="get" line="393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="first" line="393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="3.0" line="393" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="395" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="bezCurve" line="395" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="395" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="395" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="4" line="395" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="396" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="=" line="396" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="i" line="396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="396" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="&lt;" line="396" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="i" line="396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="bezCurve" line="396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="i" line="396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="397" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="bezCurve" line="397" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="397" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           <node name="Point2D" line="397" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="Double" line="397" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="399" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="bezCurve" line="399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="399" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="d" line="399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="first" line="399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="400" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="bezCurve" line="400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="3" line="400" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="d" line="400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="last" line="400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="v2Add" line="401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="bezCurve" line="401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="401" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="v2Scale" line="401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="tHat1" line="401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="dist" line="401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="bezCurve" line="401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="1" line="401" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="v2Add" line="402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="bezCurve" line="402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="3" line="402" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="v2Scale" line="402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="tHat2" line="402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="dist" line="402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="bezCurve" line="402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="2" line="402" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="bezierPath" line="404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="curveTo" line="404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="405" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="405" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="x" line="405" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="405" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="405" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="y" line="405" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="2" line="406" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="x" line="406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="2" line="406" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="y" line="406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="407" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3" line="407" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="x" line="407" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="407" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3" line="407" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="y" line="407" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="return" line="408" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="412" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="u" line="412" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="chordLengthParameterize" line="412" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="d" line="412" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="first" line="412" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="last" line="412" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="413" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="bezCurve" line="413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="generateBezier" line="413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="d" line="413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="first" line="413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="last" line="413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="u" line="413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="tHat1" line="413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="tHat2" line="413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="416" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="maxError" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="computeMaxError" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="d" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="first" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="last" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="bezCurve" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="u" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="splitPoint" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="417" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="417" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="maxError" line="417" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="errorSquared" line="417" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="addCurveTo" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="bezCurve" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="bezierPath" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="errorSquared" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="&amp;&amp;" line="418" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                         <node name="==" line="418" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="first" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="418" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="==" line="418" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="last" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="-" line="418" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="d" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="size" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="1" line="418" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="return" line="419" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="425" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="425" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="maxError" line="425" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="iterationError" line="425" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="double" line="426" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="uPrime" line="426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="427" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="=" line="427" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="i" line="427" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="427" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="&lt;" line="427" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="i" line="427" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="maxIterations" line="427" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="i" line="427" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="428" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="uPrime" line="428" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="reparameterize" line="428" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="d" line="428" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="first" line="428" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="last" line="428" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="u" line="428" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="bezCurve" line="428" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="429" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="bezCurve" line="429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="generateBezier" line="429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="d" line="429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="first" line="429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="last" line="429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="uPrime" line="429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="tHat1" line="429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="tHat2" line="429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="430" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="maxError" line="430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="computeMaxError" line="430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="d" line="430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="first" line="430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="last" line="430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="bezCurve" line="430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="uPrime" line="430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="splitPoint" line="430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="431" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&lt;" line="431" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                       <node name="maxError" line="431" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="errorSquared" line="431" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="addCurveTo" line="432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="bezCurve" line="432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="bezierPath" line="432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="errorSquared" line="432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="&amp;&amp;" line="432" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                 <node name="==" line="432" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                   <node name="first" line="432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="0" line="432" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                                 <node name="==" line="432" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                   <node name="last" line="432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="-" line="432" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="d" line="432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="size" line="432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                     <node name="1" line="432" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="return" line="433" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="435" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="u" line="435" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="uPrime" line="435" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="440" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="tHatCenter" line="440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="computeCenterTangent" line="440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="d" line="440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                       <node name="splitPoint" line="440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="0" line="440" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="441" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="441" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="first" line="441" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="splitPoint" line="441" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0" line="441" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="fitCubic" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="d" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="first" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="splitPoint" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="442" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="tHat1" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="tHatCenter" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="errorSquared" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="bezierPath" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="bezierPath" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="lineTo" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="d" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="get" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="splitPoint" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="0" line="444" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="x" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="d" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="get" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="splitPoint" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="0" line="444" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="y" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="v2Negate" line="447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="tHatCenter" line="447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="448" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="448" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="splitPoint" line="448" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0" line="448" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="last" line="448" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="fitCubic" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="d" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="splitPoint" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="449" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="last" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="tHatCenter" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="tHat2" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="errorSquared" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="bezierPath" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="bezierPath" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="lineTo" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="d" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="get" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="last" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="x" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="d" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="get" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="last" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="y" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="462" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="462" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="addCurveTo" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="bezCurve" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="BezierPath" line="462" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="bezierPath" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="462" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="errorSquared" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="462" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="connectsCorners" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="BezierPath" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Node" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="lastNode" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="bezierPath" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="get" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="-" line="463" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="bezierPath" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="size" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="1" line="463" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="464" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="error" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="Math" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="sqrt" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="errorSquared" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="465" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="465" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="&amp;&amp;" line="465" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                 <node name="connectsCorners" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Geom" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="lineContainsPoint" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="lastNode" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="0" line="465" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="lastNode" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="0" line="465" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3" line="465" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="x" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3" line="465" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="y" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="465" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="x" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="465" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="y" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="error" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="Geom" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="lineContainsPoint" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="lastNode" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="x" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="0" line="466" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="lastNode" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="y" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="0" line="466" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="bezCurve" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="3" line="466" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="x" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="bezCurve" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="3" line="466" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="y" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="bezCurve" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="2" line="466" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="x" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="bezCurve" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="2" line="466" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="y" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="error" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="bezierPath" line="467" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="lineTo" line="467" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="468" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3" line="468" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="x" line="468" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="468" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3" line="468" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="y" line="468" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="bezierPath" line="471" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="curveTo" line="471" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="472" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="x" line="472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="472" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="y" line="472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="2" line="473" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="x" line="473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="2" line="473" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="y" line="473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="474" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3" line="474" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="x" line="474" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="bezCurve" line="474" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3" line="474" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="y" line="474" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="484" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="484" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="computeLeftTangent" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="d" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="484" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="end" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tHat1" line="485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="486" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="tHat1" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="v2SubII" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="d" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="+" line="486" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="end" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="486" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="d" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="end" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="487" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="tHat1" line="487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="v2Normalize" line="487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="tHat1" line="487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="488" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="tHat1" line="488" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="497" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="497" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="497" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="497" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="computeRightTangent" line="497" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="497" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="497" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="497" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="d" line="497" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="497" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="end" line="497" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tHat2" line="498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="499" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="tHat2" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="v2SubII" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="d" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="-" line="499" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="end" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="499" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="d" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="end" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="500" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="tHat2" line="500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="v2Normalize" line="500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="tHat2" line="500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="501" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="tHat2" line="501" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="510" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="510" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="computeCenterTangent" line="510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="d" line="510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="510" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="center" line="510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="V1" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="V2" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="511" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tHatCenter" line="512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="514" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="V1" line="514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="v2SubII" line="514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="d" line="514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="-" line="514" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="center" line="514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="514" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="d" line="514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="center" line="514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="515" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="V2" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="v2SubII" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="d" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="center" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="d" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="+" line="515" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="center" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="515" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="516" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="tHatCenter" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="x" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="/" line="516" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="+" line="516" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="V1" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="x" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="V2" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="x" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
                 <node name="2.0" line="516" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="517" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="tHatCenter" line="517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="y" line="517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="/" line="517" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="+" line="517" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="V1" line="517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y" line="517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="V2" line="517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y" line="517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
                 <node name="2.0" line="517" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="518" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="tHatCenter" line="518" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="v2Normalize" line="518" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="tHatCenter" line="518" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="519" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="tHatCenter" line="519" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="530" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="530" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="double" line="530" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="chordLengthParameterize" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="d" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="530" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="first" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="530" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="last" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="531" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="i" line="531" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="532" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="u" line="532" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="534" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="u" line="534" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="double" line="534" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="+" line="534" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="-" line="534" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="last" line="534" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="first" line="534" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="1" line="534" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="536" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="u" line="536" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0" line="536" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="0.0" line="536" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="537" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="=" line="537" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="i" line="537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="537" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="first" line="537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1" line="537" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
               <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="last" line="537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="538" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="u" line="538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="-" line="538" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="i" line="538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="first" line="538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="+" line="538" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                       <node name="u" line="538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="-" line="538" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="-" line="538" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="i" line="538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="first" line="538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="1" line="538" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="v2DistanceBetween2Points" line="539" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="d" line="539" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="get" line="539" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="i" line="539" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="d" line="539" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="get" line="539" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="-" line="539" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="i" line="539" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="1" line="539" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="for" line="542" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="=" line="542" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="i" line="542" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="542" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="first" line="542" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1" line="542" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
               <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="542" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="last" line="542" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="542" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="543" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="u" line="543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="-" line="543" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="i" line="543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="first" line="543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="/" line="543" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                       <node name="u" line="543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="-" line="543" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="i" line="543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="first" line="543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                       <node name="u" line="543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="-" line="543" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="last" line="543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="first" line="543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="546" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="u" line="546" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="559" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="559" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="double" line="559" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="reparameterize" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="d" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="559" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="first" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="559" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="last" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="559" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="u" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="bezCurve" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="560" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="nPts" line="560" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="+" line="560" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="-" line="560" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="last" line="560" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="first" line="560" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="1" line="560" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="561" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="i" line="561" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="562" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="uPrime" line="562" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="564" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="uPrime" line="564" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="double" line="564" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="nPts" line="564" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="565" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="=" line="565" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="i" line="565" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="first" line="565" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="565" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="last" line="565" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="565" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="566" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="uPrime" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="-" line="566" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="i" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="first" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="newtonRaphsonRootFind" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="bezCurve" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="d" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="get" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="i" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="u" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="-" line="566" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="i" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="first" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="568" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="uPrime" line="568" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="578" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="578" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="578" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="newtonRaphsonRootFind" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="Q" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="P" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="578" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="u" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="579" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="numerator" line="579" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="denominator" line="579" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="Q1" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="3" line="580" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="Q2" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="2" line="580" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="Q_u" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="Q1_u" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="Q2_u" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="582" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="uPrime" line="582" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="583" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="i" line="583" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="586" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="Q_u" line="586" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="bezierII" line="586" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="3" line="586" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="Q" line="586" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="u" line="586" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="589" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="=" line="589" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="i" line="589" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="589" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="589" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2" line="589" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="589" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="590" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="Q1" line="590" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="590" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="590" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="590" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="*" line="591" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="-" line="591" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="Q" line="591" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="+" line="591" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="i" line="591" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="1" line="591" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                               <node name="x" line="591" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="Q" line="591" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="i" line="591" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="x" line="591" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="3.0" line="591" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                         <node name="*" line="592" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="-" line="592" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="Q" line="592" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="+" line="592" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="i" line="592" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="1" line="592" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                               <node name="y" line="592" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="Q" line="592" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="i" line="592" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="y" line="592" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="3.0" line="592" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="for" line="596" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="=" line="596" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="i" line="596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="596" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="1" line="596" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="597" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="Q2" line="597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="*" line="598" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="-" line="598" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="Q1" line="598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="+" line="598" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="i" line="598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="1" line="598" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                               <node name="x" line="598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="Q1" line="598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="i" line="598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="x" line="598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="2.0" line="598" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                         <node name="*" line="599" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="-" line="599" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="Q1" line="599" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="+" line="599" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="i" line="599" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="1" line="599" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                               <node name="y" line="599" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="Q1" line="599" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="i" line="599" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="y" line="599" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="2.0" line="599" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="603" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="Q1_u" line="603" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="bezierII" line="603" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="2" line="603" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="Q1" line="603" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="u" line="603" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="604" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="Q2_u" line="604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="bezierII" line="604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="1" line="604" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="Q2" line="604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="u" line="604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="607" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="numerator" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="+" line="607" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="*" line="607" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="-" line="607" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Q_u" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="x" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="P" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="x" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Q1_u" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="x" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
                 <node name="*" line="607" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="-" line="607" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Q_u" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="y" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="P" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="y" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Q1_u" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="608" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="denominator" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="+" line="609" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="+" line="608" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="+" line="608" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="*" line="608" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Q1_u" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="x" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Q1_u" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="x" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <node name="*" line="608" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Q1_u" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="y" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Q1_u" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="y" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="*" line="609" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="-" line="609" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Q_u" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="x" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="P" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="x" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Q2_u" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="x" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="*" line="609" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="-" line="609" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Q_u" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="y" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="P" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="y" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Q2_u" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="612" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="uPrime" line="612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="612" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="u" line="612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="/" line="612" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="numerator" line="612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="denominator" line="612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="613" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="uPrime" line="613" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="628" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="628" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="628" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="computeMaxError" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="d" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="628" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="first" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="628" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="last" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="bezCurve" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="628" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="u" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="int" line="628" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="splitPoint" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="629" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="i" line="629" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="630" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="maxDist" line="630" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="631" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="dist" line="631" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="632" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="632" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="P" line="632" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="632" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="632" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="v" line="633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="635" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="splitPoint" line="635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0" line="635" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="/" line="635" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="+" line="635" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="-" line="635" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="last" line="635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="first" line="635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="1" line="635" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <node name="2" line="635" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="636" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="maxDist" line="636" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0.0" line="636" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="637" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="=" line="637" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="i" line="637" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="637" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="first" line="637" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1" line="637" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
               <node name="&lt;" line="637" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="637" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="last" line="637" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="637" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="638" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="P" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="bezierII" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="3" line="638" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="bezCurve" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="u" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="-" line="638" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="i" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="first" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="639" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="v" line="639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="v2SubII" line="639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="P" line="639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="d" line="639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="get" line="639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="i" line="639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="640" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="dist" line="640" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="v2SquaredLength" line="640" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="v" line="640" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="641" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="dist" line="641" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="maxDist" line="641" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="642" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="maxDist" line="642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="dist" line="642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="643" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="splitPoint" line="643" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="643" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="i" line="643" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="646" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="maxDist" line="646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="660" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="660" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             <node name="Point2D" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="Double" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="generateBezier" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <node name="d" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="660" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="first" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="660" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="last" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="660" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="uPrime" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="tHat1" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="tHat2" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="661" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="661" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bezCurve" line="661" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="663" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="bezCurve" line="663" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="663" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="663" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="4" line="663" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="664" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="664" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="i" line="664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="664" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="664" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="bezCurve" line="664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="665" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="bezCurve" line="665" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="665" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="665" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="665" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="670" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="dist" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="670" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="v2DistanceBetween2Points" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="d" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="last" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="d" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="first" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="3.0" line="670" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="672" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="bezCurve" line="672" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0" line="672" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="d" line="672" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="get" line="672" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="first" line="672" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="673" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="bezCurve" line="673" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="3" line="673" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="d" line="673" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="get" line="673" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="last" line="673" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="v2Add" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="bezCurve" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="674" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="v2Scale" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="tHat1" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="dist" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="bezCurve" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1" line="674" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="v2Add" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="bezCurve" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="3" line="675" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="v2Scale" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="tHat2" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="dist" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="bezCurve" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="2" line="675" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="676" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="bezCurve" line="676" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="686" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="686" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="bezierII" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="686" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="degree" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="V" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="686" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="t" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="687" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="i" line="687" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="j" line="687" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="688" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="688" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="q" line="688" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="vTemp" line="689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="692" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="vTemp" line="692" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="692" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="692" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="+" line="692" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="degree" line="692" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="1" line="692" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="693" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="=" line="693" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="i" line="693" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="693" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="693" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="degree" line="693" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="693" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="694" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="vTemp" line="694" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="694" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="694" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="694" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="V" line="694" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="i" line="694" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="clone" line="694" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="for" line="698" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="=" line="698" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="i" line="698" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1" line="698" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="698" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="degree" line="698" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="698" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="for" line="699" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="=" line="699" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="j" line="699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="699" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="j" line="699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="-" line="699" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="degree" line="699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="i" line="699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="j" line="699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="700" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="vTemp" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="j" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="x" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="+" line="700" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="*" line="700" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="-" line="700" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="1.0" line="700" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                             <node name="t" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="vTemp" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="j" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="x" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <node name="*" line="700" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="t" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="vTemp" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="+" line="700" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="j" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="1" line="700" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                             <node name="x" line="700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="701" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="vTemp" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="j" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="y" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="+" line="701" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="*" line="701" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="-" line="701" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="1.0" line="701" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                             <node name="t" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="vTemp" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="j" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="y" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <node name="*" line="701" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="t" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="vTemp" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="+" line="701" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="j" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="1" line="701" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                             <node name="y" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="705" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="q" line="705" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="vTemp" line="705" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0" line="705" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="706" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="q" line="706" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="719" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="719" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="719" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="v2DistanceBetween2Points" line="719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="a" line="719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="b" line="719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="720" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="Math" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="sqrt" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="v2SquaredDistanceBetween2Points" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="a" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="b" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="726" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="726" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="726" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="v2SquaredDistanceBetween2Points" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="a" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="b" line="726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="727" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="dx" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="727" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="b" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="728" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="dy" line="728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="728" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="b" line="728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="729" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="+" line="729" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
               <node name="*" line="729" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="dx" line="729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="dx" line="729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="*" line="729" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="dy" line="729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="dy" line="729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="737" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="737" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="v2Scale" line="737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="v" line="737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="737" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="newlen" line="737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="738" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="len" line="738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="v2Length" line="738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="v" line="738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="739" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="739" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="len" line="739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0.0" line="739" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="*=" line="740" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="v" line="740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="x" line="740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="/" line="740" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="newlen" line="740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="len" line="740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="*=" line="741" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="v" line="741" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y" line="741" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="/" line="741" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="newlen" line="741" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="len" line="741" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="744" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="v" line="744" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="752" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="752" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="752" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="752" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="v2ScaleIII" line="752" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="752" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="752" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="v" line="752" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="752" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="s" line="752" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="753" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="753" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="result" line="753" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="753" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="753" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="754" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="result" line="754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="x" line="754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="*" line="754" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="v" line="754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="s" line="754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="755" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="result" line="755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="y" line="755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="*" line="755" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="v" line="755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="s" line="755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="756" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="result" line="756" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="762" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="762" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="762" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="v2Length" line="762" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="762" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="762" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="a" line="762" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="763" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="Math" line="763" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="sqrt" line="763" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="v2SquaredLength" line="763" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="a" line="763" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="769" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="769" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="769" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="v2SquaredLength" line="769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="a" line="769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="770" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="+" line="770" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
               <node name="*" line="770" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <node name="*" line="770" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="778" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="778" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="v2Add" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="a" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="b" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="c" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="779" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="c" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="x" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="+" line="779" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="b" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="780" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="c" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="y" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="+" line="780" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="b" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="781" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="c" line="781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="787" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="787" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="v2AddII" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="a" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="b" line="787" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="788" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="788" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="c" line="788" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="788" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="788" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="789" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="c" line="789" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="x" line="789" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="+" line="789" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="789" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="789" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="b" line="789" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="789" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="790" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="c" line="790" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="y" line="790" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="+" line="790" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="790" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="790" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="b" line="790" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="790" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="791" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="c" line="791" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="797" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="797" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="797" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="797" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="v2Negate" line="797" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="797" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="797" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="v" line="797" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="798" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="v" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="x" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                 <node name="-" line="798" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="v" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="x" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="799" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="v" line="799" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="y" line="799" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                 <node name="-" line="799" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="v" line="799" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y" line="799" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="800" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="v" line="800" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="806" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="806" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="806" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="v2Dot" line="806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="a" line="806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="b" line="806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="807" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="+" line="807" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
               <node name="*" line="807" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="b" line="807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <node name="*" line="807" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="b" line="807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="813" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="813" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="v2Normalize" line="813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="v" line="813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="814" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="len" line="814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="v2Length" line="814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="v" line="814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="815" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="815" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="len" line="815" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0.0" line="815" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="/=" line="816" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="v" line="816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="x" line="816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="len" line="816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="/=" line="817" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="v" line="817" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y" line="817" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="len" line="817" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="820" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="v" line="820" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="830" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="830" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Point2D" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="Double" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="v2SubII" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="a" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="b" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="c" line="831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="832" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="c" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="x" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="-" line="832" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="b" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="x" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="833" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="c" line="833" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="y" line="833" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="-" line="833" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="a" line="833" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="833" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="b" line="833" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="833" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="834" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="c" line="834" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="841" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="841" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="841" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="b0" line="841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="841" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="u" line="841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="842" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tmp" line="842" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="842" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="1.0" line="842" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
                 <node name="u" line="842" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="843" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="*" line="843" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
               <node name="*" line="843" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="tmp" line="843" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="tmp" line="843" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="tmp" line="843" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="846" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="846" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="846" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="b1" line="846" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="846" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="u" line="846" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="847" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tmp" line="847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="847" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="1.0" line="847" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
                 <node name="u" line="847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="848" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="*" line="848" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
               <node name="*" line="848" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="3" line="848" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
                 <node name="u" line="848" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="*" line="848" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="tmp" line="848" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="tmp" line="848" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="851" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="851" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="851" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="b2" line="851" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="851" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="u" line="851" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="852" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tmp" line="852" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="852" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="1.0" line="852" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
                 <node name="u" line="852" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="853" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="*" line="853" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
               <node name="*" line="853" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="*" line="853" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="3" line="853" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="u" line="853" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="u" line="853" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="tmp" line="853" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="856" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="856" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="856" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="b3" line="856" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="856" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="u" line="856" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="857" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="*" line="857" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
               <node name="*" line="857" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="u" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="u" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="u" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
     </node>
   </class_statement_node>
 </node>
</srcfile>