<?xml version="1.0" ?>
<srcfile name="PaletteTextComponentBorder.java" file_path="/Users/valerio/Research/Code/Source Code Comments Classification/comments_classification/media/jhotdraw/7.4.1/jhotdraw7zip/extracted/jhotdraw7/src/main/java/org/jhotdraw/gui/plaf/palette/PaletteTextComponentBorder.java" >
 <node name="COMPILATION_UNIT" line="0" instruction_class="COMPILATION_UNIT" instruction="COMPILATION_UNIT">
   <node name="PACKAGE_DECLARATION" line="0" instruction_class="KEYWORD" instruction="PACKAGE_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="gui" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="plaf" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="palette" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Color" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Component" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Graphics" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Graphics2D" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Insets" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="LinearGradientPaint" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="22" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="22" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="MultipleGradientPaint" line="22" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="java" line="23" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="awt" line="23" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="geom" line="23" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Point2D" line="23" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="javax" line="24" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="swing" line="24" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="javax" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="swing" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="border" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Border" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="javax" line="26" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="swing" line="26" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="plaf" line="26" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="UIResource" line="26" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
       <node name="public" line="34" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
       </node>
     </node>
     <node name="PaletteTextComponentBorder" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
     </node>
     <node name="implements" line="34" instruction_class="KEYWORD" instruction="INTERFACE_IMPLEMENTATION_KEYWORD">
       <node name="Border" line="34" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
       </node>
       <node name="UIResource" line="34" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
       </node>
     </node>
     <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="36" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="36" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="36" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="float" line="36" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="enabledStops" line="36" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="NEW_INITIALIZED_ARRAY" line="0" instruction_class="NEW_INITIALIZED_ARRAY" instruction="NEW_INITIALIZED_ARRAY">
             <node name="float" line="36" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="[" line="36" instruction_class="[" instruction="[">
             </node>
             <node name="ARRAY_INITIALIZER" line="0" instruction_class="ARRAY_INITIALIZER" instruction="ARRAY_INITIALIZER">
               <node name="0f" line="36" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
               </node>
               <node name="0.2f" line="36" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
               </node>
             </node>
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="37" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="37" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="37" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="Color" line="37" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="enabledStopColors" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="NEW_INITIALIZED_ARRAY" line="0" instruction_class="NEW_INITIALIZED_ARRAY" instruction="NEW_INITIALIZED_ARRAY">
             <node name="Color" line="37" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="[" line="37" instruction_class="[" instruction="[">
             </node>
             <node name="ARRAY_INITIALIZER" line="0" instruction_class="ARRAY_INITIALIZER" instruction="ARRAY_INITIALIZER">
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="Color" line="37" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="0xc8c8c8" line="37" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="Color" line="37" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="0xffffff" line="37" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </node>
         </node>
       </statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="39" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="paintBorder" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Component" line="39" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="c" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Graphics" line="39" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="gr" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="39" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="x" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="39" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="y" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="39" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="width" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="39" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="height" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Graphics2D" line="40" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="g" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="Graphics2D" line="40" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="gr" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="JComponent" line="41" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="jc" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="JComponent" line="41" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="c" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="42" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="borderColor" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="float" line="43" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stops" line="43" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="Color" line="44" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stopColors" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="45" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="!" line="45" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="c" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="isEnabled" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="46" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="borderColor" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0x80a5a5a5" line="46" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="47" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="stops" line="47" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="enabledStops" line="47" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="48" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="stopColors" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="enabledStopColors" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="50" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="borderColor" line="50" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0xffa5a5a5" line="50" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="51" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="stops" line="51" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="enabledStops" line="51" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="52" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="stopColors" line="52" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="enabledStopColors" line="52" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="55" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="segmentPosition" line="55" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="getSegmentPosition" line="55" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="c" line="55" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="56" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="||" line="56" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="56" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="segmentPosition" line="56" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="&quot;first&quot;" line="56" instruction_class="LITERAL" instruction="STRING_LITERAL">
                 </node>
               </node>
               <node name="==" line="56" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="segmentPosition" line="56" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="&quot;middle&quot;" line="56" instruction_class="LITERAL" instruction="STRING_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="+=" line="57" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="width" line="57" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="1" line="57" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="g" line="59" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="setColor" line="59" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="Color" line="59" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="borderColor" line="59" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="true" line="59" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="g" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="drawRect" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="x" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="y" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="-" line="60" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="width" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1" line="60" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="-" line="60" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="height" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1" line="60" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="LinearGradientPaint" line="62" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="lgp" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="LinearGradientPaint" line="62" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         <node name="Point2D" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="Float" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="x" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         <node name="Point2D" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="Float" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="x" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="-" line="63" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="+" line="63" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="y" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="height" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1" line="63" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="stops" line="64" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="stopColors" line="64" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="MultipleGradientPaint" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CycleMethod" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="REPEAT" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="g" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="setPaint" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="lgp" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="g" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="fillRect" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="+" line="67" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="x" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1" line="67" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="+" line="67" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="y" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1" line="67" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="-" line="67" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="width" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="2" line="67" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="-" line="67" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="height" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="2" line="67" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="70" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="70" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getSegmentPosition" line="70" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Component" line="70" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="c" line="70" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="71" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="segmentPosition" line="71" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="71" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="72" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="instanceof" line="72" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
               <node name="c" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="JComponent" line="72" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="73" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="segmentPosition" line="73" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="String" line="73" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="JComponent" line="73" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="c" line="73" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="getClientProperty" line="73" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;Palette.Component.segmentPosition&quot;" line="73" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="75" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="?" line="75" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="75" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="segmentPosition" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="75" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="&quot;only&quot;" line="75" instruction_class="LITERAL" instruction="STRING_LITERAL">
               </node>
               <node name="segmentPosition" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="78" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Insets" line="78" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getBorderInsets" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Component" line="78" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="c" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Insets" line="79" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="insets" line="79" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="80" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="segmentPosition" line="80" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="getSegmentPosition" line="80" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="c" line="80" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="81" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="||" line="81" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="81" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="segmentPosition" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="&quot;first&quot;" line="81" instruction_class="LITERAL" instruction="STRING_LITERAL">
                 </node>
               </node>
               <node name="==" line="82" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="segmentPosition" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="&quot;middle&quot;" line="82" instruction_class="LITERAL" instruction="STRING_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="83" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="insets" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="Insets" line="83" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="3" line="83" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="3" line="83" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="3" line="83" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="2" line="83" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="85" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="insets" line="85" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="Insets" line="85" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="3" line="85" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="3" line="85" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="3" line="85" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="3" line="85" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="87" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="insets" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="90" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="90" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="isBorderOpaque" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="91" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="true" line="91" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
     </node>
   </class_statement_node>
 </node>
</srcfile>