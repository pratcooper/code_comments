<?xml version="1.0" ?>
<srcfile name="GrowStroke.java" file_path="/Users/valerio/Research/Code/Source Code Comments Classification/comments_classification/media/jhotdraw/7.4.1/jhotdraw7zip/extracted/jhotdraw7/src/main/java/org/jhotdraw/geom/GrowStroke.java" >
 <node name="COMPILATION_UNIT" line="0" instruction_class="COMPILATION_UNIT" instruction="COMPILATION_UNIT">
   <node name="PACKAGE_DECLARATION" line="0" instruction_class="KEYWORD" instruction="PACKAGE_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="geom" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="java" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="awt" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="geom" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
       <node name="public" line="29" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
       </node>
     </node>
     <node name="GrowStroke" line="29" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
     </node>
     <node name="extends" line="29" instruction_class="KEYWORD" instruction="INHERITANCE_KEYWORD">
       <node name="DoubleStroke" line="29" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
       </node>
     </node>
     <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="31" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="31" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="grow" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="33" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="GrowStroke" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="33" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="grow" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="33" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="miterLimit" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
           <node name="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION" line="0" instruction_class="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION" instruction="UNQUALIFIED_SUPERCLASS_CONSTRUCTOR_INVOCATION">
             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                 <node name="*" line="34" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="grow" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="2d" line="34" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                   </node>
                 </node>
                 <node name="1d" line="34" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="BasicStroke" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CAP_SQUARE" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="BasicStroke" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="JOIN_BEVEL" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="miterLimit" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="34" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
                 <node name="0f" line="34" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="35" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="grow" line="35" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="grow" line="35" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="38" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Shape" line="38" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="createStrokedShape" line="38" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Shape" line="38" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="s" line="38" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="BezierPath" line="40" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bp" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="BezierPath" line="40" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Path2D" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="left" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Path2D" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Path2D" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="right" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Path2D" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="44" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="instanceof" line="44" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
               <node name="s" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Path2D" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="left" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="setWindingRule" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="Path2D" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="Double" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="s" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="getWindingRule" line="45" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="right" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="setWindingRule" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               <node name="Path2D" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="Double" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="s" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="getWindingRule" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="47" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="instanceof" line="47" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                 <node name="s" line="47" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="BezierPath" line="47" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="left" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="setWindingRule" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                               <node name="BezierPath" line="48" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="s" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="getWindingRule" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="right" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="setWindingRule" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                               <node name="BezierPath" line="49" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="s" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="getWindingRule" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="52" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="coords" line="52" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="double" line="52" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="6" line="52" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="54" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="PathIterator" line="54" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="i" line="54" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="s" line="54" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getPathIterator" line="54" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="null" line="54" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                           <node name="0.1d" line="54" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                 <node name="!" line="54" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="i" line="54" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="isDone" line="54" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="i" line="54" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="next" line="54" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="55" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="type" line="55" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="i" line="55" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="currentSegment" line="55" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="coords" line="55" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="switch" line="57" instruction_class="CONDITIONAL_STATEMENT" instruction="SWITCH_STATEMENT">
                 <node name="type" line="57" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                   <node name="case" line="58" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="PathIterator" line="58" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="SEG_MOVETO" line="58" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <statement_node name="if" line="59" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="59" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="bp" line="59" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="size" line="59" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="0" line="59" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="traceStroke" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="bp" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="left" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="right" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="bp" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="clear" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="bp" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="moveTo" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="0" line="63" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="63" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="break" line="64" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                   </statement_node>
                 </node>
                 <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                   <node name="case" line="65" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="PathIterator" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="SEG_LINETO" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <statement_node name="if" line="66" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="||" line="67" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="!=" line="66" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="coords" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="66" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="bp" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="get" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="-" line="66" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="bp" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="size" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                     <node name="1" line="66" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="x" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="0" line="66" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                       <node name="!=" line="67" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="coords" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="67" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="bp" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="get" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="-" line="67" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="bp" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="size" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                     <node name="1" line="67" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="y" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="0" line="67" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="bp" line="68" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="lineTo" line="68" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="coords" line="68" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="0" line="68" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="coords" line="68" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="1" line="68" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="break" line="70" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                   </statement_node>
                 </node>
                 <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                   <node name="case" line="71" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="PathIterator" line="71" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="SEG_QUADTO" line="71" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="bp" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="quadTo" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="0" line="72" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="72" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="2" line="72" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="3" line="72" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="break" line="73" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                   </statement_node>
                 </node>
                 <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                   <node name="case" line="74" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="PathIterator" line="74" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="SEG_CUBICTO" line="74" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="bp" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="curveTo" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="0" line="75" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="75" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="2" line="75" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="3" line="75" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="4" line="75" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="coords" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="5" line="75" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="break" line="76" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                   </statement_node>
                 </node>
                 <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                   <node name="case" line="77" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="PathIterator" line="77" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="SEG_CLOSE" line="77" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="bp" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="setClosed" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="true" line="78" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="break" line="79" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                   </statement_node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="82" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&gt;" line="82" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="bp" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="size" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="1" line="82" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="traceStroke" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="bp" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="left" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="right" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="87" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="Geom" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="contains" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="left" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getBounds2D" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="right" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getBounds2D" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="88" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="?" line="88" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="&gt;" line="88" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="grow" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="88" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="left" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="right" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="90" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="?" line="90" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="&gt;" line="90" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="grow" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="90" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="right" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="left" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
     </node>
   </class_statement_node>
 </node>
</srcfile>