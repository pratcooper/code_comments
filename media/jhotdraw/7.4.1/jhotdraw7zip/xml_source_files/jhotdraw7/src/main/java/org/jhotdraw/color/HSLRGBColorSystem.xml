<?xml version="1.0" ?>
<srcfile name="HSLRGBColorSystem.java" file_path="/Users/valerio/Research/Code/Source Code Comments Classification/comments_classification/media/jhotdraw/7.4.1/jhotdraw7zip/extracted/jhotdraw7/src/main/java/org/jhotdraw/color/HSLRGBColorSystem.java" >
 <node name="COMPILATION_UNIT" line="0" instruction_class="COMPILATION_UNIT" instruction="COMPILATION_UNIT">
   <node name="PACKAGE_DECLARATION" line="0" instruction_class="KEYWORD" instruction="PACKAGE_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="color" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="java" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="awt" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="javax" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="swing" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
       <node name="public" line="26" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
       </node>
     </node>
     <node name="HSLRGBColorSystem" line="26" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
     </node>
     <node name="extends" line="26" instruction_class="KEYWORD" instruction="INHERITANCE_KEYWORD">
       <node name="AbstractColorSystem" line="26" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
       </node>
     </node>
     <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="31" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="HSLRGBColorSystem" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="34" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="34" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="toRGB" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="LAST_FORMAL_PARAMETER" line="0" instruction_class="LAST_FORMAL_PARAMETER" instruction="LAST_FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="34" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="components" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="35" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="hue" line="35" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="components" line="35" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0" line="35" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="36" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="saturation" line="36" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="components" line="36" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="1" line="36" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="37" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="lightness" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="components" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2" line="37" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="40" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="q" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="41" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="41" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="lightness" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0.5f" line="41" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="42" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="q" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="*" line="42" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="lightness" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="+" line="42" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="1f" line="42" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                       </node>
                       <node name="saturation" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="44" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="q" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="-" line="44" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="+" line="44" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="lightness" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="saturation" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="*" line="44" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="lightness" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="saturation" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="46" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="p" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="46" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="*" line="46" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="2f" line="46" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                   </node>
                   <node name="lightness" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="q" line="46" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="49" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="hk" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="49" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="hue" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                   <node name="float" line="49" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Math" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="floor" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="hue" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="52" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="red" line="52" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="+" line="52" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="hk" line="52" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="/" line="52" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="1f" line="52" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                   </node>
                   <node name="3f" line="52" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="53" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="green" line="53" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="hk" line="53" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="54" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="blue" line="54" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="-" line="54" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                 <node name="hk" line="54" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="/" line="54" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="1f" line="54" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                   </node>
                   <node name="3f" line="54" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="57" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="57" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="red" line="57" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="57" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="58" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="red" line="58" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="+" line="58" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="red" line="58" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1f" line="58" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="59" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="&gt;" line="59" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="red" line="59" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="1" line="59" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="60" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="red" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="-" line="60" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="red" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1f" line="60" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="63" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="63" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="green" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="63" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="64" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="green" line="64" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="+" line="64" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="green" line="64" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1f" line="64" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="65" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="&gt;" line="65" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="green" line="65" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="1" line="65" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="66" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="green" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="-" line="66" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="green" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1f" line="66" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="69" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="69" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="blue" line="69" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="69" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="70" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="blue" line="70" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="+" line="70" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="blue" line="70" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="1f" line="70" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="71" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="&gt;" line="71" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="blue" line="71" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="1" line="71" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="72" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="blue" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="-" line="72" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="blue" line="72" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1f" line="72" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="77" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="77" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="red" line="77" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="77" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="1f" line="77" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
                 <node name="6f" line="77" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="78" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="red" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="+" line="78" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="p" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="*" line="78" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="*" line="78" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="-" line="78" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="q" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="p" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="6" line="78" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="red" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="79" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="&lt;" line="79" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="red" line="79" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0.5f" line="79" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="80" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="red" line="80" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="q" line="80" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="81" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&lt;" line="81" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="red" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="/" line="81" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="2f" line="81" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="3f" line="81" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="82" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="red" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="+" line="82" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="p" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="*" line="82" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="*" line="82" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="-" line="82" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="q" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="p" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="6" line="82" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="-" line="82" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="/" line="82" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                               <node name="2f" line="82" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                               </node>
                               <node name="3f" line="82" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                               </node>
                             </node>
                             <node name="red" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="84" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="red" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="p" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="87" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="87" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="green" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="87" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="1f" line="87" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
                 <node name="6f" line="87" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="88" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="green" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="+" line="88" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="p" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="*" line="88" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="*" line="88" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="-" line="88" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="q" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="p" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="6" line="88" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="green" line="88" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="89" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="&lt;" line="89" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="green" line="89" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0.5f" line="89" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="90" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="green" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="q" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="91" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&lt;" line="91" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="green" line="91" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="/" line="91" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="2f" line="91" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="3f" line="91" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="92" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="green" line="92" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="+" line="92" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="p" line="92" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="*" line="92" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="*" line="92" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="-" line="92" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="q" line="92" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="p" line="92" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="6" line="92" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="-" line="92" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="/" line="92" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                               <node name="2f" line="92" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                               </node>
                               <node name="3f" line="92" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                               </node>
                             </node>
                             <node name="green" line="92" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="94" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="green" line="94" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="p" line="94" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="97" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&lt;" line="97" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="blue" line="97" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="97" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="1f" line="97" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
                 <node name="6f" line="97" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="98" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="blue" line="98" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="+" line="98" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="p" line="98" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="*" line="98" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="*" line="98" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="-" line="98" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="q" line="98" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="p" line="98" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="6" line="98" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="blue" line="98" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="99" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="&lt;" line="99" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="blue" line="99" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0.5f" line="99" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="100" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="blue" line="100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="q" line="100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="101" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&lt;" line="101" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="blue" line="101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="/" line="101" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="2f" line="101" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="3f" line="101" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="102" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="blue" line="102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="+" line="102" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="p" line="102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="*" line="102" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="*" line="102" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="-" line="102" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="q" line="102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="p" line="102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="6" line="102" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="-" line="102" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="/" line="102" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                               <node name="2f" line="102" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                               </node>
                               <node name="3f" line="102" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                               </node>
                             </node>
                             <node name="blue" line="102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="104" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="blue" line="104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="p" line="104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="109" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="rgb" line="109" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="|" line="110" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                 <node name="|" line="109" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                   <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                     <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                       <node name="int" line="109" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="*" line="109" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="red" line="109" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="255" line="109" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                     <node name="16" line="109" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                     <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                       <node name="int" line="110" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="*" line="110" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="green" line="110" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="255" line="110" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                     <node name="8" line="110" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
                 <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                   <node name="int" line="111" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="*" line="111" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="blue" line="111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="255" line="111" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="113" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="rgb" line="113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="116" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="float" line="116" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="toComponents" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="116" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="red" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="116" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="green" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="116" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="blue" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="float" line="116" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="components" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="117" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="||" line="117" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="117" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="components" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="117" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="!=" line="117" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="components" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="3" line="117" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="118" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="components" line="118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="float" line="118" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="3" line="118" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="121" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="r" line="121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="121" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="red" line="121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="255f" line="121" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="122" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="g" line="122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="122" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="green" line="122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="255f" line="122" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="123" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="b" line="123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="123" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="blue" line="123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="255f" line="123" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="125" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="max" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="Math" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="max" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Math" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="max" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="r" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="g" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="b" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="126" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="min" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="Math" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="min" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="Math" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="min" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="r" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="g" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="b" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="128" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="hue" line="128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="129" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="saturation" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="130" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="luminance" line="130" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="132" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="132" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="max" line="132" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="min" line="132" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="133" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="hue" line="133" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="133" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="134" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="&amp;&amp;" line="134" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                 <node name="==" line="134" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="max" line="134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="r" line="134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="GREATER_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="g" line="134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="b" line="134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="135" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="hue" line="135" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="/" line="135" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="*" line="135" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="60f" line="135" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="g" line="135" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="b" line="135" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <node name="-" line="135" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="max" line="135" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="min" line="135" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="136" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="136" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="==" line="136" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="max" line="136" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="r" line="136" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="&lt;" line="136" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="g" line="136" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="b" line="136" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="137" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="hue" line="137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="+" line="137" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="/" line="137" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="*" line="137" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="60f" line="137" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                             <node name="-" line="137" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="g" line="137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="b" line="137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="-" line="137" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="max" line="137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="min" line="137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <node name="360f" line="137" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="if" line="138" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="==" line="138" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="max" line="138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="g" line="138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="139" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="hue" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="+" line="139" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="/" line="139" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="*" line="139" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                               <node name="60f" line="139" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                               </node>
                               <node name="-" line="139" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="b" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="r" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <node name="-" line="139" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="max" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="min" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="120f" line="139" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="141" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="hue" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="+" line="141" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="/" line="141" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="*" line="141" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                               <node name="60f" line="141" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                               </node>
                               <node name="-" line="141" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="r" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="g" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <node name="-" line="141" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="max" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="min" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="240f" line="141" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="144" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="luminance" line="144" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="144" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="+" line="144" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="max" line="144" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="min" line="144" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="2f" line="144" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="146" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="146" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="max" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="min" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="147" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="saturation" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="147" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="148" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="LESS_THAN_OR_EQUAL_TO" line="0" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="luminance" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0.5f" line="148" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="149" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="saturation" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="/" line="149" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="-" line="149" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="max" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="min" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="+" line="149" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="max" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="min" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="151" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="saturation" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="/" line="151" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="-" line="151" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="max" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="min" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="-" line="151" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="2" line="151" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="+" line="151" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="max" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="min" line="151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="154" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="components" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0" line="154" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="/" line="154" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="hue" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="360f" line="154" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="155" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="components" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="1" line="155" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="saturation" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="156" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="components" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2" line="156" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="luminance" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="158" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="components" line="158" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="161" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="161" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="getComponentCount" line="161" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="162" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="3" line="162" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
     </node>
   </class_statement_node>
 </node>
</srcfile>