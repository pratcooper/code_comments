<?xml version="1.0" ?>
<srcfile name="SVGInputFormat.java" file_path="/Users/valerio/Research/Code/Source Code Comments Classification/comments_classification/media/jhotdraw/7.4.1/jhotdraw7zip/extracted/jhotdraw7/src/main/java/org/jhotdraw/samples/svg/io/SVGInputFormat.java" >
 <node name="COMPILATION_UNIT" line="0" instruction_class="COMPILATION_UNIT" instruction="COMPILATION_UNIT">
   <node name="PACKAGE_DECLARATION" line="0" instruction_class="KEYWORD" instruction="PACKAGE_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="samples" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="svg" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="io" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="org" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="jhotdraw" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="draw" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="CompositeFigure" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="java" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="awt" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="java" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="awt" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="datatransfer" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="DataFlavor" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="java" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="awt" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="datatransfer" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Transferable" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="java" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="awt" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="datatransfer" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="UnsupportedFlavorException" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="geom" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="22" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="22" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="image" line="22" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="java" line="23" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="io" line="23" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="java" line="24" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="net" line="24" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="text" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="ParseException" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="java" line="26" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="util" line="26" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="javax" line="27" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="imageio" line="27" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="javax" line="28" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="swing" line="28" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="javax" line="29" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="swing" line="29" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="text" line="29" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="net" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="n3" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="nanoxml" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="draw" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="32" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="32" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="draw" line="32" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="io" line="32" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="InputFormat" line="32" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="xml" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="css" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="StyleManager" line="33" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="geom" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="35" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="35" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="io" line="35" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="org" line="36" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="jhotdraw" line="36" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="samples" line="36" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="svg" line="36" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="samples" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="svg" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="figures" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="org" line="38" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="jhotdraw" line="38" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="text" line="38" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="FontFormatter" line="38" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="org" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="jhotdraw" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="util" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="LocaleUtil" line="39" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="STATIC_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="samples" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="svg" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="SVGConstants" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="STATIC_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="samples" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="svg" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="SVGAttributeKeys" line="41" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="xml" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="css" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="CSSParser" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
       <node name="public" line="59" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
       </node>
     </node>
     <node name="SVGInputFormat" line="59" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
     </node>
     <node name="implements" line="59" instruction_class="KEYWORD" instruction="INTERFACE_IMPLEMENTATION_KEYWORD">
       <node name="InputFormat" line="59" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
       </node>
     </node>
     <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="64" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="64" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="64" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="64" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="DEBUG" line="64" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="false" line="64" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="68" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SVGFigureFactory" line="68" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="factory" line="68" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="73" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="URL" line="73" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="url" line="73" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="78" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="HashMap" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="String" line="78" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="IXMLElement" line="78" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="identifiedElements" line="78" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="82" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="HashMap" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="IXMLElement" line="82" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="Object" line="82" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="elementObjects" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="87" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="StreamPosTokenizer" line="87" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="toPathTokenizer" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="89" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="FontFormatter" line="89" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="fontFormatter" line="89" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
             <node name="FontFormatter" line="89" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
             </node>
           </node>
         </node>
       </statement_node>
       <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="94" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="94" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Viewport" line="94" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="99" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="double" line="99" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="width" line="99" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="640d" line="99" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="103" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="double" line="103" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="height" line="103" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="480d" line="103" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="107" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Rectangle2D" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="viewBox" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Rectangle2D" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="0d" line="107" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="0d" line="107" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="640d" line="107" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="480d" line="107" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="111" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="double" line="111" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="widthPercentFactor" line="111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="111" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="640d" line="111" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
                 <node name="100d" line="111" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="115" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="double" line="115" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="heightPercentFactor" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="/" line="115" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="480d" line="115" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
                 <node name="100d" line="115" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="120" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="double" line="120" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="numberFactor" line="120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="125" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="boolean" line="125" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="isPreserveAspectRatio" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="true" line="125" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="126" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="126" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="126" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="attributes" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="126" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="126" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="public" line="128" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="String" line="128" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="toString" line="128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="return" line="129" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="+" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="+" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="+" line="131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="+" line="130" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="+" line="130" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="+" line="130" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="+" line="129" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="+" line="129" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="+" line="129" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="&quot;widthPercentFactor:&quot;" line="129" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                   <node name="widthPercentFactor" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="&quot;;&quot;" line="129" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                               <node name="&quot;heightPercentFactor:&quot;" line="130" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                             <node name="heightPercentFactor" line="130" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="&quot;;&quot;" line="130" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                         <node name="&quot;numberFactor:&quot;" line="131" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                       <node name="numberFactor" line="131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="&quot;;&quot;" line="131" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                   <node name="attributes" line="132" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </method_statement_node>
         </node>
       </class_statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="139" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Stack" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="Viewport" line="139" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="viewportStack" line="139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="144" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="StyleManager" line="144" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="styleManager" line="144" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="148" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="LinkedList" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="Figure" line="148" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="figures" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="152" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="IXMLElement" line="152" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="document" line="152" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="155" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SVGInputFormat" line="155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
           <node name="ALTERNATE_CONSTRUCTOR_INVOCATION" line="0" instruction_class="ALTERNATE_CONSTRUCTOR_INVOCATION" instruction="ALTERNATE_CONSTRUCTOR_INVOCATION">
             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                 <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                   <node name="DefaultSVGFigureFactory" line="156" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
           </node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="159" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SVGInputFormat" line="159" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SVGFigureFactory" line="159" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="factory" line="159" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="160" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="factory" line="160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="factory" line="160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="163" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="read" line="163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="File" line="163" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="file" line="163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Drawing" line="163" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="drawing" line="163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="163" instruction_class="throws" instruction="throws">
           <node name="IOException" line="163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="read" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="file" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="drawing" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="true" line="164" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="176" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="read" line="176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="InputStream" line="176" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="in" line="176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Drawing" line="176" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="drawing" line="176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="176" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="replace" line="176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="176" instruction_class="throws" instruction="throws">
           <node name="IOException" line="176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="long" line="177" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="start" line="177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="System" line="177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="currentTimeMillis" line="177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="178" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="figures" line="178" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="LinkedList" line="178" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="Figure" line="178" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLParser" line="179" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="parser" line="179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="180" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="181" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="parser" line="181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="XMLParserFactory" line="181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="createDefaultXMLParser" line="181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="182" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="Exception" line="182" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ex" line="182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="InternalError" line="183" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="e" line="183" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="InternalError" line="183" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;Unable to instantiate NanoXML Parser&quot;" line="183" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="e" line="184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="initCause" line="184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="ex" line="184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="throw" line="185" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                   <node name="e" line="185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="System" line="187" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="out" line="187" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="println" line="187" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="+" line="187" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="&quot;SVGInputFormat parser created &quot;" line="187" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="-" line="187" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="System" line="187" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="currentTimeMillis" line="187" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="start" line="187" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLReader" line="188" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="reader" line="188" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="StdXMLReader" line="188" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="in" line="188" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="parser" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="setReader" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="reader" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="System" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="out" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="println" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="+" line="190" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="&quot;SVGInputFormat reader created &quot;" line="190" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="-" line="190" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="System" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="currentTimeMillis" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="start" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="191" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="192" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="document" line="192" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="IXMLElement" line="192" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="parser" line="192" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="parse" line="192" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="193" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="XMLException" line="193" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ex" line="193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="IOException" line="194" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="e" line="194" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="IOException" line="194" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="ex" line="194" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getMessage" line="194" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="e" line="195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="initCause" line="195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="ex" line="195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="throw" line="196" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                   <node name="e" line="196" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="System" line="198" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="out" line="198" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="println" line="198" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="+" line="198" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="&quot;SVGInputFormat document created &quot;" line="198" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="-" line="198" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="System" line="198" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="currentTimeMillis" line="198" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="start" line="198" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="202" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="svg" line="202" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="document" line="202" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Stack" line="203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Iterator" line="203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="IXMLElement" line="203" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stack" line="203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Stack" line="203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Iterator" line="203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                         <node name="IXMLElement" line="203" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="LinkedList" line="204" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="IXMLElement" line="204" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="ll" line="204" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="LinkedList" line="204" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="IXMLElement" line="204" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="ll" line="205" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="add" line="205" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="document" line="205" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="stack" line="206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="push" line="206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="ll" line="206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="iterator" line="206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="while" line="207" instruction_class="LOOP_STATEMENT" instruction="WHILE_STATEMENT">
             <node name="&amp;&amp;" line="207" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                 <node name="!" line="207" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="stack" line="207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="empty" line="207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="stack" line="207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="peek" line="207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="hasNext" line="207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Iterator" line="208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="IXMLElement" line="208" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="iter" line="208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="stack" line="208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="peek" line="208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="IXMLElement" line="209" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="node" line="209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="iter" line="209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="next" line="209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Iterator" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="IXMLElement" line="211" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="children" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="?" line="211" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="==" line="211" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="node" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getChildren" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="null" line="211" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <node name="null" line="211" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="node" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="getChildren" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="iterator" line="211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="213" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                   <node name="!" line="213" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="iter" line="213" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="hasNext" line="213" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="stack" line="214" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="pop" line="214" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="216" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="216" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="!=" line="216" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="children" line="216" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="null" line="216" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="children" line="216" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="hasNext" line="216" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="stack" line="217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="push" line="217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="children" line="217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="219" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="220" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="&amp;&amp;" line="219" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="!=" line="219" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="node" line="219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getName" line="219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="null" line="219" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="node" line="220" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="getName" line="220" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="equals" line="220" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;svg&quot;" line="220" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="||" line="221" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="==" line="221" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="node" line="221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getNamespace" line="221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="null" line="221" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="node" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="getNamespace" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="equals" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="SVG_NAMESPACE" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="223" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="svg" line="223" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="node" line="223" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="break" line="224" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="229" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="||" line="230" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="||" line="229" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                 <node name="==" line="229" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="svg" line="229" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getName" line="229" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="null" line="229" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                   <node name="!" line="230" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="svg" line="230" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="getName" line="230" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="equals" line="230" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;svg&quot;" line="230" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
               <node name="&amp;&amp;" line="231" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                 <node name="!=" line="231" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="svg" line="231" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getNamespace" line="231" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="null" line="231" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                   <node name="!" line="232" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="svg" line="232" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="getNamespace" line="232" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="equals" line="232" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="SVG_NAMESPACE" line="232" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="throw" line="233" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                 <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                   <node name="IOException" line="233" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="233" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;&#039;svg&#039; element expected: &quot;" line="233" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="svg" line="233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="getName" line="233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="initStorageContext" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="document" line="238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="flattenStyles" line="239" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="svg" line="239" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readElement" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="svg" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="long" line="244" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="end" line="244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="System" line="244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="currentTimeMillis" line="244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="245" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="245" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="246" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;SVGInputFormat elapsed:&quot;" line="246" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="-" line="246" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="end" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="start" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="252" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="replace" line="252" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="drawing" line="253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="removeAllChildren" line="253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="drawing" line="255" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="addAll" line="255" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="figures" line="255" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="258" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="replace" line="258" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="Viewport" line="259" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="viewport" line="259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="viewportStack" line="259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="firstElement" line="259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="drawing" line="260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="set" line="260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="VIEWPORT_FILL" line="260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="VIEWPORT_FILL" line="260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewport" line="260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="attributes" line="260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="drawing" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="set" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="VIEWPORT_FILL_OPACITY" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="VIEWPORT_FILL_OPACITY" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewport" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="attributes" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="drawing" line="262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="set" line="262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="VIEWPORT_HEIGHT" line="262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="VIEWPORT_HEIGHT" line="262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewport" line="262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="attributes" line="262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="drawing" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="set" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="VIEWPORT_WIDTH" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="VIEWPORT_WIDTH" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewport" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="attributes" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="document" line="267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="dispose" line="267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="identifiedElements" line="268" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="clear" line="268" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="clear" line="269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="viewportStack" line="270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="clear" line="270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="styleManager" line="271" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="clear" line="271" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="273" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="document" line="273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="273" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="274" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="identifiedElements" line="274" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="274" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="275" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="elementObjects" line="275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="275" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="276" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="viewportStack" line="276" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="276" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="277" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="styleManager" line="277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="277" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="281" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="initStorageContext" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="281" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="root" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="282" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="identifiedElements" line="282" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="282" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="String" line="282" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="IXMLElement" line="282" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="identifyElements" line="283" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="root" line="283" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="284" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="elementObjects" line="284" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="284" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="IXMLElement" line="284" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="284" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="285" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="viewportStack" line="285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Stack" line="285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="Viewport" line="285" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="viewportStack" line="286" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="push" line="286" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="Viewport" line="286" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="287" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="styleManager" line="287" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="StyleManager" line="287" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="295" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="flattenStyles" line="295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="295" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="296" instruction_class="throws" instruction="throws">
           <node name="IOException" line="296" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="297" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="298" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="&amp;&amp;" line="297" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                 <node name="&amp;&amp;" line="297" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="!=" line="297" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="elem" line="297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getName" line="297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="null" line="297" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="elem" line="297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getName" line="297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="equals" line="297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;style&quot;" line="297" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;type&quot;" line="298" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;&quot;" line="298" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="equals" line="298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;text/css&quot;" line="298" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
               <node name="!=" line="299" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="elem" line="299" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="getContent" line="299" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="null" line="299" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="CSSParser" line="300" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="cssParser" line="300" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="CSSParser" line="300" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="cssParser" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="parse" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="elem" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getContent" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="styleManager" line="301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="304" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="||" line="304" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="==" line="304" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="elem" line="304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getNamespace" line="304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="null" line="304" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="elem" line="305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getNamespace" line="305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="equals" line="305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="SVG_NAMESPACE" line="305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="String" line="307" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="style" line="307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readAttribute" line="307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="elem" line="307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="&quot;style&quot;" line="307" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                             <node name="null" line="307" instruction_class="LITERAL" instruction="NULL_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="308" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="308" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="style" line="308" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="null" line="308" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="for" line="309" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                         <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="String" line="309" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="styleProperty" line="309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="style" line="309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="split" line="309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;;&quot;" line="309" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                               <node name="String" line="310" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="stylePropertyElements" line="310" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="styleProperty" line="310" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="split" line="310" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="&quot;:&quot;" line="310" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="if" line="311" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="&amp;&amp;" line="311" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                               <node name="==" line="311" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="stylePropertyElements" line="311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="length" line="311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="2" line="311" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                                 <node name="!" line="312" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="elem" line="312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="hasAttribute" line="312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                               <node name="stylePropertyElements" line="312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="0" line="312" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                             </node>
                                             <node name="trim" line="312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                         <node name="SVG_NAMESPACE" line="312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="elem" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="setAttribute" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                             <node name="stylePropertyElements" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="0" line="314" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                             </node>
                                           </node>
                                           <node name="trim" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="SVG_NAMESPACE" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                             <node name="stylePropertyElements" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="1" line="314" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                             </node>
                                           </node>
                                           <node name="trim" line="314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="styleManager" line="319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="applyStylesTo" line="319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="for" line="321" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                     <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="IXMLElement" line="321" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="node" line="321" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="elem" line="321" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getChildren" line="321" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="322" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="instanceof" line="322" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                           <node name="node" line="322" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="IXMLElement" line="322" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="IXMLElement" line="323" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="child" line="323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                 <node name="IXMLElement" line="323" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                 </node>
                                 <node name="node" line="323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="flattenStyles" line="324" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="child" line="324" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="336" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="336" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readElement" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="336" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="337" instruction_class="throws" instruction="throws">
           <node name="IOException" line="337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="338" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="339" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="+" line="339" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="+" line="339" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="&quot;SVGInputFormat.readElement &quot;" line="339" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="elem" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getName" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                           </node>
                           <node name="&quot; line:&quot;" line="339" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="elem" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="getLineNr" line="339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="341" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="f" line="341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="341" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="342" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="||" line="342" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="342" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="elem" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="getNamespace" line="342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="null" line="342" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getNamespace" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="equals" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="SVG_NAMESPACE" line="343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="String" line="344" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="name" line="344" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="344" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getName" line="344" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="345" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="345" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="name" line="345" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="345" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="346" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="DEBUG" line="346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="System" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="err" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="println" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="347" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="&quot;SVGInputFormat warning: skipping nameless element at line &quot;" line="347" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="elem" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="getLineNr" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="if" line="349" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="name" line="349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="equals" line="349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;a&quot;" line="349" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="350" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="f" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="readAElement" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="elem" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="351" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="name" line="351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="equals" line="351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;circle&quot;" line="351" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="352" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="f" line="352" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="readCircleElement" line="352" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="352" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="if" line="353" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="name" line="353" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="equals" line="353" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;defs&quot;" line="353" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="readDefsElement" line="354" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="354" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="=" line="355" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                             <node name="f" line="355" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="null" line="355" instruction_class="LITERAL" instruction="NULL_LITERAL">
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="if" line="356" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="name" line="356" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="equals" line="356" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="&quot;ellipse&quot;" line="356" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="357" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="f" line="357" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="readEllipseElement" line="357" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="elem" line="357" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="if" line="358" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="name" line="358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="equals" line="358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;g&quot;" line="358" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="=" line="359" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                 <node name="f" line="359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="readGElement" line="359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="elem" line="359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="if" line="360" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="name" line="360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="equals" line="360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="&quot;image&quot;" line="360" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="=" line="361" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                   <node name="f" line="361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="readImageElement" line="361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="elem" line="361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="if" line="362" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="name" line="362" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="equals" line="362" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="&quot;line&quot;" line="362" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="=" line="363" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                     <node name="f" line="363" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="readLineElement" line="363" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="elem" line="363" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                               </statement_node>
                               <statement_node name="if" line="364" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="name" line="364" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="equals" line="364" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="&quot;linearGradient&quot;" line="364" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="readLinearGradientElement" line="365" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="elem" line="365" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="=" line="366" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                       <node name="f" line="366" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="null" line="366" instruction_class="LITERAL" instruction="NULL_LITERAL">
                                       </node>
                                     </node>
                                   </statement_node>
                                 </statement_node>
                                 <statement_node name="if" line="367" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="name" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="equals" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="&quot;path&quot;" line="367" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                       <node name="=" line="368" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                         <node name="f" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="readPathElement" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="elem" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </statement_node>
                                   </statement_node>
                                   <statement_node name="if" line="369" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="name" line="369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="equals" line="369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="&quot;polygon&quot;" line="369" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                         <node name="=" line="370" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                           <node name="f" line="370" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="readPolygonElement" line="370" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                 <node name="elem" line="370" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </statement_node>
                                     </statement_node>
                                     <statement_node name="if" line="371" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="name" line="371" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="equals" line="371" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="&quot;polyline&quot;" line="371" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                           <node name="=" line="372" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                             <node name="f" line="372" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="readPolylineElement" line="372" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                   <node name="elem" line="372" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                         </statement_node>
                                       </statement_node>
                                       <statement_node name="if" line="373" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="name" line="373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="equals" line="373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="&quot;radialGradient&quot;" line="373" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="readRadialGradientElement" line="374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                   <node name="elem" line="374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </statement_node>
                                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                             <node name="=" line="375" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                               <node name="f" line="375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="null" line="375" instruction_class="LITERAL" instruction="NULL_LITERAL">
                                               </node>
                                             </node>
                                           </statement_node>
                                         </statement_node>
                                         <statement_node name="if" line="376" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="name" line="376" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="equals" line="376" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                 <node name="&quot;rect&quot;" line="376" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                               <node name="=" line="377" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                                 <node name="f" line="377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                   <node name="readRectElement" line="377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                       <node name="elem" line="377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </statement_node>
                                           </statement_node>
                                           <statement_node name="if" line="378" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                 <node name="name" line="378" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="equals" line="378" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                   <node name="&quot;solidColor&quot;" line="378" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                   <node name="readSolidColorElement" line="379" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                       <node name="elem" line="379" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </statement_node>
                                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                                 <node name="=" line="380" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                                   <node name="f" line="380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                   <node name="null" line="380" instruction_class="LITERAL" instruction="NULL_LITERAL">
                                                   </node>
                                                 </node>
                                               </statement_node>
                                             </statement_node>
                                             <statement_node name="if" line="381" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                   <node name="name" line="381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                   <node name="equals" line="381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                 </node>
                                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                     <node name="&quot;svg&quot;" line="381" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                                   <node name="=" line="382" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                                     <node name="f" line="382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                       <node name="readSVGElement" line="382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                           <node name="elem" line="382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                           </node>
                                                         </node>
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </statement_node>
                                               </statement_node>
                                               <statement_node name="if" line="384" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                     <node name="name" line="384" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                     <node name="equals" line="384" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                   </node>
                                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                       <node name="&quot;switch&quot;" line="384" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                                     <node name="=" line="385" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                                       <node name="f" line="385" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                         <node name="readSwitchElement" line="385" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                         </node>
                                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                             <node name="elem" line="385" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                             </node>
                                                           </node>
                                                         </node>
                                                       </node>
                                                     </node>
                                                   </statement_node>
                                                 </statement_node>
                                                 <statement_node name="if" line="386" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                       <node name="name" line="386" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                       <node name="equals" line="386" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                     </node>
                                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                         <node name="&quot;text&quot;" line="386" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                         </node>
                                                       </node>
                                                     </node>
                                                   </node>
                                                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                                       <node name="=" line="387" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                                         <node name="f" line="387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                         </node>
                                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                           <node name="readTextElement" line="387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                           </node>
                                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                               <node name="elem" line="387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                             </node>
                                                           </node>
                                                         </node>
                                                       </node>
                                                     </statement_node>
                                                   </statement_node>
                                                   <statement_node name="if" line="388" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                         <node name="name" line="388" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                         </node>
                                                         <node name="equals" line="388" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                         </node>
                                                       </node>
                                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                           <node name="&quot;textArea&quot;" line="388" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                           </node>
                                                         </node>
                                                       </node>
                                                     </node>
                                                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                                         <node name="=" line="389" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                                           <node name="f" line="389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                           </node>
                                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                             <node name="readTextAreaElement" line="389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                             </node>
                                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                                 <node name="elem" line="389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                                 </node>
                                                               </node>
                                                             </node>
                                                           </node>
                                                         </node>
                                                       </statement_node>
                                                     </statement_node>
                                                     <statement_node name="if" line="390" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                           <node name="name" line="390" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                           </node>
                                                           <node name="equals" line="390" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                           </node>
                                                         </node>
                                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                             <node name="&quot;title&quot;" line="390" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                             </node>
                                                           </node>
                                                         </node>
                                                       </node>
                                                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                                       </statement_node>
                                                       <statement_node name="if" line="393" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                             <node name="name" line="393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                             </node>
                                                             <node name="equals" line="393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                             </node>
                                                           </node>
                                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                               <node name="&quot;use&quot;" line="393" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                               </node>
                                                             </node>
                                                           </node>
                                                         </node>
                                                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                                             <node name="=" line="394" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                                               <node name="f" line="394" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                                 <node name="readUseElement" line="394" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                                 </node>
                                                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                                     <node name="elem" line="394" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                                     </node>
                                                                   </node>
                                                                 </node>
                                                               </node>
                                                             </node>
                                                           </statement_node>
                                                         </statement_node>
                                                         <statement_node name="if" line="395" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                               <node name="name" line="395" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                               <node name="equals" line="395" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                             </node>
                                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                                 <node name="&quot;style&quot;" line="395" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                                 </node>
                                                               </node>
                                                             </node>
                                                           </node>
                                                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                                           </statement_node>
                                                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                                             <statement_node name="if" line="399" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                                               <node name="DEBUG" line="399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                                         <node name="System" line="400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                                         </node>
                                                                         <node name="out" line="400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                                         </node>
                                                                       </node>
                                                                       <node name="println" line="400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                                       </node>
                                                                     </node>
                                                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                                         <node name="+" line="400" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                                           <node name="+" line="400" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                                             <node name="&quot;SVGInputFormat not implemented for &lt;&quot;" line="400" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                                             </node>
                                                                             <node name="name" line="400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                                             </node>
                                                                           </node>
                                                                           <node name="&quot;&gt;&quot;" line="400" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                                           </node>
                                                                         </node>
                                                                       </node>
                                                                     </node>
                                                                   </node>
                                                                 </statement_node>
                                                               </statement_node>
                                                             </statement_node>
                                                           </statement_node>
                                                         </statement_node>
                                                       </statement_node>
                                                     </statement_node>
                                                   </statement_node>
                                                 </statement_node>
                                               </statement_node>
                                             </statement_node>
                                           </statement_node>
                                         </statement_node>
                                       </statement_node>
                                     </statement_node>
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="404" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="instanceof" line="404" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
               <node name="f" line="404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="SVGFigure" line="404" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="405" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                       <node name="SVGFigure" line="405" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="f" line="405" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="isEmpty" line="405" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="407" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="null" line="407" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="409" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="!=" line="409" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="f" line="409" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="409" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="if" line="410" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="DEBUG" line="410" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="System" line="411" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="out" line="411" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="println" line="411" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="+" line="411" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="&quot;SVGInputFormat warning: not an SVGFigure &quot;" line="411" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                               <node name="f" line="411" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="415" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="f" line="415" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="421" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readDefsElement" line="421" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="421" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="421" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="422" instruction_class="throws" instruction="throws">
           <node name="IOException" line="422" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="for" line="423" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               </node>
               <node name="IXMLElement" line="423" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
               <node name="node" line="423" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="423" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getChildren" line="423" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="424" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="instanceof" line="424" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                   <node name="node" line="424" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="IXMLElement" line="424" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="IXMLElement" line="425" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="child" line="425" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="IXMLElement" line="425" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="node" line="425" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="Figure" line="426" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="childFigure" line="426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readElement" line="426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="child" line="426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="434" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="434" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readGElement" line="434" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="434" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="434" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="435" instruction_class="throws" instruction="throws">
           <node name="IOException" line="435" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="436" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="436" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="436" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="436" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="436" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="436" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="436" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="437" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="437" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="437" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="438" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="438" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="438" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="CompositeFigure" line="439" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="g" line="439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createG" line="439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="a" line="439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="441" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               </node>
               <node name="IXMLElement" line="441" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
               <node name="node" line="441" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="441" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getChildren" line="441" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="442" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="instanceof" line="442" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                   <node name="node" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="IXMLElement" line="442" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="IXMLElement" line="443" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="child" line="443" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="IXMLElement" line="443" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="node" line="443" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="Figure" line="444" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="childFigure" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readElement" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="child" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="446" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&amp;&amp;" line="446" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="readAttribute" line="446" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="child" line="446" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="&quot;visibility&quot;" line="446" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="&quot;visible&quot;" line="446" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="equals" line="446" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;visible&quot;" line="446" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                         <node name="!" line="447" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="readAttribute" line="447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="child" line="447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="&quot;display&quot;" line="447" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="&quot;inline&quot;" line="447" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="equals" line="447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;none&quot;" line="447" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="448" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="448" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="childFigure" line="448" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="448" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="g" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="basicAdd" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="childFigure" line="449" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="454" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="454" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="454" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="455" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="455" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="TRANSFORM" line="455" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="get" line="455" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="a" line="455" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="null" line="455" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="g" line="456" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="transform" line="456" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="TRANSFORM" line="456" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="456" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="a" line="456" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="458" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="g" line="458" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="464" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="464" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readAElement" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="464" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="465" instruction_class="throws" instruction="throws">
           <node name="IOException" line="465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="466" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="466" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="466" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="466" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="467" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="467" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="467" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="CompositeFigure" line="468" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="g" line="468" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="468" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createG" line="468" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="a" line="468" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="470" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="href" line="470" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="470" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="470" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;xlink:href&quot;" line="470" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="470" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="471" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="471" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="href" line="471" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="471" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="472" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="href" line="472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="readAttribute" line="472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&quot;href&quot;" line="472" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="null" line="472" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="474" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="target" line="474" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="474" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="474" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;target&quot;" line="474" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="474" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="475" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="475" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="476" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="476" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="476" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="476" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;SVGInputFormat.readAElement href=&quot;" line="476" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="href" line="476" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="for" line="479" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               </node>
               <node name="IXMLElement" line="479" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
               <node name="node" line="479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getChildren" line="479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="480" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="instanceof" line="480" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                   <node name="node" line="480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="IXMLElement" line="480" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="IXMLElement" line="481" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="child" line="481" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="IXMLElement" line="481" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="node" line="481" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="Figure" line="482" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="childFigure" line="482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readElement" line="482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="child" line="482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="484" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&amp;&amp;" line="484" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="readAttribute" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="child" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="&quot;visibility&quot;" line="484" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="&quot;visible&quot;" line="484" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="equals" line="484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;visible&quot;" line="484" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                         <node name="!" line="485" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="readAttribute" line="485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="child" line="485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="&quot;display&quot;" line="485" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="&quot;inline&quot;" line="485" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="equals" line="485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;none&quot;" line="485" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="486" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="486" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="childFigure" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="486" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="g" line="487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="basicAdd" line="487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="childFigure" line="487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="490" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="490" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="childFigure" line="490" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="null" line="490" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="childFigure" line="491" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="set" line="491" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="LINK" line="491" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="href" line="491" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="childFigure" line="492" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="set" line="492" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="LINK_TARGET" line="492" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="target" line="492" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="494" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="DEBUG" line="494" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="System" line="495" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="out" line="495" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="println" line="495" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="&quot;SVGInputFormat &lt;a&gt; has no child figure&quot;" line="495" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="501" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="?" line="501" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="501" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="g" line="501" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="getChildCount" line="501" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="1" line="501" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="g" line="501" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getChild" line="501" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="0" line="501" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="g" line="501" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="507" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="507" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readSVGElement" line="507" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="507" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="507" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="508" instruction_class="throws" instruction="throws">
           <node name="IOException" line="508" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Viewport" line="510" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="viewport" line="510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="Viewport" line="510" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="512" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="widthValue" line="512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;width&quot;" line="512" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;100%&quot;" line="512" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="513" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="heightValue" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;height&quot;" line="513" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;100%&quot;" line="513" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="515" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="viewport" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="width" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toWidth" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="widthValue" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="516" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="viewport" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="height" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toHeight" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="heightValue" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="518" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="readAttribute" line="518" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="elem" line="518" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="&quot;viewBox&quot;" line="518" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                       <node name="&quot;none&quot;" line="518" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="equals" line="518" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;none&quot;" line="518" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="519" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="viewport" line="519" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="viewBox" line="519" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="width" line="519" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="viewport" line="519" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="width" line="519" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="520" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="viewport" line="520" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="viewBox" line="520" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="height" line="520" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="viewport" line="520" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="height" line="520" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="String" line="522" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="viewBoxValues" line="522" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toWSOrCommaSeparatedArray" line="522" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="readAttribute" line="522" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="elem" line="522" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="&quot;viewBox&quot;" line="522" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                               <node name="&quot;none&quot;" line="522" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="523" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="viewport" line="523" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="viewBox" line="523" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="x" line="523" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toNumber" line="523" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="523" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="viewBoxValues" line="523" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="523" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="524" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="viewport" line="524" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="viewBox" line="524" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="y" line="524" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toNumber" line="524" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="524" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="viewBoxValues" line="524" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="1" line="524" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="525" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="viewport" line="525" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="viewBox" line="525" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="width" line="525" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toNumber" line="525" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="525" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="viewBoxValues" line="525" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="2" line="525" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="526" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="viewport" line="526" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="viewBox" line="526" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="height" line="526" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toNumber" line="526" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="526" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="viewBoxValues" line="526" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3" line="526" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="529" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&gt;" line="529" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="widthValue" line="529" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="indexOf" line="529" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&#039;%&#039;" line="529" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="0" line="529" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="530" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewport" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="width" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="viewport" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="viewBox" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="width" line="530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="532" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&gt;" line="532" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="heightValue" line="532" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="indexOf" line="532" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&#039;%&#039;" line="532" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="0" line="532" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="533" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewport" line="533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="height" line="533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="viewport" line="533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="viewBox" line="533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="height" line="533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="536" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="536" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="viewportStack" line="536" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="size" line="536" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="1" line="536" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="539" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="viewport" line="539" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="isPreserveAspectRatio" line="539" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="true" line="539" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="541" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="viewport" line="541" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="isPreserveAspectRatio" line="541" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                     <node name="!" line="541" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="readAttribute" line="541" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="541" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="&quot;preserveAspectRatio&quot;" line="541" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="&quot;none&quot;" line="541" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="equals" line="541" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;none&quot;" line="541" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="544" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="viewport" line="544" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="widthPercentFactor" line="544" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="/" line="544" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="viewport" line="544" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="viewBox" line="544" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="width" line="544" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="100d" line="544" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="545" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="viewport" line="545" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="heightPercentFactor" line="545" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="/" line="545" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="viewport" line="545" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="viewBox" line="545" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="height" line="545" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="100d" line="545" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="546" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="viewport" line="546" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="numberFactor" line="546" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="Math" line="546" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="min" line="546" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="/" line="547" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewport" line="547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="width" line="547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="viewport" line="547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="viewBox" line="547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="width" line="547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <node name="/" line="548" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewport" line="548" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="height" line="548" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="viewport" line="548" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="viewBox" line="548" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="height" line="548" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="AffineTransform" line="550" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="viewBoxTransform" line="550" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="AffineTransform" line="550" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="viewBoxTransform" line="552" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="translate" line="552" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="/" line="553" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="*" line="553" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                         <node name="-" line="553" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewport" line="553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="viewBox" line="553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="x" line="553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewport" line="553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="width" line="553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewport" line="553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="viewBox" line="553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="width" line="553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="/" line="554" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                     <node name="*" line="554" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                         <node name="-" line="554" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewport" line="554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="viewBox" line="554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="y" line="554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewport" line="554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="height" line="554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewport" line="554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="viewBox" line="554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="height" line="554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="555" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
               <node name="viewport" line="555" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="isPreserveAspectRatio" line="555" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="double" line="556" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="factor" line="556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Math" line="556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="min" line="556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="/" line="557" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="viewport" line="557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="width" line="557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewport" line="557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="viewBox" line="557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="width" line="557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <node name="/" line="558" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="viewport" line="558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="height" line="558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewport" line="558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="viewBox" line="558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="height" line="558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="viewBoxTransform" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="scale" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="factor" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="factor" line="559" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="viewBoxTransform" line="561" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="scale" line="561" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="/" line="562" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="viewport" line="562" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="width" line="562" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="viewport" line="562" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="viewBox" line="562" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="width" line="562" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <node name="/" line="563" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="viewport" line="563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="height" line="563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="viewport" line="563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="viewBox" line="563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="height" line="563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="viewportStack" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="push" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="viewport" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readViewportAttributes" line="567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewportStack" line="567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="firstElement" line="567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="attributes" line="567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="571" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               </node>
               <node name="IXMLElement" line="571" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
               <node name="node" line="571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getChildren" line="571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="572" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="instanceof" line="572" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                   <node name="node" line="572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="IXMLElement" line="572" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="IXMLElement" line="573" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="child" line="573" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="IXMLElement" line="573" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="node" line="573" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="Figure" line="574" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="childFigure" line="574" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readElement" line="574" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="child" line="574" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="576" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&amp;&amp;" line="576" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="readAttribute" line="576" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="child" line="576" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="&quot;visibility&quot;" line="576" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="&quot;visible&quot;" line="576" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="equals" line="576" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;visible&quot;" line="576" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                         <node name="!" line="577" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="readAttribute" line="577" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="child" line="577" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="&quot;display&quot;" line="577" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="&quot;inline&quot;" line="577" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="equals" line="577" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;none&quot;" line="577" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="579" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="579" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="childFigure" line="579" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="579" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="childFigure" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="transform" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="viewBoxTransform" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="figures" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="add" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="childFigure" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="viewportStack" line="587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="pop" line="587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="588" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="null" line="588" instruction_class="LITERAL" instruction="NULL_LITERAL">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="594" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="594" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readRectElement" line="594" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="594" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="594" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="595" instruction_class="throws" instruction="throws">
           <node name="IOException" line="595" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="596" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="596" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="596" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="596" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="599" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="599" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="599" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readShapeAttributes" line="600" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="600" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="600" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="602" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="x" line="602" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="602" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="602" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="602" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="602" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;x&quot;" line="602" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="602" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="603" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="y" line="603" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="603" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="603" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="603" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="603" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;y&quot;" line="603" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="603" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="604" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="w" line="604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toWidth" line="604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;width&quot;" line="604" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="604" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="605" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="h" line="605" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toHeight" line="605" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="605" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="605" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="605" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;height&quot;" line="605" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="605" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="607" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="rxValue" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="607" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;rx&quot;" line="607" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;none&quot;" line="607" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="608" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="ryValue" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;ry&quot;" line="608" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;none&quot;" line="608" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="609" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="rxValue" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="equals" line="609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;none&quot;" line="609" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="610" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="rxValue" line="610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ryValue" line="610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="612" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="ryValue" line="612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="equals" line="612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;none&quot;" line="612" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="613" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ryValue" line="613" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="rxValue" line="613" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="615" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="rx" line="615" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="615" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="615" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="?" line="615" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="rxValue" line="615" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="equals" line="615" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;none&quot;" line="615" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="&quot;0&quot;" line="615" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                       <node name="rxValue" line="615" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="616" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="ry" line="616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="?" line="616" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="ryValue" line="616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="equals" line="616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;none&quot;" line="616" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="&quot;0&quot;" line="616" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                       <node name="ryValue" line="616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="618" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="figure" line="618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createRect" line="618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="x" line="618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y" line="618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="w" line="618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="h" line="618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="rx" line="618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ry" line="618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="a" line="618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="619" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="619" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="619" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="figure" line="619" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="620" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="figure" line="620" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="626" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="626" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readCircleElement" line="626" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="626" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="626" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="627" instruction_class="throws" instruction="throws">
           <node name="IOException" line="627" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="628" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="628" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="628" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="628" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="628" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="629" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="629" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="629" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="630" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="630" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="630" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="631" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="631" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="631" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readShapeAttributes" line="632" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="632" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="632" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="634" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cx" line="634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toWidth" line="634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;cx&quot;" line="634" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="634" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="635" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cy" line="635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toHeight" line="635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;cy&quot;" line="635" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="635" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="636" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="r" line="636" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toWidth" line="636" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="636" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="636" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="636" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;r&quot;" line="636" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="636" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="638" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="figure" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createCircle" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="cx" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="cy" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="r" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="a" line="638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="figure" line="639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="640" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="figure" line="640" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="646" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="646" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readEllipseElement" line="646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="646" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="647" instruction_class="throws" instruction="throws">
           <node name="IOException" line="647" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="648" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="648" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="648" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="648" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="648" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="648" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="648" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="651" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="651" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="651" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readShapeAttributes" line="652" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="652" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="652" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="654" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cx" line="654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toWidth" line="654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;cx&quot;" line="654" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="654" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="655" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cy" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toHeight" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;cy&quot;" line="655" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="655" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="656" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="rx" line="656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toWidth" line="656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;rx&quot;" line="656" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="656" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="657" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="ry" line="657" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toHeight" line="657" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="657" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="657" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="657" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;ry&quot;" line="657" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="657" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="659" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="figure" line="659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createEllipse" line="659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="cx" line="659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="cy" line="659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="rx" line="659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ry" line="659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="a" line="659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="figure" line="660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="661" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="figure" line="661" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="667" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="667" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readImageElement" line="667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="667" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="668" instruction_class="throws" instruction="throws">
           <node name="IOException" line="668" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="669" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="669" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="669" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="669" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="669" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="669" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="669" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="671" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="671" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="671" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="672" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="672" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="672" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="674" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="x" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;x&quot;" line="674" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="674" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="675" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="y" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="675" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;y&quot;" line="675" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="675" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="676" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="w" line="676" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toWidth" line="676" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="676" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="676" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="676" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;width&quot;" line="676" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="676" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="677" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="h" line="677" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toHeight" line="677" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="677" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="677" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="677" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;height&quot;" line="677" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="677" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="679" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="href" line="679" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="679" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="679" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;xlink:href&quot;" line="679" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="679" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="680" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="680" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="href" line="680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="680" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="681" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="href" line="681" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="readAttribute" line="681" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="681" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&quot;href&quot;" line="681" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="null" line="681" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="byte" line="683" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="imageData" line="683" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="683" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="684" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="684" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="href" line="684" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="684" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="685" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="href" line="685" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="startsWith" line="685" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;data:&quot;" line="685" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="int" line="686" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="semicolonPos" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="href" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="indexOf" line="686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&#039;;&#039;" line="686" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="687" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="687" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="semicolonPos" line="687" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                         <node name="-" line="687" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="1" line="687" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="688" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="==" line="688" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="href" line="688" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="indexOf" line="688" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;;base64,&quot;" line="688" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="semicolonPos" line="688" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="689" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="imageData" line="689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="Base64" line="689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="decode" line="689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="href" line="689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="substring" line="689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="+" line="689" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                             <node name="semicolonPos" line="689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="8" line="689" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="691" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="691" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="691" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="&quot;Unsupported encoding in data href in image element:&quot;" line="691" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="href" line="691" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="throw" line="694" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="IOException" line="694" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="694" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="&quot;Unsupported data href in image element:&quot;" line="694" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="href" line="694" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="URL" line="697" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="imageUrl" line="697" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="URL" line="697" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="url" line="697" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="href" line="697" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="701" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="imageUrl" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="getFile" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="endsWith" line="701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;svg&quot;" line="701" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="SVGInputFormat" line="702" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="svgImage" line="702" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="SVGInputFormat" line="702" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="factory" line="702" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="Drawing" line="703" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="svgDrawing" line="703" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="DefaultDrawing" line="703" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="svgImage" line="704" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="read" line="704" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="imageUrl" line="704" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="svgDrawing" line="704" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="true" line="704" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="CompositeFigure" line="705" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="svgImageGroup" line="705" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="factory" line="705" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="createG" line="705" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="a" line="705" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="for" line="706" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                         <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="Figure" line="706" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="f" line="706" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="svgDrawing" line="706" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getChildren" line="706" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="svgImageGroup" line="707" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="add" line="707" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="f" line="707" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="svgImageGroup" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="setBounds" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   <node name="Point2D" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="Double" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="x" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="y" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   <node name="Point2D" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="Double" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="+" line="709" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="x" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="w" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="+" line="709" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="y" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="h" line="709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="return" line="710" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                         <node name="svgImageGroup" line="710" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="ByteArrayOutputStream" line="714" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="bout" line="714" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="ByteArrayOutputStream" line="714" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                       <node name="byte" line="715" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="buf" line="715" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                         <node name="byte" line="715" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="512" line="715" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="int" line="716" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="len" line="716" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="0" line="716" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="try" line="717" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="InputStream" line="718" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="in" line="718" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="imageUrl" line="718" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="openStream" line="718" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="try" line="719" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="while" line="720" instruction_class="LOOP_STATEMENT" instruction="WHILE_STATEMENT">
                             <node name="&gt;" line="720" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                               <node name="=" line="720" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                 <node name="len" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="in" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="read" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="buf" line="720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="0" line="720" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="bout" line="721" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="write" line="721" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="buf" line="721" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="0" line="721" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                       <node name="len" line="721" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="723" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="imageData" line="723" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="bout" line="723" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="toByteArray" line="723" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                         <node name="finally" line="724" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="in" line="725" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="close" line="725" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <node name="catch" line="727" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                       <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="FileNotFoundException" line="727" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="e" line="727" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       </statement_node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="BufferedImage" line="733" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="bufferedImage" line="733" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="733" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="734" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="734" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="imageData" line="734" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="734" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="try" line="735" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="736" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="bufferedImage" line="736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="ImageIO" line="736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="read" line="736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="ByteArrayInputStream" line="736" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="imageData" line="736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <node name="catch" line="737" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                   <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="IIOException" line="737" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="e" line="737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="System" line="738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="err" line="738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="println" line="738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;SVGInputFormat warning: skipped unsupported image format.&quot;" line="738" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="e" line="739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="printStackTrace" line="739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="743" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="743" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="bufferedImage" line="743" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="743" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="744" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="imageData" line="744" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="744" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="749" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="figure" line="749" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="749" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createImage" line="749" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="x" line="749" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y" line="749" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="w" line="749" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="h" line="749" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="imageData" line="749" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="bufferedImage" line="749" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="a" line="749" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="750" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="750" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="750" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="figure" line="750" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="751" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="figure" line="751" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="757" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="757" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readLineElement" line="757" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="757" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="757" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="758" instruction_class="throws" instruction="throws">
           <node name="IOException" line="758" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="759" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="759" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="759" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="759" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="759" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="759" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="759" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="760" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="760" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="760" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="761" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="761" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="761" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="762" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="762" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="762" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readLineAttributes" line="763" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="763" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="763" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="768" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="768" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="768" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="FILL_COLOR" line="768" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="get" line="768" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="768" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="null" line="768" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="==" line="768" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_COLOR" line="768" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="get" line="768" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="768" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="null" line="768" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_COLOR" line="769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="FILL_COLOR" line="769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="a" line="769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="771" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="771" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="771" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="FILL_GRADIENT" line="771" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="get" line="771" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="771" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="null" line="771" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="==" line="771" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_GRADIENT" line="771" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="get" line="771" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="771" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <node name="null" line="771" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_GRADIENT" line="772" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="772" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="772" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="FILL_GRADIENT" line="772" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="772" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="a" line="772" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="FILL_COLOR" line="774" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="774" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="774" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="774" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="FILL_GRADIENT" line="775" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="775" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="775" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="775" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="777" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="x1" line="777" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="777" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="777" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="777" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="777" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;x1&quot;" line="777" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="777" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="778" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="y1" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;y1&quot;" line="778" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="778" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="779" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="x2" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="779" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;x2&quot;" line="779" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="779" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="780" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="y2" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;y2&quot;" line="780" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="780" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="782" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="figure" line="782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createLine" line="782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="x1" line="782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y1" line="782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="x2" line="782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y2" line="782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="a" line="782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="783" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="783" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="783" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="figure" line="783" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="784" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="figure" line="784" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="790" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="790" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readPolylineElement" line="790" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="790" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="790" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="791" instruction_class="throws" instruction="throws">
           <node name="IOException" line="791" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="792" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="792" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="792" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="792" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="792" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="792" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="792" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="793" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="793" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="793" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="794" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="794" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="794" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="795" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="795" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="795" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readLineAttributes" line="796" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="796" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="796" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="points" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toPoints" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;points&quot;" line="798" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;&quot;" line="798" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="800" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="figure" line="800" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="800" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createPolyline" line="800" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="points" line="800" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="a" line="800" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="801" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="801" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="801" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="figure" line="801" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="802" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="figure" line="802" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="808" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="808" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readPolygonElement" line="808" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="808" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="808" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="809" instruction_class="throws" instruction="throws">
           <node name="IOException" line="809" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="810" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="810" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="810" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="810" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readShapeAttributes" line="814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="points" line="816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toPoints" line="816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;points&quot;" line="816" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;&quot;" line="816" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="818" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="figure" line="818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createPolygon" line="818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="points" line="818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="a" line="818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="819" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="819" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="819" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="figure" line="819" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="820" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="figure" line="820" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="826" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="826" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readPathElement" line="826" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="826" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="826" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="827" instruction_class="throws" instruction="throws">
           <node name="IOException" line="827" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="828" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="828" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="828" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="828" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="829" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="829" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="829" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readShapeAttributes" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="BezierPath" line="834" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="beziers" line="834" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toPath" line="834" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="834" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="834" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="834" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;d&quot;" line="834" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;&quot;" line="834" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="836" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="figure" line="836" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="836" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createPath" line="836" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="beziers" line="836" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="a" line="836" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="837" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="837" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="837" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="figure" line="837" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="838" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="figure" line="838" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="844" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="844" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readTextElement" line="844" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="844" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="844" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="845" instruction_class="throws" instruction="throws">
           <node name="IOException" line="845" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="846" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="846" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="846" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="846" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="846" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="846" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="846" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="848" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="848" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="848" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="849" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="849" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="849" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readShapeAttributes" line="850" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="850" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="850" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readFontAttributes" line="851" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="851" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="851" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTextAttributes" line="852" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="852" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="852" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="String" line="854" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="xStr" line="854" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toCommaSeparatedArray" line="854" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="854" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="854" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;x&quot;" line="854" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="854" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="String" line="855" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="yStr" line="855" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toCommaSeparatedArray" line="855" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="855" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="855" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;y&quot;" line="855" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="855" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="coordinates" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Math" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="max" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="xStr" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="length" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="yStr" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="length" line="857" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="858" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="lastX" line="858" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="858" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="859" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="lastY" line="859" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="859" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="860" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="860" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="i" line="860" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="860" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="860" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="860" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="coordinates" line="860" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="860" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="860" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="861" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&gt;" line="861" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="xStr" line="861" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="length" line="861" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="i" line="861" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="try" line="862" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="863" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="lastX" line="863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="toNumber" line="863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="xStr" line="863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="i" line="863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <node name="catch" line="864" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                       <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="NumberFormatException" line="864" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ex" line="864" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       </statement_node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="867" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&gt;" line="867" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="yStr" line="867" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="length" line="867" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="i" line="867" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="try" line="868" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="869" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="lastY" line="869" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="toNumber" line="869" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="869" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                   <node name="yStr" line="869" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="i" line="869" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <node name="catch" line="870" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                       <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="NumberFormatException" line="870" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ex" line="870" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       </statement_node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="873" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="coordinates" line="873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="lastX" line="873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="lastY" line="873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="String" line="877" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="rotateStr" line="877" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toCommaSeparatedArray" line="877" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="877" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="877" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;rotate&quot;" line="877" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;&quot;" line="877" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="878" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="rotate" line="878" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="double" line="878" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="rotateStr" line="878" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="878" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="879" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="879" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="i" line="879" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="879" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="879" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="879" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="rotateStr" line="879" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="879" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="879" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="try" line="880" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="881" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="rotate" line="881" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="881" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toDouble" line="881" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="elem" line="881" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="rotateStr" line="881" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="i" line="881" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <node name="catch" line="882" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                   <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="NumberFormatException" line="882" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ex" line="882" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="883" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="rotate" line="883" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="i" line="883" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="0" line="883" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DefaultStyledDocument" line="887" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="doc" line="887" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="DefaultStyledDocument" line="887" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="889" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="890" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="890" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="890" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getContent" line="890" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="null" line="890" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="doc" line="891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="insertString" line="891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="0" line="891" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="toText" line="891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="elem" line="891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="getContent" line="891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="null" line="891" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="for" line="893" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                     <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="IXMLElement" line="893" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="node" line="893" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="elem" line="893" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getChildren" line="893" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="894" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="==" line="894" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="node" line="894" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getName" line="894" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="null" line="894" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="doc" line="895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="insertString" line="895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="0" line="895" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="toText" line="895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="elem" line="895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="node" line="895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getContent" line="895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="null" line="895" instruction_class="LITERAL" instruction="NULL_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="if" line="896" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="node" line="896" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="getName" line="896" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="equals" line="896" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;tspan&quot;" line="896" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="readTSpanElement" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                       <node name="IXMLElement" line="897" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                       </node>
                                       <node name="node" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="doc" line="897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="if" line="899" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                               <node name="DEBUG" line="899" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="System" line="900" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="out" line="900" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="println" line="900" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="+" line="900" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                           <node name="+" line="900" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                             <node name="&quot;SVGInputFormat unsupported text node &lt;&quot;" line="900" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                 <node name="node" line="900" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="getName" line="900" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               </node>
                                             </node>
                                           </node>
                                           <node name="&quot;&gt;&quot;" line="900" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
             <node name="catch" line="905" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="BadLocationException" line="905" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="e" line="905" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="InternalError" line="906" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="ex" line="906" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="InternalError" line="906" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="e" line="906" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getMessage" line="906" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="ex" line="907" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="initCause" line="907" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="e" line="907" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="throw" line="908" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                   <node name="ex" line="908" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="910" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="figure" line="910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createText" line="910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="coordinates" line="910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="rotate" line="910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="doc" line="910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="a" line="910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="figure" line="911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="912" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="figure" line="912" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="918" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="918" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readTextAreaElement" line="918" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="918" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="918" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="919" instruction_class="throws" instruction="throws">
           <node name="IOException" line="919" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="920" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="920" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="920" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="920" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="920" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="920" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="920" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="922" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="922" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="922" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="923" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="923" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="923" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readShapeAttributes" line="924" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="924" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="924" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readFontAttributes" line="925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTextAttributes" line="926" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="926" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="926" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTextFlowAttributes" line="927" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="927" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="927" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="929" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="x" line="929" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="929" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="929" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="929" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="929" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;x&quot;" line="929" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="929" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="930" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="y" line="930" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="930" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="930" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="930" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="930" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;y&quot;" line="930" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="930" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="932" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="w" line="932" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toWidth" line="932" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="932" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="932" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="932" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;width&quot;" line="932" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="932" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="933" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="h" line="933" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toHeight" line="933" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="933" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="933" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="933" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;height&quot;" line="933" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="933" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DefaultStyledDocument" line="935" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="doc" line="935" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="DefaultStyledDocument" line="935" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="937" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="938" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="938" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="938" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getContent" line="938" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="null" line="938" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="doc" line="939" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="insertString" line="939" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="0" line="939" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="toText" line="939" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="939" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="elem" line="939" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="getContent" line="939" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="null" line="939" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="for" line="941" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                     <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="IXMLElement" line="941" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="node" line="941" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="elem" line="941" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getChildren" line="941" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="942" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="==" line="942" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="node" line="942" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getName" line="942" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="null" line="942" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="doc" line="943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="insertString" line="943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="doc" line="943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="getLength" line="943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="toText" line="943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="elem" line="943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="node" line="943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getContent" line="943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="null" line="943" instruction_class="LITERAL" instruction="NULL_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="if" line="944" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="node" line="944" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="getName" line="944" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="equals" line="944" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;tbreak&quot;" line="944" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="doc" line="945" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="insertString" line="945" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="doc" line="945" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="getLength" line="945" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                     <node name="&quot;\n&quot;" line="945" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="null" line="945" instruction_class="LITERAL" instruction="NULL_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="if" line="946" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="node" line="946" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="getName" line="946" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="equals" line="946" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="&quot;tspan&quot;" line="946" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="readTSpanElement" line="947" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                         <node name="IXMLElement" line="947" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                         </node>
                                         <node name="node" line="947" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="doc" line="947" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="if" line="949" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                 <node name="DEBUG" line="949" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="System" line="950" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="out" line="950" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="println" line="950" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="+" line="950" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                             <node name="&quot;SVGInputFormat unknown  text node &quot;" line="950" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                 <node name="node" line="950" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="getName" line="950" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
             <node name="catch" line="955" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="BadLocationException" line="955" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="e" line="955" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="InternalError" line="956" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="ex" line="956" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="InternalError" line="956" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="e" line="956" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getMessage" line="956" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="ex" line="957" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="initCause" line="957" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="e" line="957" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="throw" line="958" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                   <node name="ex" line="958" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="961" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="figure" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createTextArea" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="x" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="w" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="h" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="doc" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="a" line="961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="figure" line="962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="963" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="figure" line="963" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="969" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readTSpanElement" line="969" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="969" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="969" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DefaultStyledDocument" line="969" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="doc" line="969" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="970" instruction_class="throws" instruction="throws">
           <node name="IOException" line="970" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="try" line="971" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="972" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="972" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="972" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getContent" line="972" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="null" line="972" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="doc" line="973" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="insertString" line="973" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="doc" line="973" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getLength" line="973" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="toText" line="973" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="973" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="elem" line="973" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="getContent" line="973" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="null" line="973" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="for" line="975" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                     <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="IXMLElement" line="975" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="node" line="975" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="elem" line="975" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getChildren" line="975" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="976" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="instanceof" line="976" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                           <node name="node" line="976" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="IXMLElement" line="976" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="IXMLElement" line="977" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="child" line="977" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                 <node name="IXMLElement" line="977" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                 </node>
                                 <node name="node" line="977" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="if" line="978" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="&amp;&amp;" line="978" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                               <node name="!=" line="978" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="node" line="978" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="getName" line="978" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="null" line="978" instruction_class="LITERAL" instruction="NULL_LITERAL">
                                 </node>
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="node" line="978" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="getName" line="978" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                   <node name="equals" line="978" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="&quot;tspan&quot;" line="978" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="readTSpanElement" line="979" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                         <node name="IXMLElement" line="979" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                         </node>
                                         <node name="node" line="979" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="doc" line="979" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="if" line="981" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                 <node name="DEBUG" line="981" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="System" line="982" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="out" line="982" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="println" line="982" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="+" line="982" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                             <node name="&quot;SVGInputFormat unknown text node &quot;" line="982" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                 <node name="node" line="982" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="getName" line="982" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="if" line="986" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="==" line="986" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="node" line="986" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="getName" line="986" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="null" line="986" instruction_class="LITERAL" instruction="NULL_LITERAL">
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="doc" line="987" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="insertString" line="987" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="doc" line="987" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getLength" line="987" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="toText" line="987" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="elem" line="987" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                 <node name="node" line="987" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="getContent" line="987" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <node name="null" line="987" instruction_class="LITERAL" instruction="NULL_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
             <node name="catch" line="992" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="BadLocationException" line="992" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="e" line="992" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="InternalError" line="993" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="ex" line="993" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="InternalError" line="993" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="e" line="993" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getMessage" line="993" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="ex" line="994" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="initCause" line="994" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="e" line="994" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="throw" line="995" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                   <node name="ex" line="995" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="998" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="998" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="998" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="HashSet" line="998" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="String" line="998" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="supportedFeatures" line="998" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashSet" line="998" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="String" line="998" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Arrays" line="999" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="asList" line="999" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="NEW_INITIALIZED_ARRAY" line="0" instruction_class="NEW_INITIALIZED_ARRAY" instruction="NEW_INITIALIZED_ARRAY">
                         <node name="String" line="999" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="[" line="999" instruction_class="[" instruction="[">
                         </node>
                         <node name="ARRAY_INITIALIZER" line="0" instruction_class="ARRAY_INITIALIZER" instruction="ARRAY_INITIALIZER">
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#SVG-static&quot;" line="1000" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#CoreAttribute&quot;" line="1004" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#Structure&quot;" line="1006" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#ConditionalProcessing&quot;" line="1007" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#ConditionalProcessingAttribute&quot;" line="1008" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#Image&quot;" line="1009" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#Shape&quot;" line="1012" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#Text&quot;" line="1013" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#PaintAttribute&quot;" line="1014" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#OpacityAttribute&quot;" line="1015" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#GraphicsAttribute&quot;" line="1016" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#Gradient&quot;" line="1017" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#SolidColor&quot;" line="1018" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#Hyperlinking&quot;" line="1019" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </node>
         </node>
       </statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1041" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="1041" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readSwitchElement" line="1041" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1041" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1041" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1042" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1042" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="for" line="1043" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               </node>
               <node name="IXMLElement" line="1043" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
               <node name="node" line="1043" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="1043" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getChildren" line="1043" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="1044" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="instanceof" line="1044" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                   <node name="node" line="1044" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="IXMLElement" line="1044" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="IXMLElement" line="1045" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="child" line="1045" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="IXMLElement" line="1045" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="node" line="1045" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                       <node name="String" line="1046" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="requiredFeatures" line="1046" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toWSOrCommaSeparatedArray" line="1046" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="readAttribute" line="1046" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="child" line="1046" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="&quot;requiredFeatures&quot;" line="1046" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                   <node name="&quot;&quot;" line="1046" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                       <node name="String" line="1047" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="requiredExtensions" line="1047" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toWSOrCommaSeparatedArray" line="1047" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="readAttribute" line="1047" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="child" line="1047" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="&quot;requiredExtensions&quot;" line="1047" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                   <node name="&quot;&quot;" line="1047" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                       <node name="String" line="1048" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="systemLanguage" line="1048" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toWSOrCommaSeparatedArray" line="1048" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="readAttribute" line="1048" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="child" line="1048" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="&quot;systemLanguage&quot;" line="1048" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                   <node name="&quot;&quot;" line="1048" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                       <node name="String" line="1049" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="requiredFormats" line="1049" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toWSOrCommaSeparatedArray" line="1049" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="readAttribute" line="1049" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="child" line="1049" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="&quot;requiredFormats&quot;" line="1049" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                   <node name="&quot;&quot;" line="1049" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                       <node name="String" line="1050" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="requiredFonts" line="1050" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toWSOrCommaSeparatedArray" line="1050" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="readAttribute" line="1050" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="child" line="1050" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="&quot;requiredFonts&quot;" line="1050" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                   <node name="&quot;&quot;" line="1050" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="boolean" line="1052" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="isMatch" line="1052" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="1054" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="isMatch" line="1054" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="&amp;&amp;" line="1056" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                         <node name="&amp;&amp;" line="1055" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                           <node name="&amp;&amp;" line="1054" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="supportedFeatures" line="1054" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="containsAll" line="1054" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="Arrays" line="1054" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="asList" line="1054" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="requiredFeatures" line="1054" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="==" line="1055" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="requiredExtensions" line="1055" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="length" line="1055" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="1055" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                           <node name="==" line="1056" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="requiredFormats" line="1056" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="length" line="1056" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="0" line="1056" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                         <node name="==" line="1057" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="requiredFonts" line="1057" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="length" line="1057" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="0" line="1057" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="1059" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&amp;&amp;" line="1059" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="isMatch" line="1059" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="&gt;" line="1059" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="systemLanguage" line="1059" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="length" line="1059" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="0" line="1059" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1060" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="isMatch" line="1060" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="false" line="1060" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="Locale" line="1061" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="locale" line="1061" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="LocaleUtil" line="1061" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getDefault" line="1061" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="for" line="1062" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                         <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="String" line="1062" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="lng" line="1062" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="systemLanguage" line="1062" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="int" line="1063" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="p" line="1063" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="lng" line="1063" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="indexOf" line="1063" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="&#039;-&#039;" line="1063" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="if" line="1064" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="==" line="1064" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="p" line="1064" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                                 <node name="-" line="1064" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="1" line="1064" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="if" line="1065" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="locale" line="1065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="getLanguage" line="1065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                     <node name="equals" line="1065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="lng" line="1065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="=" line="1066" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                       <node name="isMatch" line="1066" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="true" line="1066" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="break" line="1067" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="if" line="1070" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                 <node name="&amp;&amp;" line="1070" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="locale" line="1070" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getLanguage" line="1070" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="equals" line="1070" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="lng" line="1070" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="substring" line="1070" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="0" line="1070" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                               <node name="p" line="1070" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="locale" line="1071" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="getCountry" line="1071" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             </node>
                                           </node>
                                           <node name="toLowerCase" line="1071" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="equals" line="1071" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="lng" line="1071" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="substring" line="1071" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="+" line="1071" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                 <node name="p" line="1071" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="1" line="1071" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="=" line="1072" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                       <node name="isMatch" line="1072" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="true" line="1072" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="break" line="1073" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="1078" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="isMatch" line="1078" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="Figure" line="1079" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="figure" line="1079" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="readElement" line="1079" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="child" line="1079" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1080" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="&amp;&amp;" line="1080" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="readAttribute" line="1080" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="child" line="1080" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="&quot;visibility&quot;" line="1080" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="&quot;visible&quot;" line="1080" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="equals" line="1080" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;visible&quot;" line="1080" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                             <node name="!" line="1081" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="readAttribute" line="1081" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="child" line="1081" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="&quot;display&quot;" line="1081" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="&quot;inline&quot;" line="1081" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <node name="equals" line="1081" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="&quot;none&quot;" line="1081" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="return" line="1082" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                             <node name="figure" line="1082" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="return" line="1084" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                             <node name="null" line="1084" instruction_class="LITERAL" instruction="NULL_LITERAL">
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="1089" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="null" line="1089" instruction_class="LITERAL" instruction="NULL_LITERAL">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="SINGLE_ELEMENT_ANNOTATION" line="0" instruction_class="SINGLE_ELEMENT_ANNOTATION" instruction="SINGLE_ELEMENT_ANNOTATION">
             <node name="SuppressWarnings" line="1095" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="&quot;unchecked&quot;" line="1095" instruction_class="LITERAL" instruction="STRING_LITERAL">
             </node>
           </node>
           <node name="private" line="1096" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="1096" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readUseElement" line="1096" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1096" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1096" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1097" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1097" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="1098" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="1098" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="1098" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="1098" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="1098" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="1098" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="1098" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="1099" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="1099" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="1099" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="1100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="1100" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="1100" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a2" line="1100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="1100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="1100" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="1100" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readTransformAttribute" line="1101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="1101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="1101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readOpacityAttribute" line="1102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="1102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a2" line="1102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readUseShapeAttributes" line="1103" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="1103" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a2" line="1103" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readFontAttributes" line="1104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="1104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a2" line="1104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1106" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="href" line="1106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="1106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="1106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;xlink:href&quot;" line="1106" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="1106" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1107" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="1107" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="1107" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="href" line="1107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="1107" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="href" line="1107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="startsWith" line="1107" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;#&quot;" line="1107" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="IXMLElement" line="1108" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="refElem" line="1108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="identifiedElements" line="1108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="1108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="href" line="1108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="substring" line="1108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="1" line="1108" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="1109" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="1109" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="refElem" line="1109" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="1109" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="1110" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="DEBUG" line="1110" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="System" line="1111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="out" line="1111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="println" line="1111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="1111" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="&quot;SVGInputFormat couldn&#039;t find href for &lt;use&gt; element:&quot;" line="1111" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="href" line="1111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="Object" line="1114" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="obj" line="1114" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readElement" line="1114" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="refElem" line="1114" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="1115" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="instanceof" line="1115" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                       <node name="obj" line="1115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Figure" line="1115" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="Figure" line="1116" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="figure" line="1116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                             <node name="Figure" line="1116" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                   <node name="Figure" line="1116" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   </node>
                                   <node name="obj" line="1116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="clone" line="1116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="for" line="1117" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                         <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="Map" line="1117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="Entry" line="1117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                               <node name="AttributeKey" line="1117" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="Object" line="1117" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                             </node>
                           </node>
                           <node name="entry" line="1117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="a2" line="1117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="entrySet" line="1117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="figure" line="1118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="set" line="1118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="entry" line="1118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="getKey" line="1118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="entry" line="1118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="getValue" line="1118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="AffineTransform" line="1121" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="tx" line="1121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="?" line="1122" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                             <node name="==" line="1122" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="TRANSFORM" line="1122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="get" line="1122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="a" line="1122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="null" line="1122" instruction_class="LITERAL" instruction="NULL_LITERAL">
                               </node>
                             </node>
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="AffineTransform" line="1122" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="TRANSFORM" line="1122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="get" line="1122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="a" line="1122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="double" line="1123" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="x" line="1123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="toNumber" line="1123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="1123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="readAttribute" line="1123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="elem" line="1123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="&quot;x&quot;" line="1123" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="&quot;0&quot;" line="1123" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="double" line="1124" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="y" line="1124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="toNumber" line="1124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="1124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="readAttribute" line="1124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="elem" line="1124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="&quot;y&quot;" line="1124" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="&quot;0&quot;" line="1124" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tx" line="1125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="translate" line="1125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="x" line="1125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="figure" line="1126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="transform" line="1126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="tx" line="1126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="return" line="1128" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                         <node name="figure" line="1128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="1132" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="null" line="1132" instruction_class="LITERAL" instruction="NULL_LITERAL">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1138" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="1138" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readInheritAttribute" line="1138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1138" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1138" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="attributeName" line="1138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1138" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="defaultValue" line="1138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="1139" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elem" line="1139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="hasAttribute" line="1139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="attributeName" line="1139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="SVG_NAMESPACE" line="1139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="String" line="1140" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="value" line="1140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="1140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getAttribute" line="1140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="attributeName" line="1140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="SVG_NAMESPACE" line="1140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="null" line="1140" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="1141" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="value" line="1141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="equals" line="1141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;inherit&quot;" line="1141" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="1142" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritAttribute" line="1142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="elem" line="1142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getParent" line="1142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="attributeName" line="1142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="defaultValue" line="1142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="1144" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="value" line="1144" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="1146" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="1146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="hasAttribute" line="1146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="attributeName" line="1146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="String" line="1147" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="value" line="1147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="elem" line="1147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getAttribute" line="1147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="attributeName" line="1147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="if" line="1148" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="value" line="1148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="equals" line="1148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;inherit&quot;" line="1148" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="1149" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readInheritAttribute" line="1149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="elem" line="1149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getParent" line="1149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="attributeName" line="1149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="defaultValue" line="1149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="1151" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="value" line="1151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="1153" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="1153" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="!=" line="1153" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="elem" line="1153" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getParent" line="1153" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="null" line="1153" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                   <node name="||" line="1154" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="==" line="1154" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="elem" line="1154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getParent" line="1154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="getNamespace" line="1154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="null" line="1154" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="elem" line="1155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getParent" line="1155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="getNamespace" line="1155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="equals" line="1155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="SVG_NAMESPACE" line="1155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="1156" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritAttribute" line="1156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="elem" line="1156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getParent" line="1156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="attributeName" line="1156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="defaultValue" line="1156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="1158" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="defaultValue" line="1158" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1167" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="1167" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readInheritColorAttribute" line="1167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1167" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1167" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="attributeName" line="1167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1167" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="defaultValue" line="1167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1168" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="1168" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="1168" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1169" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elem" line="1169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="hasAttribute" line="1169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="attributeName" line="1169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="SVG_NAMESPACE" line="1169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1170" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="value" line="1170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="1170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getAttribute" line="1170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="attributeName" line="1170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="SVG_NAMESPACE" line="1170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="null" line="1170" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="1171" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="value" line="1171" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="equals" line="1171" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;inherit&quot;" line="1171" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="1172" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritColorAttribute" line="1172" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="elem" line="1172" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getParent" line="1172" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="attributeName" line="1172" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="defaultValue" line="1172" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="1174" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="1174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="hasAttribute" line="1174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="attributeName" line="1174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="1175" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="value" line="1175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="elem" line="1175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getAttribute" line="1175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="attributeName" line="1175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="if" line="1176" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="value" line="1176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="equals" line="1176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;inherit&quot;" line="1176" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="1177" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readInheritColorAttribute" line="1177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="elem" line="1177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getParent" line="1177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="attributeName" line="1177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="defaultValue" line="1177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="1179" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="1179" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="!=" line="1179" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="elem" line="1179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getParent" line="1179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="null" line="1179" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                   <node name="||" line="1180" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="==" line="1180" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="elem" line="1180" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getParent" line="1180" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="getNamespace" line="1180" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="null" line="1180" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="elem" line="1181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getParent" line="1181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="getNamespace" line="1181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="equals" line="1181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="SVG_NAMESPACE" line="1181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="1182" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="value" line="1182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readInheritColorAttribute" line="1182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="elem" line="1182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getParent" line="1182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="attributeName" line="1182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="defaultValue" line="1182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="1184" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="value" line="1184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="defaultValue" line="1184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="1186" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="1186" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="&amp;&amp;" line="1186" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                 <node name="!=" line="1186" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="value" line="1186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="1186" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="value" line="1186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="toLowerCase" line="1186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="equals" line="1186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;currentcolor&quot;" line="1186" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                 <node name="!" line="1186" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="attributeName" line="1186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="equals" line="1186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;color&quot;" line="1186" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1188" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="value" line="1188" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="readInheritColorAttribute" line="1188" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="1188" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&quot;color&quot;" line="1188" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="&quot;defaultValue&quot;" line="1188" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="1190" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="value" line="1190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1199" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="1199" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="readInheritFontSizeAttribute" line="1199" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1199" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1199" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1199" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="attributeName" line="1199" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1199" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="defaultValue" line="1199" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1200" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1200" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1201" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="1201" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="1201" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1202" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elem" line="1202" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="hasAttribute" line="1202" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="attributeName" line="1202" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="SVG_NAMESPACE" line="1202" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1203" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="value" line="1203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="1203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getAttribute" line="1203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="attributeName" line="1203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="SVG_NAMESPACE" line="1203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="null" line="1203" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="1204" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="1204" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="hasAttribute" line="1204" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="attributeName" line="1204" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="1205" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="value" line="1205" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="elem" line="1205" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getAttribute" line="1205" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="attributeName" line="1205" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="1205" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="1206" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="1206" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="!=" line="1206" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="elem" line="1206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getParent" line="1206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="null" line="1206" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                   <node name="||" line="1207" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="==" line="1207" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="elem" line="1207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getParent" line="1207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="getNamespace" line="1207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="null" line="1207" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="elem" line="1208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getParent" line="1208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="getNamespace" line="1208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="equals" line="1208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="SVG_NAMESPACE" line="1208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="1209" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritFontSizeAttribute" line="1209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="elem" line="1209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getParent" line="1209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="attributeName" line="1209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="defaultValue" line="1209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="1211" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="value" line="1211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="defaultValue" line="1211" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="1214" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="value" line="1214" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="equals" line="1214" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;inherit&quot;" line="1214" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="1215" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="readInheritFontSizeAttribute" line="1215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="elem" line="1215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getParent" line="1215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="attributeName" line="1215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="defaultValue" line="1215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="1216" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="SVG_ABSOLUTE_FONT_SIZES" line="1216" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="containsKey" line="1216" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="value" line="1216" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="return" line="1217" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SVG_ABSOLUTE_FONT_SIZES" line="1217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="1217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="1217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="1218" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SVG_RELATIVE_FONT_SIZES" line="1218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="containsKey" line="1218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="value" line="1218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="1219" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="*" line="1219" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="SVG_RELATIVE_FONT_SIZES" line="1219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="1219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="value" line="1219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readInheritFontSizeAttribute" line="1219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="elem" line="1219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getParent" line="1219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="attributeName" line="1219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="defaultValue" line="1219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="if" line="1220" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="value" line="1220" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="endsWith" line="1220" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;%&quot;" line="1220" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="double" line="1221" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="factor" line="1221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="Double" line="1221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="valueOf" line="1221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="value" line="1221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="substring" line="1221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="0" line="1221" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                     <node name="-" line="1221" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="value" line="1221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="length" line="1221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="1" line="1221" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="return" line="1222" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="*" line="1222" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="factor" line="1222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="readInheritFontSizeAttribute" line="1222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="elem" line="1222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="getParent" line="1222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="attributeName" line="1222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="defaultValue" line="1222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="1225" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toNumber" line="1225" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="elem" line="1225" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="value" line="1225" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1233" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="1233" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="readAttribute" line="1233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1233" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1233" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="attributeName" line="1233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1233" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="defaultValue" line="1233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="1234" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elem" line="1234" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="hasAttribute" line="1234" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="attributeName" line="1234" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="SVG_NAMESPACE" line="1234" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="String" line="1235" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="value" line="1235" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="1235" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getAttribute" line="1235" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="attributeName" line="1235" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="SVG_NAMESPACE" line="1235" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="null" line="1235" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="1236" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="value" line="1236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="equals" line="1236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;inherit&quot;" line="1236" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="1237" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="1237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="elem" line="1237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="getParent" line="1237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="attributeName" line="1237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="defaultValue" line="1237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="1239" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="value" line="1239" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="1241" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="1241" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="hasAttribute" line="1241" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="attributeName" line="1241" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="String" line="1242" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="value" line="1242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="elem" line="1242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getAttribute" line="1242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="attributeName" line="1242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="1242" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="if" line="1243" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="value" line="1243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="equals" line="1243" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;inherit&quot;" line="1243" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="1244" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="readAttribute" line="1244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="elem" line="1244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getParent" line="1244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="attributeName" line="1244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="defaultValue" line="1244" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="1246" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="value" line="1246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="return" line="1249" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                   <node name="defaultValue" line="1249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1257" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="1257" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="toWidth" line="1257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1257" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1257" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="str" line="1257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1257" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="1259" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="toLength" line="1259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="1259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="str" line="1259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewportStack" line="1260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="peek" line="1260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="widthPercentFactor" line="1260" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1267" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="1267" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="toHeight" line="1267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1267" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1267" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="str" line="1267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1267" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="1269" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="toLength" line="1269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="1269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="str" line="1269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewportStack" line="1270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="peek" line="1270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="heightPercentFactor" line="1270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1277" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="1277" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="toNumber" line="1277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1277" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1277" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="str" line="1277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1277" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="1278" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="toLength" line="1278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="1278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="str" line="1278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="viewportStack" line="1278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="peek" line="1278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="numberFactor" line="1278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1285" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="1285" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="toLength" line="1285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1285" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1285" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="str" line="1285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="1285" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="percentFactor" line="1285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1285" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="1286" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="scaleFactor" line="1286" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="1d" line="1286" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1287" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="||" line="1287" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="||" line="1287" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                 <node name="==" line="1287" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="str" line="1287" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="1287" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <node name="==" line="1287" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="str" line="1287" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="1287" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="0" line="1287" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="str" line="1287" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="equals" line="1287" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;none&quot;" line="1287" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="1288" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="0d" line="1288" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="1291" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="str" line="1291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="endsWith" line="1291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;%&quot;" line="1291" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1292" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="str" line="1292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="str" line="1292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="substring" line="1292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="0" line="1292" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="-" line="1292" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="str" line="1292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="length" line="1292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="1" line="1292" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1293" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="scaleFactor" line="1293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="percentFactor" line="1293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="1294" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="str" line="1294" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="endsWith" line="1294" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;px&quot;" line="1294" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="=" line="1295" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="str" line="1295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="str" line="1295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="substring" line="1295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="0" line="1295" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                           <node name="-" line="1295" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="str" line="1295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="length" line="1295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="2" line="1295" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="1296" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="str" line="1296" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="endsWith" line="1296" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;pt&quot;" line="1296" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="1297" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="str" line="1297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="str" line="1297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="substring" line="1297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="0" line="1297" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                             <node name="-" line="1297" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="str" line="1297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="length" line="1297" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="2" line="1297" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="1298" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="scaleFactor" line="1298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="1.25" line="1298" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="if" line="1299" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="str" line="1299" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="endsWith" line="1299" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;pc&quot;" line="1299" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1300" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="str" line="1300" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="str" line="1300" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="substring" line="1300" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="0" line="1300" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                               <node name="-" line="1300" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="str" line="1300" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="length" line="1300" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="2" line="1300" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1301" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="scaleFactor" line="1301" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="15" line="1301" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="1302" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="str" line="1302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="endsWith" line="1302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;mm&quot;" line="1302" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1303" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="str" line="1303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="str" line="1303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="substring" line="1303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="0" line="1303" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                                 <node name="-" line="1303" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="str" line="1303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="length" line="1303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                   <node name="2" line="1303" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1304" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="scaleFactor" line="1304" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="3.543307" line="1304" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="if" line="1305" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="str" line="1305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="endsWith" line="1305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;cm&quot;" line="1305" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="=" line="1306" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                             <node name="str" line="1306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="str" line="1306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="substring" line="1306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="0" line="1306" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                   <node name="-" line="1306" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="str" line="1306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="length" line="1306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                     <node name="2" line="1306" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="=" line="1307" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                             <node name="scaleFactor" line="1307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="35.43307" line="1307" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="if" line="1308" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="str" line="1308" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="endsWith" line="1308" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="&quot;in&quot;" line="1308" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="1309" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="str" line="1309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="str" line="1309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="substring" line="1309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="0" line="1309" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                     <node name="-" line="1309" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="str" line="1309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="length" line="1309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="2" line="1309" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="1310" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="scaleFactor" line="1310" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="90" line="1310" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="if" line="1311" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="str" line="1311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="endsWith" line="1311" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;em&quot;" line="1311" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="=" line="1312" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                 <node name="str" line="1312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="str" line="1312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="substring" line="1312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="0" line="1312" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                       <node name="-" line="1312" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="str" line="1312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="length" line="1312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                         <node name="2" line="1312" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="=" line="1314" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                 <node name="scaleFactor" line="1314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="toLength" line="1314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="elem" line="1314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="readAttribute" line="1314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="elem" line="1314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="&quot;font-size&quot;" line="1314" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                             <node name="&quot;0&quot;" line="1314" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <node name="percentFactor" line="1314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="=" line="1316" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                 <node name="scaleFactor" line="1316" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="1d" line="1316" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="1319" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="*" line="1319" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="Double" line="1319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="parseDouble" line="1319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="str" line="1319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="scaleFactor" line="1319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="1326" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="1326" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="String" line="1326" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           </node>
         </node>
         <node name="toCommaSeparatedArray" line="1326" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1326" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="str" line="1326" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1326" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1326" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="1327" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="str" line="1327" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="split" line="1327" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;\\s*,\\s*&quot;" line="1327" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="1335" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="1335" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="String" line="1335" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           </node>
         </node>
         <node name="toWSOrCommaSeparatedArray" line="1335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1335" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="str" line="1335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1335" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="String" line="1336" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="result" line="1336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="str" line="1336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="split" line="1336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;(\\s*,\\s*|\\s+)&quot;" line="1336" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1337" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="1337" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="1337" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="result" line="1337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="1337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="1" line="1337" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="result" line="1337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="1337" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="equals" line="1337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;&quot;" line="1337" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="1338" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                   <node name="String" line="1338" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="0" line="1338" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="1340" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="result" line="1340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="1348" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="1348" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="String" line="1348" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           </node>
         </node>
         <node name="toQuotedAndCommaSeparatedArray" line="1348" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1348" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="str" line="1348" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1348" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1348" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="LinkedList" line="1349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="String" line="1349" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="values" line="1349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="LinkedList" line="1349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="String" line="1349" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="StreamTokenizer" line="1350" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tt" line="1350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="StreamTokenizer" line="1350" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="StringReader" line="1350" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="str" line="1350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="tt" line="1351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="wordChars" line="1351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&#039;a&#039;" line="1351" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                   </node>
                   <node name="&#039;z&#039;" line="1351" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="tt" line="1352" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="wordChars" line="1352" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&#039;A&#039;" line="1352" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                   </node>
                   <node name="&#039;Z&#039;" line="1352" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="tt" line="1353" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="wordChars" line="1353" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="+" line="1353" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="128" line="1353" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="32" line="1353" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="255" line="1353" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="tt" line="1354" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="whitespaceChars" line="1354" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="0" line="1354" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="&#039; &#039;" line="1354" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="tt" line="1355" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="quoteChar" line="1355" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&#039;&quot;&#039;" line="1355" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="tt" line="1356" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="quoteChar" line="1356" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&#039;\&#039;&#039;" line="1356" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="while" line="1358" instruction_class="LOOP_STATEMENT" instruction="WHILE_STATEMENT">
             <node name="!=" line="1358" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="tt" line="1358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="nextToken" line="1358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="StreamTokenizer" line="1358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="TT_EOF" line="1358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="switch" line="1359" instruction_class="CONDITIONAL_STATEMENT" instruction="SWITCH_STATEMENT">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="tt" line="1359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ttype" line="1359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                   <node name="case" line="1360" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="StreamTokenizer" line="1360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="TT_WORD" line="1360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="case" line="1361" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                     <node name="&#039;&quot;&#039;" line="1361" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                     </node>
                   </node>
                   <node name="case" line="1362" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                     <node name="&#039;\&#039;&#039;" line="1362" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                     </node>
                   </node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="values" line="1363" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="add" line="1363" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1363" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="sval" line="1363" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="break" line="1364" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                   </statement_node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="1367" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="values" line="1367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="toArray" line="1367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="String" line="1367" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="values" line="1367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="size" line="1367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1374" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             <node name="Point2D" line="1374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="Double" line="1374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="toPoints" line="1374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1374" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1374" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="str" line="1374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1374" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="StringTokenizer" line="1376" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tt" line="1376" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="StringTokenizer" line="1376" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="str" line="1376" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot; ,&quot;" line="1376" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 <node name="Point2D" line="1377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Double" line="1377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="points" line="1377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="1377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="1377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="/" line="1377" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="tt" line="1377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="countTokens" line="1377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="2" line="1377" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="1378" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="1378" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="i" line="1378" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="1378" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="1378" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="1378" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="points" line="1378" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="1378" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="1378" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1380" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="points" line="1380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="1380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="1380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="1380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="toNumber" line="1381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="elem" line="1381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="1381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nextToken" line="1381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="toNumber" line="1382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="elem" line="1382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="1382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nextToken" line="1382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="1384" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="points" line="1384" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1394" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="BezierPath" line="1394" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           </node>
         </node>
         <node name="toPath" line="1394" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1394" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1394" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1394" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="str" line="1394" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1394" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1394" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="LinkedList" line="1395" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="BezierPath" line="1395" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="paths" line="1395" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="LinkedList" line="1395" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="BezierPath" line="1395" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="BezierPath" line="1397" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="path" line="1397" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="1397" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="1398" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="1398" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="p" line="1398" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="1398" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="1398" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="1399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="1399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="c1" line="1399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="1399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="1399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="1400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="1400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="c2" line="1400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="1400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="1400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="StreamPosTokenizer" line="1402" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tt" line="1402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1403" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="1403" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="toPathTokenizer" line="1403" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="1403" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1404" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="tt" line="1404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="StreamPosTokenizer" line="1404" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="StringReader" line="1404" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="str" line="1404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="1405" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="resetSyntax" line="1405" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="1406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="parseNumbers" line="1406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="1407" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="parseExponents" line="1407" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="1408" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="parsePlusAsNumber" line="1408" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="1409" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="whitespaceChars" line="1409" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="0" line="1409" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                       <node name="&#039; &#039;" line="1409" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="1410" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="whitespaceChars" line="1410" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&#039;,&#039;" line="1410" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                       <node name="&#039;,&#039;" line="1410" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1411" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="toPathTokenizer" line="1411" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="tt" line="1411" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="1413" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="tt" line="1413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="toPathTokenizer" line="1413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="1414" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="setReader" line="1414" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="StringReader" line="1414" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="str" line="1414" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="char" line="1418" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="nextCommand" line="1418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="&#039;M&#039;" line="1418" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="char" line="1419" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="command" line="1419" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="&#039;M&#039;" line="1419" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name=":" line="1420" instruction_class=":" instruction=":">
             <node name="Commands" line="1420" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="while" line="1421" instruction_class="LOOP_STATEMENT" instruction="WHILE_STATEMENT">
               <node name="!=" line="1421" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="1421" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="nextToken" line="1421" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="StreamPosTokenizer" line="1421" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TT_EOF" line="1421" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="if" line="1422" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="&gt;" line="1422" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="tt" line="1422" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ttype" line="1422" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="0" line="1422" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1423" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="command" line="1423" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="char" line="1423" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1423" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ttype" line="1423" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1425" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="command" line="1425" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="nextCommand" line="1425" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="pushBack" line="1426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     <node name="BezierPath" line="1429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="Node" line="1429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="node" line="1429" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="switch" line="1431" instruction_class="CONDITIONAL_STATEMENT" instruction="SWITCH_STATEMENT">
                   <node name="command" line="1431" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1432" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;M&#039;" line="1432" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1434" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1434" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="path" line="1434" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="null" line="1434" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="paths" line="1435" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="add" line="1435" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="path" line="1435" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1437" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="path" line="1437" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="BezierPath" line="1437" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1439" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1439" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1440" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1440" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1440" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1440" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1440" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x coordinate missing for &#039;M&#039; at position &quot;" line="1440" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1440" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1442" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1443" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1443" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1443" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1443" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1443" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1443" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1444" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1444" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1444" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1444" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1444" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y coordinate missing for &#039;M&#039; at position &quot;" line="1444" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1444" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1446" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1446" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1446" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1446" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1446" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="moveTo" line="1447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1448" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1448" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;L&#039;" line="1448" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1449" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1450" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;m&#039;" line="1450" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1452" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1452" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="path" line="1452" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="null" line="1452" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="paths" line="1453" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="add" line="1453" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="path" line="1453" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1455" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="path" line="1455" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="BezierPath" line="1455" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1457" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1457" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1457" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1457" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1457" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1457" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1458" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1458" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1458" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1458" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1458" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx coordinate missing for &#039;m&#039; at position &quot;" line="1458" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1458" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1458" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1458" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1458" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1460" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1460" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1460" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1460" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1460" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1461" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1461" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1461" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1461" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1461" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1461" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1462" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1462" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1462" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1462" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1462" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy coordinate missing for &#039;m&#039; at position &quot;" line="1462" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1462" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1464" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="moveTo" line="1465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1465" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1466" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;l&#039;" line="1466" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1468" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1469" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;Z&#039;" line="1469" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <node name="case" line="1470" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;z&#039;" line="1470" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1472" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="path" line="1472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="get" line="1472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="0" line="1472" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="x" line="1472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="0" line="1472" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1473" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="path" line="1473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="get" line="1473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="0" line="1473" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="y" line="1473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="0" line="1473" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1477" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="&gt;" line="1477" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="path" line="1477" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="size" line="1477" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="1" line="1477" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             <node name="BezierPath" line="1478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="Node" line="1478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                             <node name="first" line="1478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="path" line="1478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="get" line="1478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="0" line="1478" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                         <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             <node name="BezierPath" line="1479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="Node" line="1479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                             <node name="last" line="1479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="path" line="1479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="get" line="1479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="-" line="1479" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="path" line="1479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="size" line="1479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                     <node name="1" line="1479" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                         <statement_node name="if" line="1480" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                           <node name="&amp;&amp;" line="1480" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                             <node name="==" line="1480" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="first" line="1480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="x" line="1480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="0" line="1480" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="last" line="1480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="x" line="1480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="0" line="1480" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                             <node name="==" line="1481" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="first" line="1481" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="y" line="1481" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="0" line="1481" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="last" line="1481" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="y" line="1481" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="0" line="1481" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="if" line="1482" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                               <node name="!=" line="1482" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                 <node name="&amp;" line="1482" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="last" line="1482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="mask" line="1482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="BezierPath" line="1482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="C1_MASK" line="1482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                                 <node name="0" line="1482" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="|=" line="1483" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="first" line="1483" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="mask" line="1483" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="BezierPath" line="1483" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="C1_MASK" line="1483" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="=" line="1484" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="first" line="1484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="x" line="1484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="1" line="1484" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="last" line="1484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="x" line="1484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="1" line="1484" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="=" line="1485" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="first" line="1485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="y" line="1485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="1" line="1485" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                     <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="last" line="1485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="y" line="1485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="1" line="1485" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="path" line="1487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="remove" line="1487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="-" line="1487" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="path" line="1487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="size" line="1487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="1" line="1487" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1490" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="setClosed" line="1490" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="true" line="1490" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1492" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1493" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;L&#039;" line="1493" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1495" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1495" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1495" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1495" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1495" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1495" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1496" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1496" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1496" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1496" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1496" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x coordinate missing for &#039;L&#039; at position &quot;" line="1496" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1496" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1496" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1496" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1496" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1498" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1499" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1499" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1500" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1500" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1500" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1500" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1500" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y coordinate missing for &#039;L&#039; at position &quot;" line="1500" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1500" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1502" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1502" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1502" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1502" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1502" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="lineTo" line="1503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1504" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;L&#039;" line="1504" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1506" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1507" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;l&#039;" line="1507" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1509" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1509" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1509" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1509" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1509" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1509" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1510" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1510" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1510" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1510" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1510" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx coordinate missing for &#039;l&#039; at position &quot;" line="1510" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1510" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1510" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1512" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1513" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1513" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1514" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1514" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1514" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1514" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1514" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy coordinate missing for &#039;l&#039; at position &quot;" line="1514" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1514" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1514" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1516" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="lineTo" line="1517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1517" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1518" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1518" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;l&#039;" line="1518" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1520" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1521" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;H&#039;" line="1521" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1523" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1523" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1523" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1523" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1523" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1523" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1524" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1524" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1524" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1524" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1524" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x coordinate missing for &#039;H&#039; at position &quot;" line="1524" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1524" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1524" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1524" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1524" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1526" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1526" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1526" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1526" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1526" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1527" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="lineTo" line="1527" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1527" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1527" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1527" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1527" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1528" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1528" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;H&#039;" line="1528" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1530" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1531" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;h&#039;" line="1531" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1533" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1533" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1534" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1534" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1534" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1534" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1534" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx coordinate missing for &#039;h&#039; at position &quot;" line="1534" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1534" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1534" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1534" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1534" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1536" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1536" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1536" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1536" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1536" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="lineTo" line="1537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1538" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;h&#039;" line="1538" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1540" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1541" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;V&#039;" line="1541" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1543" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1543" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1544" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1544" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1544" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1544" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1544" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y coordinate missing for &#039;V&#039; at position &quot;" line="1544" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1544" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1544" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1544" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1544" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1546" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1546" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1546" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1546" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1546" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="lineTo" line="1547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1547" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1548" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1548" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;V&#039;" line="1548" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1550" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1551" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;v&#039;" line="1551" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1553" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1553" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1554" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1554" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1554" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1554" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1554" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy coordinate missing for &#039;v&#039; at position &quot;" line="1554" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1554" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1556" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="lineTo" line="1557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1558" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;v&#039;" line="1558" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1560" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1561" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;C&#039;" line="1561" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1563" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1563" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1564" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1564" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1564" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1564" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1564" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x1 coordinate missing for &#039;C&#039; at position &quot;" line="1564" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1564" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1564" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1564" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1564" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1566" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1567" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1567" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1568" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1568" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1568" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1568" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1568" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y1 coordinate missing for &#039;C&#039; at position &quot;" line="1568" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1568" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1568" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1568" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1568" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1570" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1570" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1570" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1570" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1570" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1571" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1571" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1572" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1572" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1572" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1572" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1572" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x2 coordinate missing for &#039;C&#039; at position &quot;" line="1572" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1572" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1574" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c2" line="1574" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1574" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1574" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1574" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1575" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1575" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1575" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1575" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1575" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1575" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1576" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1576" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1576" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1576" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1576" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y2 coordinate missing for &#039;C&#039; at position &quot;" line="1576" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1576" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1576" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1576" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1576" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1578" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c2" line="1578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1579" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1579" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1579" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1579" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1579" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1579" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1580" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1580" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1580" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1580" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1580" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x coordinate missing for &#039;C&#039; at position &quot;" line="1580" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1580" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1582" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1582" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1582" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1582" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1582" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1583" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1583" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1583" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1583" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1583" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1583" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1584" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1584" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1584" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1584" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1584" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y coordinate missing for &#039;C&#039; at position &quot;" line="1584" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1584" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1586" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1586" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1586" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1586" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1586" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="curveTo" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c2" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c2" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1587" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1588" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1588" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;C&#039;" line="1588" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1589" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1591" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;c&#039;" line="1591" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1593" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1593" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1593" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1593" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1593" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1593" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1594" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1594" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1594" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1594" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1594" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx1 coordinate missing for &#039;c&#039; at position &quot;" line="1594" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1594" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1594" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1594" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1594" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1596" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="+" line="1596" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="x" line="1596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1597" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1597" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1598" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1598" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1598" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1598" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1598" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy1 coordinate missing for &#039;c&#039; at position &quot;" line="1598" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1598" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1598" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1600" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1600" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1600" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="+" line="1600" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1600" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="y" line="1600" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1600" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1600" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1601" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1601" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1601" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1601" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1601" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1601" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1602" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1602" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1602" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1602" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1602" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx2 coordinate missing for &#039;c&#039; at position &quot;" line="1602" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1602" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1602" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1602" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1602" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1604" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c2" line="1604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="+" line="1604" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="x" line="1604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1604" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1605" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1605" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1605" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1605" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1605" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1605" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1606" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1606" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1606" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1606" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1606" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy2 coordinate missing for &#039;c&#039; at position &quot;" line="1606" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1606" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1606" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1606" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1606" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1608" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c2" line="1608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="+" line="1608" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="y" line="1608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1609" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1609" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1610" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1610" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1610" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1610" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1610" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx coordinate missing for &#039;c&#039; at position &quot;" line="1610" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1610" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1612" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1612" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1613" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1613" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1613" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1613" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1613" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1613" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1614" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1614" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1614" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1614" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1614" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy coordinate missing for &#039;c&#039; at position &quot;" line="1614" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1614" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1614" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1614" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1614" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1616" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1616" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="curveTo" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c2" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c2" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1617" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1618" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1618" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;c&#039;" line="1618" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1619" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1621" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;S&#039;" line="1621" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1623" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="node" line="1623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="path" line="1623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="get" line="1623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="-" line="1623" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="path" line="1623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="size" line="1623" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="1" line="1623" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1624" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="-" line="1624" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="*" line="1624" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="node" line="1624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="x" line="1624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="1624" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <node name="2d" line="1624" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="node" line="1624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1624" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1" line="1624" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1625" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1625" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1625" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="-" line="1625" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="*" line="1625" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="node" line="1625" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="y" line="1625" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="1625" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <node name="2d" line="1625" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="node" line="1625" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1625" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1" line="1625" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1626" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1626" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1626" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1626" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1626" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1626" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1627" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1627" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1627" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1627" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1627" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x2 coordinate missing for &#039;S&#039; at position &quot;" line="1627" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1627" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1627" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1627" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1627" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1629" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c2" line="1629" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1629" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1629" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1629" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1630" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1630" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1630" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1630" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1630" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1630" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1631" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1631" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1631" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1631" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1631" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y2 coordinate missing for &#039;S&#039; at position &quot;" line="1631" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1631" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1631" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1631" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1631" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1633" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c2" line="1633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1634" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1634" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1635" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1635" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1635" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1635" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1635" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x coordinate missing for &#039;S&#039; at position &quot;" line="1635" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1635" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1635" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1637" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1637" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1637" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1637" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1637" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1638" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1638" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1638" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1639" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1639" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1639" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1639" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1639" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y coordinate missing for &#039;S&#039; at position &quot;" line="1639" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1639" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1641" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1641" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1641" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1641" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1641" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="curveTo" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c2" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c2" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1643" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1643" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;S&#039;" line="1643" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1644" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1646" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;s&#039;" line="1646" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1648" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="node" line="1648" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="path" line="1648" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="get" line="1648" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="-" line="1648" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="path" line="1648" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="size" line="1648" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="1" line="1648" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1649" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="-" line="1649" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="*" line="1649" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="node" line="1649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="x" line="1649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="1649" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <node name="2d" line="1649" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="node" line="1649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1" line="1649" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1650" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="-" line="1650" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="*" line="1650" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="node" line="1650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="y" line="1650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="1650" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <node name="2d" line="1650" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="node" line="1650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1" line="1650" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1651" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1651" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1651" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1651" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1651" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1651" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1652" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1652" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1652" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1652" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1652" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx2 coordinate missing for &#039;s&#039; at position &quot;" line="1652" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1652" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1652" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1652" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1652" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1654" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c2" line="1654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="+" line="1654" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="x" line="1654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1655" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1655" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1656" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1656" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1656" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1656" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1656" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy2 coordinate missing for &#039;s&#039; at position &quot;" line="1656" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1656" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1658" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c2" line="1658" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1658" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="+" line="1658" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1658" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="y" line="1658" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1658" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1658" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1659" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1659" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1659" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1660" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1660" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1660" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1660" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1660" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx coordinate missing for &#039;s&#039; at position &quot;" line="1660" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1660" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1660" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1662" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1662" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1662" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1662" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1662" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1663" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1663" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1663" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1663" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1663" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1663" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1664" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1664" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1664" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1664" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1664" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy coordinate missing for &#039;s&#039; at position &quot;" line="1664" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1664" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1664" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1666" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1666" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1666" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1666" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1666" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="curveTo" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c2" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c2" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1667" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1668" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1668" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;s&#039;" line="1668" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1669" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1671" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;Q&#039;" line="1671" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1673" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1673" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1673" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1673" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1673" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1673" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1674" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1674" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1674" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1674" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1674" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x1 coordinate missing for &#039;Q&#039; at position &quot;" line="1674" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1674" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1674" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1676" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1676" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1676" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1676" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1676" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1677" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1677" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1677" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1677" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1677" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1677" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1678" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1678" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1678" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1678" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1678" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y1 coordinate missing for &#039;Q&#039; at position &quot;" line="1678" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1678" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1678" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1678" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1678" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1680" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1680" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1681" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1681" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1681" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1681" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1681" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1681" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1682" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1682" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1682" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1682" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1682" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x coordinate missing for &#039;Q&#039; at position &quot;" line="1682" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1682" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1682" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1682" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1682" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1684" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1684" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1684" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1684" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1684" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1685" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1685" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1685" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1685" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1685" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1685" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1686" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1686" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1686" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1686" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1686" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y coordinate missing for &#039;Q&#039; at position &quot;" line="1686" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1686" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1686" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1688" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1688" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1688" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1688" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1688" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="quadTo" line="1689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1690" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1690" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;Q&#039;" line="1690" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1692" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1694" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;q&#039;" line="1694" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="if" line="1696" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1696" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1696" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1696" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1696" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1696" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1697" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1697" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1697" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1697" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1697" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx1 coordinate missing for &#039;q&#039; at position &quot;" line="1697" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1697" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1697" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1697" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1697" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1699" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="+" line="1699" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="x" line="1699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1699" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1700" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1700" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1700" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1701" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1701" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1701" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1701" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1701" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy1 coordinate missing for &#039;q&#039; at position &quot;" line="1701" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1701" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1701" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1703" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1703" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1703" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="+" line="1703" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1703" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="y" line="1703" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1703" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1703" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1704" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1704" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1704" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1704" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1704" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1704" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1705" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1705" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1705" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1705" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1705" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx coordinate missing for &#039;q&#039; at position &quot;" line="1705" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1705" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1705" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1705" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1705" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1707" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1707" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1707" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1707" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1707" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1708" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1708" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1708" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1708" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1708" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1708" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1709" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1709" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1709" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1709" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1709" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy coordinate missing for &#039;q&#039; at position &quot;" line="1709" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1709" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1711" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1711" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1711" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1711" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1711" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1712" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="quadTo" line="1712" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1712" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1712" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1712" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1712" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1712" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1712" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1712" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1712" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1713" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1713" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;q&#039;" line="1713" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1715" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1716" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;T&#039;" line="1716" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1718" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="node" line="1718" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="path" line="1718" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="get" line="1718" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="-" line="1718" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="path" line="1718" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="size" line="1718" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="1" line="1718" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1719" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="-" line="1719" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="*" line="1719" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="node" line="1719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="x" line="1719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="1719" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <node name="2d" line="1719" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="node" line="1719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1719" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1" line="1719" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1720" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="-" line="1720" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="*" line="1720" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="node" line="1720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="y" line="1720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="1720" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <node name="2d" line="1720" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="node" line="1720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1720" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1" line="1720" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1721" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1721" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1721" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1721" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1721" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1721" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1722" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1722" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1722" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1722" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1722" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;x coordinate missing for &#039;T&#039; at position &quot;" line="1722" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1722" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1722" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1722" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1722" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1724" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1725" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1725" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1725" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1725" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1725" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1725" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1726" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1726" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1726" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1726" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1726" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;y coordinate missing for &#039;T&#039; at position &quot;" line="1726" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1726" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1726" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1728" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1728" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="quadTo" line="1729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1729" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1730" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1730" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;T&#039;" line="1730" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1732" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1734" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;t&#039;" line="1734" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1736" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="node" line="1736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="path" line="1736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="get" line="1736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="-" line="1736" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="path" line="1736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="size" line="1736" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="1" line="1736" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1737" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="-" line="1737" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="*" line="1737" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="node" line="1737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="x" line="1737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="1737" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <node name="2d" line="1737" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="node" line="1737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1" line="1737" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1738" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="c1" line="1738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="-" line="1738" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="*" line="1738" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="node" line="1738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="y" line="1738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="0" line="1738" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                             <node name="2d" line="1738" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                           <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="node" line="1738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1" line="1738" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1739" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1739" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1740" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1740" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1740" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1740" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1740" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dx coordinate missing for &#039;t&#039; at position &quot;" line="1740" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1740" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1740" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1742" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1742" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="x" line="1742" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1742" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1742" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="if" line="1743" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="!=" line="1743" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1743" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nextToken" line="1743" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="StreamPosTokenizer" line="1743" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="TT_NUMBER" line="1743" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="throw" line="1744" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="IOException" line="1744" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1744" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1744" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1744" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;dy coordinate missing for &#039;t&#039; at position &quot;" line="1744" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="1744" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="getStartPosition" line="1744" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="&quot; in &quot;" line="1744" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1744" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="+=" line="1746" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="p" line="1746" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="y" line="1746" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="1746" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nval" line="1746" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="path" line="1747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="quadTo" line="1747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="c1" line="1747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="x" line="1747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="p" line="1747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="y" line="1747" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="=" line="1748" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="nextCommand" line="1748" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&#039;s&#039;" line="1748" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="break" line="1750" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1753" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;A&#039;" line="1753" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="1755" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1755" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1755" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1756" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1756" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1756" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1756" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1756" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;rx coordinate missing for &#039;A&#039; at position &quot;" line="1756" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1756" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1756" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1756" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1756" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="double" line="1760" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="rx" line="1760" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1760" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1760" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1761" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1761" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1761" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1761" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1761" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1761" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1762" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1762" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1762" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1762" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1762" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;ry coordinate missing for &#039;A&#039; at position &quot;" line="1762" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1762" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1762" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1762" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1762" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="double" line="1764" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="ry" line="1764" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1764" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1764" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1765" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1765" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1765" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1765" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1765" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1765" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1766" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1766" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1766" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1766" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1766" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;x-axis-rotation missing for &#039;A&#039; at position &quot;" line="1766" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1766" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1766" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1766" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1766" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="double" line="1768" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="xAxisRotation" line="1768" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1768" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1768" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1769" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1769" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1770" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1770" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1770" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1770" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1770" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;large-arc-flag missing for &#039;A&#039; at position &quot;" line="1770" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1770" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1770" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="boolean" line="1772" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="largeArcFlag" line="1772" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="!=" line="1772" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1772" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nval" line="1772" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="0" line="1772" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1773" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1773" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1773" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1773" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1773" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1773" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1774" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1774" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1774" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1774" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1774" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;sweep-flag missing for &#039;A&#039; at position &quot;" line="1774" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1774" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1774" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1774" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1774" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="boolean" line="1776" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="sweepFlag" line="1776" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="!=" line="1776" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1776" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nval" line="1776" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="0" line="1776" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1777" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1777" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1777" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1777" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1777" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1777" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1778" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1778" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1778" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1778" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1778" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;x coordinate missing for &#039;A&#039; at position &quot;" line="1778" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1778" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1778" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1780" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="x" line="1780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1780" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1781" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1781" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1782" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1782" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1782" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1782" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1782" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;y coordinate missing for &#039;A&#039; at position &quot;" line="1782" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1782" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1784" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1784" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="y" line="1784" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1784" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1784" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="path" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="arcTo" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="rx" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ry" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="xAxisRotation" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="largeArcFlag" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="sweepFlag" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="p" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="x" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="p" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="y" line="1786" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1788" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="nextCommand" line="1788" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&#039;A&#039;" line="1788" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="break" line="1789" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                       </statement_node>
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="case" line="1791" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                       <node name="&#039;a&#039;" line="1791" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="1793" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1793" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1793" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1793" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1793" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1793" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1794" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1794" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1794" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1794" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1794" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;rx coordinate missing for &#039;A&#039; at position &quot;" line="1794" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1794" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1794" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1794" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1794" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="double" line="1798" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="rx" line="1798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1799" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1799" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1799" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1799" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1799" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1799" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1800" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1800" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1800" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1800" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1800" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;ry coordinate missing for &#039;A&#039; at position &quot;" line="1800" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1800" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1800" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1800" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1800" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="double" line="1802" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="ry" line="1802" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1802" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1802" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1803" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1803" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1803" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1803" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1803" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1803" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1804" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1804" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1804" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1804" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1804" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;x-axis-rotation missing for &#039;A&#039; at position &quot;" line="1804" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1804" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1804" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1804" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1804" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="double" line="1806" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="xAxisRotation" line="1806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1807" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1807" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1808" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1808" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1808" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1808" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1808" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;large-arc-flag missing for &#039;A&#039; at position &quot;" line="1808" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1808" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1808" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1808" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1808" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="boolean" line="1810" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="largeArcFlag" line="1810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="!=" line="1810" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nval" line="1810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="0" line="1810" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1811" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1811" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1812" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1812" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1812" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1812" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1812" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;sweep-flag missing for &#039;A&#039; at position &quot;" line="1812" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1812" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="boolean" line="1814" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="sweepFlag" line="1814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="!=" line="1814" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nval" line="1814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="0" line="1814" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1815" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1815" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1815" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1815" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1815" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1815" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1816" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1816" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1816" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1816" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1816" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;x coordinate missing for &#039;A&#039; at position &quot;" line="1816" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1816" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="+=" line="1818" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="x" line="1818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="1819" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="1819" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="1819" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextToken" line="1819" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="StreamPosTokenizer" line="1819" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="TT_NUMBER" line="1819" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="throw" line="1820" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                               <node name="IOException" line="1820" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="1820" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1820" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="1820" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;y coordinate missing for &#039;A&#039; at position &quot;" line="1820" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="1820" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="getStartPosition" line="1820" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="&quot; in &quot;" line="1820" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                     <node name="str" line="1820" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="+=" line="1822" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="p" line="1822" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="y" line="1822" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="tt" line="1822" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="nval" line="1822" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="path" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="arcTo" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="rx" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ry" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="xAxisRotation" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="largeArcFlag" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="sweepFlag" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="p" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="x" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="p" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="y" line="1824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="1826" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="nextCommand" line="1826" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&#039;a&#039;" line="1826" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="break" line="1827" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                       </statement_node>
                     </statement_node>
                   </node>
                   <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
                     <node name="default" line="1829" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                     </node>
                     <statement_node name="if" line="1830" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="DEBUG" line="1830" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="System" line="1831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="out" line="1831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="println" line="1831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="+" line="1831" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                   <node name="+" line="1831" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="+" line="1831" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;SVGInputFormat.toPath aborting after illegal path command: &quot;" line="1831" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="command" line="1831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="&quot; found in path &quot;" line="1831" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                   <node name="str" line="1831" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="break" line="1833" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                       <node name="Commands" line="1833" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </statement_node>
                   </node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="1837" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="1837" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="path" line="1837" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="1837" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="paths" line="1838" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="1838" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="path" line="1838" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="1841" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="paths" line="1841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="toArray" line="1841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="BezierPath" line="1841" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="paths" line="1841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="size" line="1841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1847" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readCoreAttributes" line="1847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1847" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="1847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="1847" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="1847" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="a" line="1847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1848" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1848" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1863" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="identifyElements" line="1863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1863" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1863" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="identifiedElements" line="1864" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="1864" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="1864" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getAttribute" line="1864" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;id&quot;" line="1864" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="elem" line="1864" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="identifiedElements" line="1865" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="1865" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="1865" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getAttribute" line="1865" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;xml:id&quot;" line="1865" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="elem" line="1865" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="1867" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="ENHANCED_FOR_CONTROL" line="0" instruction_class="ENHANCED_FOR_CONTROL" instruction="ENHANCED_FOR_CONTROL">
               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               </node>
               <node name="IXMLElement" line="1867" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
               <node name="child" line="1867" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="1867" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getChildren" line="1867" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="identifyElements" line="1868" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="child" line="1868" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1875" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readOpacityAttribute" line="1875" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1875" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1875" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Map" line="1875" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="1875" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="1875" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="a" line="1875" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1876" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1876" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="1891" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="1891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toDouble" line="1891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="1891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="1891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="1891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;opacity&quot;" line="1891" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;1&quot;" line="1891" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="1" line="1891" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="0" line="1891" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="1" line="1891" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="OPACITY" line="1892" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="1892" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="1892" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="value" line="1892" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1898" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readTextAttributes" line="1898" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1898" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1898" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Map" line="1898" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="1898" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="1898" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="a" line="1898" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1899" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1899" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Object" line="1900" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="1900" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="1911" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="1911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="1911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="1911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;text-anchor&quot;" line="1911" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;start&quot;" line="1911" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1912" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="1912" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="SVG_TEXT_ANCHORS" line="1912" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="get" line="1912" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="value" line="1912" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="null" line="1912" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="TEXT_ANCHOR" line="1913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="1913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="1913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="SVG_TEXT_ANCHORS" line="1913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="1913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="value" line="1913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="1925" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="1925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="1925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="1925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;display-align&quot;" line="1925" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;auto&quot;" line="1925" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1927" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="!" line="1927" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="value" line="1927" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="equals" line="1927" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;auto&quot;" line="1927" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="1928" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="value" line="1928" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="equals" line="1928" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;center&quot;" line="1928" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="TEXT_ANCHOR" line="1929" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="1929" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="1929" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="TextAnchor" line="1929" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="MIDDLE" line="1929" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="if" line="1930" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="value" line="1930" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="equals" line="1930" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;before&quot;" line="1930" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="TEXT_ANCHOR" line="1931" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="put" line="1931" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="a" line="1931" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="TextAnchor" line="1931" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="END" line="1931" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="1943" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="1943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="1943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="1943" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;text-align&quot;" line="1943" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;start&quot;" line="1943" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1945" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="!" line="1945" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="value" line="1945" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="equals" line="1945" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;start&quot;" line="1945" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="TEXT_ALIGN" line="1946" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="1946" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="1946" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="SVG_TEXT_ALIGNS" line="1946" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="1946" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="value" line="1946" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1953" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readTextFlowAttributes" line="1953" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1953" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1953" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="1953" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="1953" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="1953" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="a" line="1953" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1954" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1954" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Object" line="1955" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="1955" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="1966" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="1966" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="1966" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="1966" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;line-increment&quot;" line="1966" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;auto&quot;" line="1966" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1967" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="1967" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="1968" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="1968" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="1968" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="1968" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;SVGInputFormat not implemented line-increment=&quot;" line="1968" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="value" line="1968" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1976" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readTransformAttribute" line="1976" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1976" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1976" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="1976" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="1976" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="1976" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="a" line="1976" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1977" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1977" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="1978" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="1978" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="1979" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="1979" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="1979" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="1979" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;transform&quot;" line="1979" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;none&quot;" line="1979" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="1980" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="!" line="1980" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="value" line="1980" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="equals" line="1980" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;none&quot;" line="1980" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="TRANSFORM" line="1981" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="1981" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="1981" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toTransform" line="1981" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="elem" line="1981" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="value" line="1981" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="1987" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readSolidColorElement" line="1987" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="1987" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="1987" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="1988" instruction_class="throws" instruction="throws">
           <node name="IOException" line="1988" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="1989" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="1989" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="1989" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="1989" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="1989" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="1989" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="1989" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="1990" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="1990" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="1990" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Color" line="2001" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="color" line="2001" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toColor" line="2001" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2001" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2001" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2001" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;solid-color&quot;" line="2001" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;black&quot;" line="2001" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2012" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="opacity" line="2012" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toDouble" line="2012" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2012" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2012" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2012" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;solid-opacity&quot;" line="2012" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;1&quot;" line="2012" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="1" line="2012" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="0" line="2012" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                     <node name="1" line="2012" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2013" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2013" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="opacity" line="2013" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="1" line="2013" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2014" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="color" line="2014" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="Color" line="2014" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="|" line="2014" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                           <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                               <node name="int" line="2014" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                               </node>
                               <node name="*" line="2014" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                 <node name="255" line="2014" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                                 <node name="opacity" line="2014" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <node name="24" line="2014" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="&amp;" line="2014" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                             <node name="0xffffff" line="2014" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="color" line="2014" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getRGB" line="2014" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="true" line="2014" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="2017" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2017" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="2017" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="color" line="2017" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="2024" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readShapeAttributes" line="2024" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="2024" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="2024" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="2024" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="2024" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="2024" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="a" line="2024" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="2025" instruction_class="throws" instruction="throws">
           <node name="IOException" line="2025" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Object" line="2026" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="objectValue" line="2026" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="2027" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="2027" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2028" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="doubleValue" line="2028" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2065" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toPaint" line="2065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritColorAttribute" line="2065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;fill&quot;" line="2065" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;black&quot;" line="2065" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2066" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="instanceof" line="2066" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
               <node name="objectValue" line="2066" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Color" line="2066" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="FILL_COLOR" line="2067" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2067" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2067" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="Color" line="2067" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="objectValue" line="2067" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="2068" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="instanceof" line="2068" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                 <node name="objectValue" line="2068" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Gradient" line="2068" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="FILL_GRADIENT" line="2069" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="putClone" line="2069" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="a" line="2069" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="Gradient" line="2069" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2069" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="2070" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="2070" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="objectValue" line="2070" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="2070" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="FILL_COLOR" line="2071" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="2071" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="2071" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="2071" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="FILL_COLOR" line="2073" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="2073" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="2073" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="2073" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="2074" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="DEBUG" line="2074" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="System" line="2075" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="out" line="2075" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="println" line="2075" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="2075" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="&quot;SVGInputFormat not implemented  fill=&quot;" line="2075" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="objectValue" line="2075" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2088" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2088" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2088" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2088" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;fill-opacity&quot;" line="2088" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;1&quot;" line="2088" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="FILL_OPACITY" line="2089" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2089" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2089" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toDouble" line="2089" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2089" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="String" line="2089" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2089" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="1d" line="2089" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="0d" line="2089" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="1d" line="2089" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2100" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;fill-rule&quot;" line="2100" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;nonzero&quot;" line="2100" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="WINDING_RULE" line="2101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SVG_FILL_RULES" line="2101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="2101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="2101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2113" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toPaint" line="2113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritColorAttribute" line="2113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;stroke&quot;" line="2113" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;none&quot;" line="2113" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2114" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="instanceof" line="2114" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
               <node name="objectValue" line="2114" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Color" line="2114" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_COLOR" line="2115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="Color" line="2115" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="objectValue" line="2115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="2116" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="instanceof" line="2116" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                 <node name="objectValue" line="2116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Gradient" line="2116" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="STROKE_GRADIENT" line="2117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="putClone" line="2117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="a" line="2117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="Gradient" line="2117" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="2118" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="2118" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="objectValue" line="2118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="2118" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="STROKE_COLOR" line="2119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="2119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="2119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="2119" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="STROKE_COLOR" line="2121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="2121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="2121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="2121" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="2122" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="DEBUG" line="2122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="System" line="2123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="out" line="2123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="println" line="2123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="2123" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="&quot;SVGInputFormat not implemented  stroke=&quot;" line="2123" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="objectValue" line="2123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2136" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2136" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2136" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2136" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-dasharray&quot;" line="2136" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;none&quot;" line="2136" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2137" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="!" line="2137" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="value" line="2137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="equals" line="2137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;none&quot;" line="2137" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="String" line="2138" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="values" line="2138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toWSOrCommaSeparatedArray" line="2138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="2138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="double" line="2139" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="dashes" line="2139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="double" line="2139" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="values" line="2139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="2139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="2140" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="2140" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="i" line="2140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="2140" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="&lt;" line="2140" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="i" line="2140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="values" line="2140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="2140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="i" line="2140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2141" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="dashes" line="2141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="2141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toNumber" line="2141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="elem" line="2141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="values" line="2141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="i" line="2141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_DASHES" line="2143" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2143" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2143" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="dashes" line="2143" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2155" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="doubleValue" line="2155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="2155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritAttribute" line="2155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2155" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;stroke-dashoffset&quot;" line="2155" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="2155" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_DASH_PHASE" line="2156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="doubleValue" line="2156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="IS_STROKE_DASH_FACTOR" line="2157" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2157" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2157" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="false" line="2157" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2168" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2168" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2168" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2168" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-linecap&quot;" line="2168" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;butt&quot;" line="2168" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_CAP" line="2169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SVG_STROKE_LINECAPS" line="2169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="2169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="2169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2181" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-linejoin&quot;" line="2181" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;miter&quot;" line="2181" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_JOIN" line="2182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SVG_STROKE_LINEJOINS" line="2182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="2182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="2182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2193" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="doubleValue" line="2193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toDouble" line="2193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritAttribute" line="2193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;stroke-miterlimit&quot;" line="2193" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;4&quot;" line="2193" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="4d" line="2193" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="1d" line="2193" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Double" line="2193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="MAX_VALUE" line="2193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_MITER_LIMIT" line="2194" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2194" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2194" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="doubleValue" line="2194" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="IS_STROKE_MITER_LIMIT_FACTOR" line="2195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="false" line="2195" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2206" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-opacity&quot;" line="2206" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;1&quot;" line="2206" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_OPACITY" line="2207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toDouble" line="2207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="String" line="2207" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="1d" line="2207" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="0d" line="2207" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="1d" line="2207" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2218" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="doubleValue" line="2218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="2218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritAttribute" line="2218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;stroke-width&quot;" line="2218" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;1&quot;" line="2218" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_WIDTH" line="2219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="doubleValue" line="2219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="2224" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readUseShapeAttributes" line="2224" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="2224" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="2224" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="2224" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="2224" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="2224" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="a" line="2224" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="2225" instruction_class="throws" instruction="throws">
           <node name="IOException" line="2225" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Object" line="2226" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="objectValue" line="2226" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="2227" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="2227" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2228" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="doubleValue" line="2228" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2265" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2265" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritColorAttribute" line="2265" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2265" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;fill&quot;" line="2265" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2265" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2266" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2266" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="objectValue" line="2266" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2266" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2267" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="objectValue" line="2267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toPaint" line="2267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="String" line="2267" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="2268" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="instanceof" line="2268" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                   <node name="objectValue" line="2268" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Color" line="2268" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="FILL_COLOR" line="2269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="2269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="2269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                             <node name="Color" line="2269" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="objectValue" line="2269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="if" line="2270" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="instanceof" line="2270" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                     <node name="objectValue" line="2270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="Gradient" line="2270" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="FILL_GRADIENT" line="2271" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="put" line="2271" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="a" line="2271" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                               <node name="Gradient" line="2271" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="objectValue" line="2271" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="2272" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="==" line="2272" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="objectValue" line="2272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="null" line="2272" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="FILL_COLOR" line="2273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="put" line="2273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="a" line="2273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="null" line="2273" instruction_class="LITERAL" instruction="NULL_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="FILL_COLOR" line="2275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="put" line="2275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="a" line="2275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="null" line="2275" instruction_class="LITERAL" instruction="NULL_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="2276" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="DEBUG" line="2276" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="System" line="2277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="out" line="2277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="println" line="2277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="+" line="2277" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="&quot;SVGInputFormat not implemented  fill=&quot;" line="2277" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                     <node name="objectValue" line="2277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2291" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;fill-opacity&quot;" line="2291" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2291" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2292" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2292" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="objectValue" line="2292" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2292" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="FILL_OPACITY" line="2293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toDouble" line="2293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="elem" line="2293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                               <node name="String" line="2293" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="objectValue" line="2293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1d" line="2293" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                             <node name="0d" line="2293" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                             <node name="1d" line="2293" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2305" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;fill-rule&quot;" line="2305" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2305" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2306" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2306" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="value" line="2306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2306" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="WINDING_RULE" line="2307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="SVG_FILL_RULES" line="2307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="2307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="value" line="2307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2320" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2320" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toPaint" line="2320" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2320" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritColorAttribute" line="2320" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2320" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;stroke&quot;" line="2320" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="null" line="2320" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2321" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2321" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="objectValue" line="2321" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2321" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="2322" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="instanceof" line="2322" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                   <node name="objectValue" line="2322" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Color" line="2322" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="STROKE_COLOR" line="2323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="2323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="2323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                             <node name="Color" line="2323" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="objectValue" line="2323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="if" line="2324" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="instanceof" line="2324" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                     <node name="objectValue" line="2324" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="Gradient" line="2324" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="STROKE_GRADIENT" line="2325" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="put" line="2325" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="a" line="2325" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                               <node name="Gradient" line="2325" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="objectValue" line="2325" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2338" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-dasharray&quot;" line="2338" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2338" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2339" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="2339" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="2339" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="value" line="2339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="2339" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                 <node name="!" line="2339" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="value" line="2339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="equals" line="2339" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;none&quot;" line="2339" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="String" line="2340" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="values" line="2340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toCommaSeparatedArray" line="2340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="2340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="double" line="2341" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="dashes" line="2341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="double" line="2341" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="values" line="2341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="2341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="2342" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="2342" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="i" line="2342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="2342" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="&lt;" line="2342" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="i" line="2342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="values" line="2342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="2342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="i" line="2342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2343" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="dashes" line="2343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="2343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toNumber" line="2343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="elem" line="2343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="values" line="2343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="i" line="2343" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_DASHES" line="2345" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2345" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2345" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="dashes" line="2345" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2357" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2357" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2357" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2357" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-dashoffset&quot;" line="2357" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2357" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2358" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2358" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="objectValue" line="2358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2358" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2359" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="doubleValue" line="2359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toNumber" line="2359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="String" line="2359" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2359" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_DASH_PHASE" line="2360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="doubleValue" line="2360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="IS_STROKE_DASH_FACTOR" line="2361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="false" line="2361" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2373" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-linecap&quot;" line="2373" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2373" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2374" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2374" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="value" line="2374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2374" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_CAP" line="2375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="SVG_STROKE_LINECAPS" line="2375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="2375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="value" line="2375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2387" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-linejoin&quot;" line="2387" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2387" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2388" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2388" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="value" line="2388" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2388" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_JOIN" line="2389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="SVG_STROKE_LINEJOINS" line="2389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="get" line="2389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="value" line="2389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2400" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2400" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-miterlimit&quot;" line="2400" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2400" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2401" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2401" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="objectValue" line="2401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2401" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2402" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="doubleValue" line="2402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toDouble" line="2402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="String" line="2402" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="4d" line="2402" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="1d" line="2402" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="Double" line="2402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="MAX_VALUE" line="2402" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_MITER_LIMIT" line="2403" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2403" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2403" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="doubleValue" line="2403" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="IS_STROKE_MITER_LIMIT_FACTOR" line="2404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2404" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="false" line="2404" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2416" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-opacity&quot;" line="2416" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2416" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2417" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2417" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="objectValue" line="2417" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2417" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_OPACITY" line="2418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toDouble" line="2418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="elem" line="2418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                               <node name="String" line="2418" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="objectValue" line="2418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1d" line="2418" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                             <node name="0d" line="2418" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                             <node name="1d" line="2418" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2430" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2430" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-width&quot;" line="2430" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2430" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2431" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2431" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="objectValue" line="2431" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2431" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2432" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="doubleValue" line="2432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toNumber" line="2432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="String" line="2432" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2432" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_WIDTH" line="2433" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2433" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2433" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="doubleValue" line="2433" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="2439" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readLineAttributes" line="2439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="2439" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="2439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="2439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="2439" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="2439" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="a" line="2439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="2440" instruction_class="throws" instruction="throws">
           <node name="IOException" line="2440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Object" line="2441" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="objectValue" line="2441" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="2442" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="2442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2443" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="doubleValue" line="2443" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2480" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toPaint" line="2480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritColorAttribute" line="2480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;fill&quot;" line="2480" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;none&quot;" line="2480" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2481" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="instanceof" line="2481" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
               <node name="objectValue" line="2481" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Color" line="2481" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="FILL_COLOR" line="2482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="Color" line="2482" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="objectValue" line="2482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="2483" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="instanceof" line="2483" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                 <node name="objectValue" line="2483" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Gradient" line="2483" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="FILL_GRADIENT" line="2484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="putClone" line="2484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="a" line="2484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="Gradient" line="2484" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2484" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="2485" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="2485" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="objectValue" line="2485" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="2485" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="FILL_COLOR" line="2486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="2486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="2486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="2486" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="FILL_COLOR" line="2488" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="2488" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="2488" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="2488" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="2489" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="DEBUG" line="2489" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="System" line="2490" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="out" line="2490" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="println" line="2490" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="2490" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="&quot;SVGInputFormat not implemented  fill=&quot;" line="2490" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="objectValue" line="2490" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2503" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;fill-opacity&quot;" line="2503" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;1&quot;" line="2503" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="FILL_OPACITY" line="2504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toDouble" line="2504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="String" line="2504" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="1d" line="2504" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="0d" line="2504" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="1d" line="2504" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2515" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;fill-rule&quot;" line="2515" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;nonzero&quot;" line="2515" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="WINDING_RULE" line="2516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SVG_FILL_RULES" line="2516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="2516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="2516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2528" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2528" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toPaint" line="2528" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2528" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritColorAttribute" line="2528" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2528" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;stroke&quot;" line="2528" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;black&quot;" line="2528" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2529" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="instanceof" line="2529" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
               <node name="objectValue" line="2529" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Color" line="2529" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_COLOR" line="2530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="Color" line="2530" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="objectValue" line="2530" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="2531" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="instanceof" line="2531" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                 <node name="objectValue" line="2531" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Gradient" line="2531" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="STROKE_GRADIENT" line="2532" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="putClone" line="2532" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="a" line="2532" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="Gradient" line="2532" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2532" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="2533" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="2533" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="objectValue" line="2533" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="2533" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="STROKE_COLOR" line="2534" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="2534" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="2534" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="2534" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="STROKE_COLOR" line="2536" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="put" line="2536" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="a" line="2536" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="null" line="2536" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="2537" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="DEBUG" line="2537" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="System" line="2538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="out" line="2538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="println" line="2538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="2538" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="&quot;SVGInputFormat not implemented  stroke=&quot;" line="2538" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="objectValue" line="2538" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2551" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2551" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2551" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2551" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-dasharray&quot;" line="2551" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;none&quot;" line="2551" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2552" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
               <node name="!" line="2552" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="value" line="2552" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="equals" line="2552" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;none&quot;" line="2552" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="String" line="2553" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="values" line="2553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toWSOrCommaSeparatedArray" line="2553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="2553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                   <node name="double" line="2554" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="dashes" line="2554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="double" line="2554" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="values" line="2554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="2554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="2555" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="2555" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="i" line="2555" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="0" line="2555" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </statement_node>
                   </node>
                   <node name="&lt;" line="2555" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                     <node name="i" line="2555" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="values" line="2555" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="2555" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                         <node name="i" line="2555" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2556" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="dashes" line="2556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="2556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toNumber" line="2556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="elem" line="2556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="values" line="2556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="i" line="2556" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="STROKE_DASHES" line="2558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="dashes" line="2558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2570" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="doubleValue" line="2570" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="2570" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2570" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritAttribute" line="2570" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2570" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;stroke-dashoffset&quot;" line="2570" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="2570" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_DASH_PHASE" line="2571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="doubleValue" line="2571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="IS_STROKE_DASH_FACTOR" line="2572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="false" line="2572" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2583" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2583" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2583" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2583" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-linecap&quot;" line="2583" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;butt&quot;" line="2583" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_CAP" line="2584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SVG_STROKE_LINECAPS" line="2584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="2584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="2584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2596" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2596" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-linejoin&quot;" line="2596" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;miter&quot;" line="2596" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_JOIN" line="2597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SVG_STROKE_LINEJOINS" line="2597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="2597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="2597" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2608" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="doubleValue" line="2608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toDouble" line="2608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritAttribute" line="2608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;stroke-miterlimit&quot;" line="2608" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;4&quot;" line="2608" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="4d" line="2608" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="1d" line="2608" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Double" line="2608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="MAX_VALUE" line="2608" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_MITER_LIMIT" line="2609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="doubleValue" line="2609" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="IS_STROKE_MITER_LIMIT_FACTOR" line="2610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2610" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="false" line="2610" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2621" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="objectValue" line="2621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2621" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;stroke-opacity&quot;" line="2621" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;1&quot;" line="2621" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_OPACITY" line="2622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toDouble" line="2622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="String" line="2622" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="objectValue" line="2622" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="1d" line="2622" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="0d" line="2622" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                         <node name="1d" line="2622" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2633" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="doubleValue" line="2633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toNumber" line="2633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritAttribute" line="2633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2633" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;stroke-width&quot;" line="2633" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;1&quot;" line="2633" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="STROKE_WIDTH" line="2634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="doubleValue" line="2634" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="2639" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readViewportAttributes" line="2639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="2639" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="2639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="2639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="2639" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="2639" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="a" line="2639" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="2640" instruction_class="throws" instruction="throws">
           <node name="IOException" line="2640" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Object" line="2641" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="2641" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Double" line="2642" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="doubleValue" line="2642" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2644" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2644" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="2644" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2644" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;width&quot;" line="2644" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2644" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2645" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="2645" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="2646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="2646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="2646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="2646" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="+" line="2646" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                           <node name="+" line="2646" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="&quot;SVGInputFormat READ viewport w/h factors:&quot;" line="2646" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="viewportStack" line="2646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="peek" line="2646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="widthPercentFactor" line="2646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="&quot;,&quot;" line="2646" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewportStack" line="2646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="peek" line="2646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="heightPercentFactor" line="2646" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="2648" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2648" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="value" line="2648" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2648" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2649" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="doubleValue" line="2649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toLength" line="2649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="String" line="2649" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="value" line="2649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewportStack" line="2649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="peek" line="2649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="widthPercentFactor" line="2649" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="VIEWPORT_WIDTH" line="2650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="doubleValue" line="2650" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2653" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2653" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="2653" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2653" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;height&quot;" line="2653" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2653" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2654" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="2654" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="value" line="2654" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2654" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2655" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="doubleValue" line="2655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toLength" line="2655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="String" line="2655" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="value" line="2655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="viewportStack" line="2655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="peek" line="2655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="heightPercentFactor" line="2655" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="VIEWPORT_HEIGHT" line="2656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="doubleValue" line="2656" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2668" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2668" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toPaint" line="2668" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2668" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritColorAttribute" line="2668" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2668" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;viewport-fill&quot;" line="2668" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;none&quot;" line="2668" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2669" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="||" line="2669" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="2669" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="value" line="2669" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="2669" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="instanceof" line="2669" instruction_class="OPERATOR" instruction="TYPE_COMPARISON_OPERATOR">
                 <node name="value" line="2669" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="Color" line="2669" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="VIEWPORT_FILL" line="2670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="put" line="2670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="a" line="2670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="Color" line="2670" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="value" line="2670" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2682" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="doubleValue" line="2682" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toDouble" line="2682" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2682" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2682" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2682" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;viewport-fill-opacity&quot;" line="2682" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;1.0&quot;" line="2682" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="VIEWPORT_FILL_OPACITY" line="2683" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2683" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="2683" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="doubleValue" line="2683" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="2689" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readGraphicsAttributes" line="2689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="2689" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="2689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="2689" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="f" line="2689" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="2690" instruction_class="throws" instruction="throws">
           <node name="IOException" line="2690" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Object" line="2691" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="2691" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2707" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2707" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="2707" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2707" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;display&quot;" line="2707" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;inline&quot;" line="2707" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2708" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="2708" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="2709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="2709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="2709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="2709" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;SVGInputFormat not implemented display=&quot;" line="2709" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="value" line="2709" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2722" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2722" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2722" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2722" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;image-rendering&quot;" line="2722" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;auto&quot;" line="2722" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2723" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="2723" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="2724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="2724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="2724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="2724" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;SVGInputFormat not implemented image-rendering=&quot;" line="2724" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="value" line="2724" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2737" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2737" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;pointer-events&quot;" line="2737" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;visiblePainted&quot;" line="2737" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2738" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="2738" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="2739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="2739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="2739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="2739" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;SVGInputFormat not implemented pointer-events=&quot;" line="2739" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="value" line="2739" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2752" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2752" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2752" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2752" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;shape-rendering&quot;" line="2752" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;auto&quot;" line="2752" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2753" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="2753" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="2754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="2754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="2754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="2754" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;SVGInputFormat not implemented shape-rendering=&quot;" line="2754" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="value" line="2754" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2767" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2767" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2767" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2767" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;text-rendering&quot;" line="2767" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;auto&quot;" line="2767" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2768" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="2768" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="2769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="2769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="2769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="2769" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;SVGInputFormat not implemented text-rendering=&quot;" line="2769" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="value" line="2769" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2781" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="2781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2781" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;vector-effect&quot;" line="2781" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;none&quot;" line="2781" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2782" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="2782" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="2783" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="2783" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="2783" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="2783" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;SVGInputFormat not implemented vector-effect=&quot;" line="2783" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="value" line="2783" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2796" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2796" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2796" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2796" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;visibility&quot;" line="2796" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="null" line="2796" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2797" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="DEBUG" line="2797" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="System" line="2798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="out" line="2798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="println" line="2798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="2798" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="&quot;SVGInputFormat not implemented visibility=&quot;" line="2798" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="value" line="2798" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="2805" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readLinearGradientElement" line="2805" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="2805" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="2805" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="2806" instruction_class="throws" instruction="throws">
           <node name="IOException" line="2806" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="2807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="2807" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="2807" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="2807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="2807" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="2807" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="2807" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="2808" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="2808" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="2808" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2810" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="x1" line="2810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toLength" line="2810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2810" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;x1&quot;" line="2810" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="2810" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="0.01" line="2810" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2811" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="y1" line="2811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toLength" line="2811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2811" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;y1&quot;" line="2811" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="2811" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="0.01" line="2811" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2812" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="x2" line="2812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toLength" line="2812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2812" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;x2&quot;" line="2812" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;1&quot;" line="2812" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="0.01" line="2812" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2813" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="y2" line="2813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toLength" line="2813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2813" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;y2&quot;" line="2813" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0&quot;" line="2813" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="0.01" line="2813" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="2814" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="isRelativeToFigureBounds" line="2814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="readAttribute" line="2814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&quot;gradientUnits&quot;" line="2814" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="&quot;objectBoundingBox&quot;" line="2814" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="equals" line="2814" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;objectBoundingBox&quot;" line="2814" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="2816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="IXMLElement" line="2816" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stops" line="2816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="2816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getChildrenNamed" line="2816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;stop&quot;" line="2816" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="SVG_NAMESPACE" line="2816" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2817" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="2817" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="stops" line="2817" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="size" line="2817" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="0" line="2817" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2818" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="stops" line="2818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="2818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getChildrenNamed" line="2818" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;stop&quot;" line="2818" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="2820" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="2820" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="stops" line="2820" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="size" line="2820" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="0" line="2820" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="String" line="2822" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="xlink" line="2822" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="readAttribute" line="2822" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2822" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&quot;xlink:href&quot;" line="2822" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="&quot;&quot;" line="2822" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="2823" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="2823" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="xlink" line="2823" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="startsWith" line="2823" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;#&quot;" line="2823" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="!=" line="2824" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="identifiedElements" line="2824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="2824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="xlink" line="2824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="substring" line="2824" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="1" line="2824" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="null" line="2824" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2826" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="stops" line="2826" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="identifiedElements" line="2826" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="get" line="2826" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="xlink" line="2826" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="substring" line="2826" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="1" line="2826" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="getChildrenNamed" line="2826" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;stop&quot;" line="2826" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                             <node name="SVG_NAMESPACE" line="2826" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="2827" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="==" line="2827" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="stops" line="2827" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="size" line="2827" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="0" line="2827" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="2828" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="stops" line="2828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="identifiedElements" line="2828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="get" line="2828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="xlink" line="2828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="substring" line="2828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="1" line="2828" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="getChildrenNamed" line="2828" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;stop&quot;" line="2828" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="2832" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="2832" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="stops" line="2832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="size" line="2832" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="0" line="2832" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="2833" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="DEBUG" line="2833" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="System" line="2834" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="out" line="2834" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="println" line="2834" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="+" line="2834" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="&quot;SVGInpuFormat: Warning no stops in linearGradient &quot;" line="2834" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                             <node name="elem" line="2834" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="2838" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stopOffsets" line="2838" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="double" line="2838" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="stops" line="2838" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="size" line="2838" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="Color" line="2839" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stopColors" line="2839" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="Color" line="2839" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="stops" line="2839" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="size" line="2839" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="2840" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stopOpacities" line="2840" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="double" line="2840" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="stops" line="2840" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="size" line="2840" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="2841" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="2841" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="i" line="2841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="2841" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="2841" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="2841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="stops" line="2841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="size" line="2841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="2841" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="IXMLElement" line="2842" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="stopElem" line="2842" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="stops" line="2842" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="2842" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="i" line="2842" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="String" line="2843" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="offsetStr" line="2843" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="readAttribute" line="2843" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="stopElem" line="2843" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&quot;offset&quot;" line="2843" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="&quot;0&quot;" line="2843" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="2844" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="offsetStr" line="2844" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="endsWith" line="2844" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;%&quot;" line="2844" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2845" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="stopOffsets" line="2845" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="2845" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="/" line="2845" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="toDouble" line="2845" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="stopElem" line="2845" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="offsetStr" line="2845" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="substring" line="2845" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="0" line="2845" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                     <node name="-" line="2845" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="offsetStr" line="2845" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="length" line="2845" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="1" line="2845" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="0" line="2845" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                               <node name="0" line="2845" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                               <node name="100" line="2845" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="100d" line="2845" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2847" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="stopOffsets" line="2847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="2847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toDouble" line="2847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="stopElem" line="2847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="offsetStr" line="2847" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="0" line="2847" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                             <node name="0" line="2847" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                             <node name="1" line="2847" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2858" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="stopColors" line="2858" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="2858" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toColor" line="2858" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="stopElem" line="2858" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="readAttribute" line="2858" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="stopElem" line="2858" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="&quot;stop-color&quot;" line="2858" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                               <node name="&quot;black&quot;" line="2858" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="2859" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="2859" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="stopColors" line="2859" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="2859" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="null" line="2859" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2860" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="stopColors" line="2860" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="2860" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="Color" line="2860" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="0x0" line="2860" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                             <node name="true" line="2860" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2873" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="stopOpacities" line="2873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="2873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toDouble" line="2873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="stopElem" line="2873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="readAttribute" line="2873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="stopElem" line="2873" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="&quot;stop-opacity&quot;" line="2873" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                               <node name="&quot;1&quot;" line="2873" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="1" line="2873" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="0" line="2873" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="1" line="2873" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="AffineTransform" line="2876" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tx" line="2876" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toTransform" line="2876" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2876" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2876" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2876" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;gradientTransform&quot;" line="2876" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;none&quot;" line="2876" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Gradient" line="2878" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="gradient" line="2878" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="2878" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createLinearGradient" line="2878" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="x1" line="2879" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y1" line="2879" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="x2" line="2879" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="y2" line="2879" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="stopOffsets" line="2880" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="stopColors" line="2880" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="stopOpacities" line="2880" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="isRelativeToFigureBounds" line="2881" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="tx" line="2881" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="2883" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2883" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="2883" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="gradient" line="2883" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="2889" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readRadialGradientElement" line="2889" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="2889" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="2889" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="2890" instruction_class="throws" instruction="throws">
           <node name="IOException" line="2890" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="HashMap" line="2891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="2891" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="2891" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="a" line="2891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="HashMap" line="2891" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="AttributeKey" line="2891" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="Object" line="2891" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readCoreAttributes" line="2892" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="2892" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="a" line="2892" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2894" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cx" line="2894" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toLength" line="2894" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2894" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2894" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2894" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;cx&quot;" line="2894" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0.5&quot;" line="2894" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="0.01" line="2894" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2895" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="cy" line="2895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toLength" line="2895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2895" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;cy&quot;" line="2895" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0.5&quot;" line="2895" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="0.01" line="2895" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2896" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="fx" line="2896" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toLength" line="2896" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2896" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2896" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2896" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;fx&quot;" line="2896" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="readAttribute" line="2896" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="2896" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="&quot;cx&quot;" line="2896" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="&quot;0.5&quot;" line="2896" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="0.01" line="2896" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2897" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="fy" line="2897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toLength" line="2897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;fy&quot;" line="2897" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="readAttribute" line="2897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="elem" line="2897" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="&quot;cy&quot;" line="2897" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="&quot;0.5&quot;" line="2897" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="0.01" line="2897" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2898" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="r" line="2898" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toLength" line="2898" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2898" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2898" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2898" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;r&quot;" line="2898" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;0.5&quot;" line="2898" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="0.01" line="2898" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="2899" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="isRelativeToFigureBounds" line="2899" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="readAttribute" line="2900" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2900" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&quot;gradientUnits&quot;" line="2900" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="&quot;objectBoundingBox&quot;" line="2900" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="equals" line="2900" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;objectBoundingBox&quot;" line="2900" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="2902" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="IXMLElement" line="2902" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stops" line="2902" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="elem" line="2902" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getChildrenNamed" line="2902" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;stop&quot;" line="2902" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="SVG_NAMESPACE" line="2902" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="2903" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="2903" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="stops" line="2903" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="size" line="2903" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="0" line="2903" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2904" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="stops" line="2904" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="elem" line="2904" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getChildrenNamed" line="2904" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;stop&quot;" line="2904" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="2906" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="2906" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="stops" line="2906" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="size" line="2906" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="0" line="2906" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="String" line="2908" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="xlink" line="2908" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="readAttribute" line="2908" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="2908" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&quot;xlink:href&quot;" line="2908" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="&quot;&quot;" line="2908" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="2909" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="2909" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="xlink" line="2909" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="startsWith" line="2909" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;#&quot;" line="2909" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="!=" line="2910" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="identifiedElements" line="2910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="2910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="xlink" line="2910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="substring" line="2910" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="1" line="2910" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="null" line="2910" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2911" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="stops" line="2911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="identifiedElements" line="2911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="get" line="2911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="xlink" line="2911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="substring" line="2911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="1" line="2911" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="getChildrenNamed" line="2911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;stop&quot;" line="2911" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                             <node name="SVG_NAMESPACE" line="2911" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="2912" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="==" line="2912" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="stops" line="2912" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="size" line="2912" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="0" line="2912" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="2913" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="stops" line="2913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="identifiedElements" line="2913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="get" line="2913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="xlink" line="2913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="substring" line="2913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="1" line="2913" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="getChildrenNamed" line="2913" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;stop&quot;" line="2913" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="2918" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stopOffsets" line="2918" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="double" line="2918" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="stops" line="2918" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="size" line="2918" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="Color" line="2919" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stopColors" line="2919" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="Color" line="2919" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="stops" line="2919" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="size" line="2919" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="double" line="2920" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="stopOpacities" line="2920" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                 <node name="double" line="2920" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="stops" line="2920" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="size" line="2920" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="2921" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="2921" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="i" line="2921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="2921" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="2921" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="2921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="stops" line="2921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="size" line="2921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="2921" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="IXMLElement" line="2922" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="stopElem" line="2922" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="stops" line="2922" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="2922" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="i" line="2922" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="String" line="2923" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="offsetStr" line="2923" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="readAttribute" line="2923" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="stopElem" line="2923" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&quot;offset&quot;" line="2923" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="&quot;0&quot;" line="2923" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="2924" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="offsetStr" line="2924" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="endsWith" line="2924" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;%&quot;" line="2924" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2925" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="stopOffsets" line="2925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="2925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="/" line="2925" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="toDouble" line="2925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="stopElem" line="2925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="offsetStr" line="2925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="substring" line="2925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="0" line="2925" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                     <node name="-" line="2925" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="offsetStr" line="2925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="length" line="2925" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="1" line="2925" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="0" line="2925" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                               <node name="0" line="2925" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                               <node name="100" line="2925" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="100d" line="2925" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2927" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="stopOffsets" line="2927" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="2927" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toDouble" line="2927" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="stopElem" line="2927" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="offsetStr" line="2927" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="0" line="2927" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                             <node name="0" line="2927" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                             <node name="1" line="2927" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2938" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="stopColors" line="2938" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="2938" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toColor" line="2938" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="stopElem" line="2938" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="readAttribute" line="2938" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="stopElem" line="2938" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="&quot;stop-color&quot;" line="2938" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                               <node name="&quot;black&quot;" line="2938" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="2939" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="2939" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="stopColors" line="2939" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="2939" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="null" line="2939" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2940" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="stopColors" line="2940" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="i" line="2940" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="Color" line="2940" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="0x0" line="2940" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                             <node name="true" line="2940" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="2952" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="stopOpacities" line="2952" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="i" line="2952" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="toDouble" line="2952" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="stopElem" line="2952" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="readAttribute" line="2952" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="stopElem" line="2952" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="&quot;stop-opacity&quot;" line="2952" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                               <node name="&quot;1&quot;" line="2952" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="1" line="2952" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="0" line="2952" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="1" line="2952" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="AffineTransform" line="2955" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="tx" line="2955" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toTransform" line="2955" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2955" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readAttribute" line="2955" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="2955" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;gradientTransform&quot;" line="2955" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;none&quot;" line="2955" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Gradient" line="2957" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="gradient" line="2957" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="factory" line="2957" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="createRadialGradient" line="2957" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="cx" line="2958" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="cy" line="2958" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="fx" line="2958" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="fy" line="2958" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="r" line="2958" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="stopOffsets" line="2959" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="stopColors" line="2959" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="stopOpacities" line="2959" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="isRelativeToFigureBounds" line="2960" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="tx" line="2961" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="elementObjects" line="2962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="2962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="2962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="gradient" line="2962" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="2968" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readFontAttributes" line="2968" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="2968" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="2968" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Map" line="2968" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="AttributeKey" line="2968" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Object" line="2968" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="a" line="2968" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="2969" instruction_class="throws" instruction="throws">
           <node name="IOException" line="2969" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="2970" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="value" line="2970" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="2971" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="doubleValue" line="2971" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="2984" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="2984" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="2984" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="2984" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;font-family&quot;" line="2984" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;Dialog&quot;" line="2984" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="String" line="2985" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="familyNames" line="2985" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="toQuotedAndCommaSeparatedArray" line="2985" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="value" line="2985" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Font" line="2986" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="font" line="2986" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2986" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="for" line="2989" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
             <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
               <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="int" line="2989" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="i" line="2989" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="0" line="2989" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </statement_node>
               </node>
               <node name="&lt;" line="2989" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="i" line="2989" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="familyNames" line="2989" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="2989" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
               <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                     <node name="i" line="2989" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="try" line="2990" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="2991" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="font" line="2991" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                         <node name="Font" line="2991" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="fontFormatter" line="2991" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="stringToValue" line="2991" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="familyNames" line="2991" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="i" line="2991" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="break" line="2992" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
                   </statement_node>
                 </statement_node>
                 <node name="catch" line="2993" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                   <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="ParseException" line="2993" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="e" line="2993" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   </statement_node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="2996" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="2996" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="font" line="2996" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="2996" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="2998" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&gt;" line="2998" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="familyNames" line="2998" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="length" line="2998" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="0" line="2998" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="fontFormatter" line="2999" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="setAllowsUnknownFont" line="2999" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="true" line="2999" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="try" line="3000" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="3001" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="font" line="3001" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                             <node name="Font" line="3001" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="fontFormatter" line="3001" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="stringToValue" line="3001" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                     <node name="familyNames" line="3001" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="0" line="3001" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <node name="catch" line="3002" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                       <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="ParseException" line="3002" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="e" line="3002" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       </statement_node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="fontFormatter" line="3004" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="setAllowsUnknownFont" line="3004" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="false" line="3004" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="3007" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="3007" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="font" line="3007" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="3007" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="3009" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="font" line="3009" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="Font" line="3009" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;Dialog&quot;" line="3009" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="Font" line="3009" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="PLAIN" line="3009" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="12" line="3009" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="FONT_FACE" line="3011" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="3011" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="3011" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="font" line="3011" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3023" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="doubleValue" line="3023" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritFontSizeAttribute" line="3023" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="3023" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;font-size&quot;" line="3023" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;medium&quot;" line="3023" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="FONT_SIZE" line="3024" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="3024" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="3024" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="doubleValue" line="3024" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3035" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="3035" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="3035" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="3035" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;font-style&quot;" line="3035" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;normal&quot;" line="3035" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="FONT_ITALIC" line="3036" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="3036" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="3036" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="value" line="3036" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="equals" line="3036" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;italic&quot;" line="3036" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3048" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="3048" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="3048" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="3048" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;font-variant&quot;" line="3048" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;normal&quot;" line="3048" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3063" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="3063" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="3063" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="3063" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;font-weight&quot;" line="3063" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;normal&quot;" line="3063" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="FONT_BOLD" line="3064" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="3064" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="3064" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="||" line="3066" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="||" line="3066" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="||" line="3065" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                         <node name="||" line="3065" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                           <node name="||" line="3065" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                             <node name="||" line="3064" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                               <node name="||" line="3064" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="value" line="3064" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="equals" line="3064" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="&quot;bold&quot;" line="3064" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="value" line="3064" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="equals" line="3064" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="&quot;bolder&quot;" line="3064" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="value" line="3065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="equals" line="3065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="&quot;400&quot;" line="3065" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="value" line="3065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="equals" line="3065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="&quot;500&quot;" line="3065" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="value" line="3065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="equals" line="3065" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;600&quot;" line="3065" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="value" line="3066" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="equals" line="3066" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="&quot;700&quot;" line="3066" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="value" line="3066" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="equals" line="3066" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;800&quot;" line="3066" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="value" line="3066" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="equals" line="3066" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;900&quot;" line="3066" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3077" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="value" line="3077" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readAttribute" line="3077" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="3077" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;text-decoration&quot;" line="3077" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;none&quot;" line="3077" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="FONT_UNDERLINE" line="3078" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="put" line="3078" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="a" line="3078" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="value" line="3078" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="equals" line="3078" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;underline&quot;" line="3078" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="3085" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Object" line="3085" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="toPaint" line="3085" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="3085" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="3085" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="3085" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="value" line="3085" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="3085" instruction_class="throws" instruction="throws">
           <node name="IOException" line="3085" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="3086" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="str" line="3086" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="value" line="3086" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="3087" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="3087" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="str" line="3087" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="3087" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="3088" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="null" line="3088" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3091" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="str" line="3091" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="str" line="3091" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="trim" line="3091" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="toLowerCase" line="3091" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="3093" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="str" line="3093" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="equals" line="3093" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;none&quot;" line="3093" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="3094" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="null" line="3094" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="3095" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="str" line="3095" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="equals" line="3095" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;currentcolor&quot;" line="3095" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   </node>
                   <node name="String" line="3096" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   </node>
                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                     <node name="currentColor" line="3096" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="readInheritAttribute" line="3096" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="3096" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="&quot;color&quot;" line="3096" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                           <node name="&quot;black&quot;" line="3096" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
                 <statement_node name="if" line="3097" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="||" line="3097" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="==" line="3097" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="currentColor" line="3097" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="null" line="3097" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="currentColor" line="3097" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="trim" line="3097" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="toLowerCase" line="3097" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="equals" line="3097" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;currentColor&quot;" line="3097" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="3098" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="null" line="3098" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="3100" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="toPaint" line="3100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="elem" line="3100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="currentColor" line="3100" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="3102" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="SVG_COLORS" line="3102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="containsKey" line="3102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="str" line="3102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="3103" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SVG_COLORS" line="3103" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="3103" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="str" line="3103" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="if" line="3104" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="&amp;&amp;" line="3104" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="str" line="3104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="startsWith" line="3104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;#&quot;" line="3104" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="==" line="3104" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="str" line="3104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="length" line="3104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="7" line="3104" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="return" line="3105" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="Color" line="3105" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="Integer" line="3105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="decode" line="3105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="str" line="3105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="3106" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&amp;&amp;" line="3106" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="str" line="3106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="startsWith" line="3106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;#&quot;" line="3106" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="==" line="3106" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="str" line="3106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="length" line="3106" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="4" line="3106" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="int" line="3108" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="th" line="3108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="Integer" line="3108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="decode" line="3108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="str" line="3108" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="return" line="3109" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="Color" line="3109" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="|" line="3112" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                 <node name="|" line="3111" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                   <node name="|" line="3111" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                     <node name="|" line="3110" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                       <node name="|" line="3110" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                         <node name="&amp;" line="3110" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                           <node name="th" line="3110" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="0xf" line="3110" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                           </node>
                                         </node>
                                         <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                           <node name="&amp;" line="3110" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                             <node name="th" line="3110" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="0xf" line="3110" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                             </node>
                                           </node>
                                           <node name="4" line="3110" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                         <node name="&amp;" line="3111" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                           <node name="th" line="3111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="0xf0" line="3111" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                           </node>
                                         </node>
                                         <node name="4" line="3111" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                       <node name="&amp;" line="3111" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                         <node name="th" line="3111" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="0xf0" line="3111" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                       <node name="8" line="3111" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                   <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                     <node name="&amp;" line="3112" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                       <node name="th" line="3112" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="0xf00" line="3112" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                     <node name="8" line="3112" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                                 <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                   <node name="&amp;" line="3112" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                     <node name="th" line="3112" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="0xf00" line="3112" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                   <node name="12" line="3112" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="if" line="3113" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="str" line="3113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="startsWith" line="3113" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;rgb&quot;" line="3113" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="try" line="3114" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="StringTokenizer" line="3115" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                 <node name="tt" line="3115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                   <node name="StringTokenizer" line="3115" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="str" line="3115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="&quot;() ,&quot;" line="3115" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="3116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nextToken" line="3116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </statement_node>
                             <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="String" line="3117" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                 <node name="r" line="3117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="tt" line="3117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="nextToken" line="3117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                             <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="String" line="3118" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                 <node name="g" line="3118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="tt" line="3118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="nextToken" line="3118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                             <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="String" line="3119" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                 <node name="b" line="3119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="tt" line="3119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="nextToken" line="3119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                             <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="Color" line="3120" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                 <node name="c" line="3120" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                   <node name="Color" line="3120" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="?" line="3121" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="r" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="endsWith" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="&quot;%&quot;" line="3121" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                           <node name="int" line="3121" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                           </node>
                                           <node name="*" line="3121" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                 <node name="Double" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="parseDouble" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                       <node name="r" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                       <node name="substring" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                     </node>
                                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                         <node name="0" line="3121" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                         </node>
                                                         <node name="-" line="3121" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                               <node name="r" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                               <node name="length" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                             </node>
                                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                             </node>
                                                           </node>
                                                           <node name="1" line="3121" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                           </node>
                                                         </node>
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                             <node name="2.55" line="3121" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="Integer" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="decode" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="r" line="3121" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <node name="?" line="3122" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="g" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="endsWith" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="&quot;%&quot;" line="3122" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                           <node name="int" line="3122" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                           </node>
                                           <node name="*" line="3122" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                 <node name="Double" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="parseDouble" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                       <node name="g" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                       <node name="substring" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                     </node>
                                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                         <node name="0" line="3122" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                         </node>
                                                         <node name="-" line="3122" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                               <node name="g" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                               <node name="length" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                             </node>
                                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                             </node>
                                                           </node>
                                                           <node name="1" line="3122" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                           </node>
                                                         </node>
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                             <node name="2.55" line="3122" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="Integer" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="decode" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="g" line="3122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <node name="?" line="3123" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="b" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="endsWith" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="&quot;%&quot;" line="3123" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                           <node name="int" line="3123" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                           </node>
                                           <node name="*" line="3123" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                 <node name="Double" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="parseDouble" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                       <node name="b" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                       <node name="substring" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                     </node>
                                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                         <node name="0" line="3123" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                         </node>
                                                         <node name="-" line="3123" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                               <node name="b" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                               <node name="length" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                               </node>
                                                             </node>
                                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                             </node>
                                                           </node>
                                                           <node name="1" line="3123" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                           </node>
                                                         </node>
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                             <node name="2.55" line="3123" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="Integer" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="decode" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="b" line="3123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                             <statement_node name="return" line="3124" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                               <node name="c" line="3124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </statement_node>
                           </statement_node>
                           <node name="catch" line="3125" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                             <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="Exception" line="3125" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                               </node>
                               <node name="e" line="3125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="System" line="3126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="out" line="3126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="println" line="3126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="+" line="3126" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;SVGInputFormat.toPaint illegal RGB value &quot;" line="3126" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="str" line="3126" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="e" line="3127" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="printStackTrace" line="3127" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                               </statement_node>
                               <statement_node name="return" line="3128" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                                 <node name="null" line="3128" instruction_class="LITERAL" instruction="NULL_LITERAL">
                                 </node>
                               </statement_node>
                             </statement_node>
                           </node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="if" line="3130" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="str" line="3130" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="startsWith" line="3130" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="&quot;url(&quot;" line="3130" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="String" line="3131" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="href" line="3131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="value" line="3131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="substring" line="3131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="4" line="3131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                     <node name="-" line="3131" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="value" line="3131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="length" line="3131" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         </node>
                                       </node>
                                       <node name="1" line="3131" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="if" line="3132" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="&amp;&amp;" line="3132" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="identifiedElements" line="3132" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="containsKey" line="3132" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="href" line="3132" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="substring" line="3132" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="1" line="3132" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="elementObjects" line="3133" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="containsKey" line="3133" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="identifiedElements" line="3133" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="get" line="3133" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="href" line="3133" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="substring" line="3133" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                 <node name="1" line="3133" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                                 </node>
                                 <node name="Object" line="3134" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                 </node>
                                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                   <node name="obj" line="3134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="elementObjects" line="3134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="get" line="3134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="identifiedElements" line="3134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="get" line="3134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                   <node name="href" line="3134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                   <node name="substring" line="3134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                 </node>
                                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                     <node name="1" line="3134" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                               <statement_node name="return" line="3135" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                                 <node name="obj" line="3135" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="if" line="3138" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="DEBUG" line="3138" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="System" line="3139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="out" line="3139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="println" line="3139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="+" line="3139" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;SVGInputFormat.toPaint not implemented for &quot;" line="3139" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="href" line="3139" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="return" line="3141" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                             <node name="null" line="3141" instruction_class="LITERAL" instruction="NULL_LITERAL">
                             </node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="return" line="3143" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                             <node name="null" line="3143" instruction_class="LITERAL" instruction="NULL_LITERAL">
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="3151" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Color" line="3151" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="toColor" line="3151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="3151" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="3151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="3151" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="value" line="3151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="3151" instruction_class="throws" instruction="throws">
           <node name="IOException" line="3151" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="3152" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="str" line="3152" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="value" line="3152" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="3153" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="==" line="3153" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="str" line="3153" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="3153" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="3154" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="null" line="3154" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3157" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="str" line="3157" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="str" line="3157" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="trim" line="3157" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="toLowerCase" line="3157" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="3158" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="str" line="3158" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="equals" line="3158" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;currentcolor&quot;" line="3158" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="String" line="3159" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="currentColor" line="3159" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="readInheritAttribute" line="3159" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="elem" line="3159" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="&quot;color&quot;" line="3159" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                         <node name="&quot;black&quot;" line="3159" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="3160" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="||" line="3160" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="==" line="3160" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="currentColor" line="3160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="null" line="3160" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="currentColor" line="3160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="trim" line="3160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="toLowerCase" line="3160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="equals" line="3160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;currentColor&quot;" line="3160" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="3161" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="null" line="3161" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="3163" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="toColor" line="3163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="elem" line="3163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="currentColor" line="3163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
             <statement_node name="if" line="3165" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="SVG_COLORS" line="3165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="containsKey" line="3165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="str" line="3165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="return" line="3166" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="SVG_COLORS" line="3166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="get" line="3166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="str" line="3166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="3167" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="3167" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="str" line="3167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="startsWith" line="3167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;#&quot;" line="3167" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="==" line="3167" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="str" line="3167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="length" line="3167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="7" line="3167" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="return" line="3168" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="Color" line="3168" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="Integer" line="3168" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="decode" line="3168" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="str" line="3168" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
                 <statement_node name="if" line="3169" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                   <node name="&amp;&amp;" line="3169" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="str" line="3169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="startsWith" line="3169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;#&quot;" line="3169" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <node name="==" line="3169" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="str" line="3169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="length" line="3169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="4" line="3169" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                     <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                       <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       </node>
                       <node name="int" line="3171" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                         <node name="th" line="3171" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="Integer" line="3171" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="decode" line="3171" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="str" line="3171" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                     <statement_node name="return" line="3172" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="Color" line="3172" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="|" line="3175" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                               <node name="|" line="3174" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                 <node name="|" line="3174" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                   <node name="|" line="3173" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                     <node name="|" line="3173" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                       <node name="&amp;" line="3173" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                         <node name="th" line="3173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="0xf" line="3173" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                       <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                         <node name="&amp;" line="3173" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                           <node name="th" line="3173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="0xf" line="3173" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                           </node>
                                         </node>
                                         <node name="4" line="3173" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                       <node name="&amp;" line="3174" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                         <node name="th" line="3174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="0xf0" line="3174" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                         </node>
                                       </node>
                                       <node name="4" line="3174" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                   <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                     <node name="&amp;" line="3174" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                       <node name="th" line="3174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="0xf0" line="3174" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                     <node name="8" line="3174" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                                 <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                   <node name="&amp;" line="3175" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                     <node name="th" line="3175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="0xf00" line="3175" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                   <node name="8" line="3175" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </node>
                               <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                                 <node name="&amp;" line="3175" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                                   <node name="th" line="3175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="0xf00" line="3175" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                                 <node name="12" line="3175" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="3176" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="str" line="3176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="startsWith" line="3176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;rgb&quot;" line="3176" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="try" line="3177" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="StringTokenizer" line="3178" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="tt" line="3178" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="StringTokenizer" line="3178" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="str" line="3178" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="&quot;() ,&quot;" line="3178" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="tt" line="3179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="nextToken" line="3179" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="String" line="3180" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="r" line="3180" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="3180" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nextToken" line="3180" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="String" line="3181" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="g" line="3181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="3181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nextToken" line="3181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="String" line="3182" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="b" line="3182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="3182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nextToken" line="3182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="Color" line="3183" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="c" line="3183" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="Color" line="3183" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="?" line="3184" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="r" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="endsWith" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="&quot;%&quot;" line="3184" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                         <node name="int" line="3184" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                         </node>
                                         <node name="*" line="3184" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="Integer" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="decode" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                     <node name="r" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                     <node name="substring" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                   </node>
                                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                       <node name="0" line="3184" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                       </node>
                                                       <node name="-" line="3184" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                             <node name="r" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                             </node>
                                                             <node name="length" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                             </node>
                                                           </node>
                                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                           </node>
                                                         </node>
                                                         <node name="1" line="3184" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                         </node>
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                           <node name="2.55" line="3184" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="Integer" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="decode" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="r" line="3184" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                     <node name="?" line="3185" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="g" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="endsWith" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="&quot;%&quot;" line="3185" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                         <node name="int" line="3185" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                         </node>
                                         <node name="*" line="3185" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="Integer" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="decode" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                     <node name="g" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                     <node name="substring" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                   </node>
                                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                       <node name="0" line="3185" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                       </node>
                                                       <node name="-" line="3185" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                             <node name="g" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                             </node>
                                                             <node name="length" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                             </node>
                                                           </node>
                                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                           </node>
                                                         </node>
                                                         <node name="1" line="3185" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                         </node>
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                           <node name="2.55" line="3185" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="Integer" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="decode" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="g" line="3185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                     <node name="?" line="3186" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="b" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="endsWith" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="&quot;%&quot;" line="3186" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                                         <node name="int" line="3186" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                         </node>
                                         <node name="*" line="3186" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="Integer" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="decode" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                     <node name="b" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                     <node name="substring" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                   </node>
                                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                       <node name="0" line="3186" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                       </node>
                                                       <node name="-" line="3186" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                             <node name="b" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                             </node>
                                                             <node name="length" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                             </node>
                                                           </node>
                                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                           </node>
                                                         </node>
                                                         <node name="1" line="3186" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                         </node>
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                           <node name="2.55" line="3186" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="Integer" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="decode" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="b" line="3186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="return" line="3187" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                             <node name="c" line="3187" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </statement_node>
                         </statement_node>
                         <node name="catch" line="3188" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
                           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="Exception" line="3188" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="e" line="3188" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="if" line="3189" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                               <node name="DEBUG" line="3189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="System" line="3190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="out" line="3190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="println" line="3190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="+" line="3190" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                           <node name="&quot;SVGInputFormat.toColor illegal RGB value &quot;" line="3190" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                           </node>
                                           <node name="str" line="3190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="return" line="3192" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                               <node name="null" line="3192" instruction_class="LITERAL" instruction="NULL_LITERAL">
                               </node>
                             </statement_node>
                           </statement_node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="if" line="3194" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="str" line="3194" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="startsWith" line="3194" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;url&quot;" line="3194" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="if" line="3196" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                           <node name="DEBUG" line="3196" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="System" line="3197" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="out" line="3197" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="println" line="3197" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="+" line="3197" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;SVGInputFormat.toColor not implemented for &quot;" line="3197" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="str" line="3197" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="return" line="3199" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                           <node name="null" line="3199" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="return" line="3201" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                           <node name="null" line="3201" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="3208" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="3208" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="toDouble" line="3208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="3208" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="3208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="3208" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="value" line="3208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="3208" instruction_class="throws" instruction="throws">
           <node name="IOException" line="3208" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="3209" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="toDouble" line="3209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="elem" line="3209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="value" line="3209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="3209" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Double" line="3209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="MIN_VALUE" line="3209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Double" line="3209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="MAX_VALUE" line="3209" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="3215" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="double" line="3215" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="toDouble" line="3215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="3215" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="3215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="3215" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="value" line="3215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="3215" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="defaultValue" line="3215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="3215" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="min" line="3215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="double" line="3215" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="max" line="3215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="3215" instruction_class="throws" instruction="throws">
           <node name="IOException" line="3215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="try" line="3216" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="double" line="3217" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="d" line="3217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Double" line="3217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="valueOf" line="3217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="value" line="3217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="return" line="3218" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Math" line="3218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="max" line="3218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="Math" line="3218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="min" line="3218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="d" line="3218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="max" line="3218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="min" line="3218" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="3219" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="NumberFormatException" line="3219" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="e" line="3219" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="return" line="3220" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                   <node name="defaultValue" line="3220" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="3233" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="3233" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="toText" line="3233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="3233" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="3233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="3233" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="value" line="3233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="3233" instruction_class="throws" instruction="throws">
           <node name="IOException" line="3233" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="3234" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="space" line="3234" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="readInheritAttribute" line="3234" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="elem" line="3234" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="&quot;xml:space&quot;" line="3234" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                     <node name="&quot;default&quot;" line="3234" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="3235" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="space" line="3235" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="equals" line="3235" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;default&quot;" line="3235" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="3236" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="value" line="3236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="trim" line="3236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="replaceAll" line="3236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;\\s++&quot;" line="3236" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                       <node name="&quot; &quot;" line="3236" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="3238" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="value" line="3238" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="3246" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="3246" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="AffineTransform" line="3246" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="toTransform" line="3246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="IXMLElement" line="3246" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="elem" line="3246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="3246" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="str" line="3246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="3246" instruction_class="throws" instruction="throws">
           <node name="IOException" line="3246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="AffineTransform" line="3247" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="t" line="3247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="AffineTransform" line="3247" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="3249" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="3249" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="3249" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="str" line="3249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="3249" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                 <node name="!" line="3249" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="str" line="3249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="equals" line="3249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="&quot;none&quot;" line="3249" instruction_class="LITERAL" instruction="STRING_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="StreamPosTokenizer" line="3251" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="tt" line="3251" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="StreamPosTokenizer" line="3251" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="StringReader" line="3251" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="str" line="3251" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="3252" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="resetSyntax" line="3252" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="3253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="wordChars" line="3253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&#039;a&#039;" line="3253" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                       <node name="&#039;z&#039;" line="3253" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="3254" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="wordChars" line="3254" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&#039;A&#039;" line="3254" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                       <node name="&#039;Z&#039;" line="3254" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="3255" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="wordChars" line="3255" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="+" line="3255" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="128" line="3255" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                         <node name="32" line="3255" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="255" line="3255" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="3256" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="whitespaceChars" line="3256" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="0" line="3256" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                       <node name="&#039; &#039;" line="3256" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="3257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="whitespaceChars" line="3257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&#039;,&#039;" line="3257" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                       <node name="&#039;,&#039;" line="3257" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="3258" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="parseNumbers" line="3258" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="tt" line="3259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="parseExponents" line="3259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="while" line="3261" instruction_class="LOOP_STATEMENT" instruction="WHILE_STATEMENT">
                 <node name="!=" line="3261" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="tt" line="3261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="nextToken" line="3261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="StreamPosTokenizer" line="3261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="TT_EOF" line="3261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="if" line="3262" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="3262" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="tt" line="3262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ttype" line="3262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="StreamPosTokenizer" line="3262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="TT_WORD" line="3262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="throw" line="3263" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="IOException" line="3263" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="3263" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="&quot;Illegal transform &quot;" line="3263" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="str" line="3263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="String" line="3265" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="type" line="3265" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="tt" line="3265" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="sval" line="3265" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="3266" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="3266" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="3266" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nextToken" line="3266" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="&#039;(&#039;" line="3266" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="throw" line="3267" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="IOException" line="3267" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="3267" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="&quot;&#039;(&#039; not found in transform &quot;" line="3267" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="str" line="3267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="3269" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="type" line="3269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="equals" line="3269" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="&quot;matrix&quot;" line="3269" instruction_class="LITERAL" instruction="STRING_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
                           <node name="double" line="3270" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="m" line="3270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                             <node name="double" line="3270" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                             </node>
                             <node name="6" line="3270" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="for" line="3271" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                         <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                           <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                             <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="int" line="3271" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                               </node>
                               <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                 <node name="i" line="3271" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="0" line="3271" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </statement_node>
                           </node>
                           <node name="&lt;" line="3271" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                             <node name="i" line="3271" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="6" line="3271" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                                 <node name="i" line="3271" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="if" line="3272" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="!=" line="3272" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="3272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nextToken" line="3272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="StreamPosTokenizer" line="3272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="TT_NUMBER" line="3272" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="throw" line="3273" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                                 <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                   <node name="IOException" line="3273" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="+" line="3273" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="+" line="3273" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                           <node name="+" line="3273" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                             <node name="+" line="3273" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                               <node name="+" line="3273" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                 <node name="+" line="3273" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                   <node name="+" line="3273" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                     <node name="&quot;Matrix value &quot;" line="3273" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                     </node>
                                                     <node name="i" line="3273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                   </node>
                                                   <node name="&quot; not found in transform &quot;" line="3273" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                   </node>
                                                 </node>
                                                 <node name="str" line="3273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="&quot; token:&quot;" line="3273" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                               </node>
                                             </node>
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="tt" line="3273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="ttype" line="3273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                           </node>
                                           <node name="&quot; &quot;" line="3273" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                           </node>
                                         </node>
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="3273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="sval" line="3273" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="3275" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                                 <node name="m" line="3275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="i" line="3275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="tt" line="3275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="nval" line="3275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="t" line="3277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="concatenate" line="3277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="AffineTransform" line="3277" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="m" line="3277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="if" line="3279" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="type" line="3279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="equals" line="3279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;translate&quot;" line="3279" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                         <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="double" line="3280" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                           <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                             <node name="tx" line="3280" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                             <node name="ty" line="3280" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </statement_node>
                         <statement_node name="if" line="3281" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                           <node name="!=" line="3281" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="tt" line="3281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="nextToken" line="3281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="StreamPosTokenizer" line="3281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="TT_NUMBER" line="3281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="throw" line="3282" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="IOException" line="3282" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="+" line="3282" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="&quot;X-translation value not found in transform &quot;" line="3282" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                       <node name="str" line="3282" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="=" line="3284" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                             <node name="tx" line="3284" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="tt" line="3284" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nval" line="3284" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </statement_node>
                         <statement_node name="if" line="3285" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                           <node name="==" line="3285" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="tt" line="3285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="nextToken" line="3285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="StreamPosTokenizer" line="3285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="TT_NUMBER" line="3285" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="=" line="3286" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                 <node name="ty" line="3286" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="3286" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nval" line="3286" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="3288" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="pushBack" line="3288" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </statement_node>
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="=" line="3289" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                 <node name="ty" line="3289" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="0" line="3289" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="t" line="3291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="translate" line="3291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="tx" line="3291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ty" line="3291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </statement_node>
                       <statement_node name="if" line="3293" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="type" line="3293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="equals" line="3293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="&quot;scale&quot;" line="3293" instruction_class="LITERAL" instruction="STRING_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="double" line="3294" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="sx" line="3294" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="sy" line="3294" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="if" line="3295" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="!=" line="3295" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="3295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nextToken" line="3295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="StreamPosTokenizer" line="3295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="TT_NUMBER" line="3295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="throw" line="3296" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                                 <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                   <node name="IOException" line="3296" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="+" line="3296" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="&quot;X-scale value not found in transform &quot;" line="3296" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                         </node>
                                         <node name="str" line="3296" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="3298" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="sx" line="3298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="tt" line="3298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="nval" line="3298" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="if" line="3299" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="==" line="3299" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="3299" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nextToken" line="3299" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="StreamPosTokenizer" line="3299" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="TT_NUMBER" line="3299" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="=" line="3300" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                   <node name="sy" line="3300" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="tt" line="3300" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="nval" line="3300" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="tt" line="3302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="pushBack" line="3302" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                               </statement_node>
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="=" line="3303" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                   <node name="sy" line="3303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="sx" line="3303" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="t" line="3305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="scale" line="3305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="sx" line="3305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="sy" line="3305" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="if" line="3307" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="type" line="3307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="equals" line="3307" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                 <node name="&quot;rotate&quot;" line="3307" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </node>
                           <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                             <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                               <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                               </node>
                               <node name="double" line="3308" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                               </node>
                               <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                 <node name="angle" line="3308" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                 <node name="cx" line="3308" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                 <node name="cy" line="3308" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </statement_node>
                             <statement_node name="if" line="3309" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                               <node name="!=" line="3309" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="tt" line="3309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="nextToken" line="3309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="StreamPosTokenizer" line="3309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="TT_NUMBER" line="3309" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                 <statement_node name="throw" line="3310" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                     <node name="IOException" line="3310" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="+" line="3310" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                           <node name="&quot;Angle value not found in transform &quot;" line="3310" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                           </node>
                                           <node name="str" line="3310" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="=" line="3312" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                 <node name="angle" line="3312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="tt" line="3312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="nval" line="3312" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                             <statement_node name="if" line="3313" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                               <node name="==" line="3313" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="tt" line="3313" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="nextToken" line="3313" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="StreamPosTokenizer" line="3313" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="TT_NUMBER" line="3313" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="=" line="3314" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                     <node name="cx" line="3314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="tt" line="3314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="nval" line="3314" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                                 <statement_node name="if" line="3315" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                   <node name="!=" line="3315" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="tt" line="3315" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="nextToken" line="3315" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="StreamPosTokenizer" line="3315" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="TT_NUMBER" line="3315" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                     <statement_node name="throw" line="3316" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                         <node name="IOException" line="3316" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="+" line="3316" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                               <node name="&quot;Y-center value not found in transform &quot;" line="3316" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                               </node>
                                               <node name="str" line="3316" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </statement_node>
                                   </statement_node>
                                 </statement_node>
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="=" line="3318" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                     <node name="cy" line="3318" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="tt" line="3318" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="nval" line="3318" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                               </statement_node>
                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="tt" line="3320" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="pushBack" line="3320" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                 </statement_node>
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="=" line="3321" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                     <node name="cx" line="3321" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="=" line="3321" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                       <node name="cy" line="3321" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="0" line="3321" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="t" line="3323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="rotate" line="3323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="/" line="3323" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                       <node name="*" line="3323" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                         <node name="angle" line="3323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="Math" line="3323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="PI" line="3323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                       </node>
                                       <node name="180d" line="3323" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                                       </node>
                                     </node>
                                     <node name="cx" line="3323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="cy" line="3323" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="if" line="3326" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="type" line="3326" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="equals" line="3326" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="&quot;skewX&quot;" line="3326" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                   </node>
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                                 </node>
                                 <node name="double" line="3327" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                 </node>
                                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                   <node name="angle" line="3327" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </statement_node>
                               <statement_node name="if" line="3328" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                 <node name="!=" line="3328" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="tt" line="3328" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="nextToken" line="3328" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="StreamPosTokenizer" line="3328" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="TT_NUMBER" line="3328" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="throw" line="3329" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                       <node name="IOException" line="3329" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="+" line="3329" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                             <node name="&quot;Skew angle not found in transform &quot;" line="3329" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                             <node name="str" line="3329" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="=" line="3331" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                   <node name="angle" line="3331" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="tt" line="3331" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="nval" line="3331" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="t" line="3332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="concatenate" line="3332" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                         <node name="AffineTransform" line="3332" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="1" line="3333" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                             </node>
                                             <node name="0" line="3333" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                             </node>
                                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                 <node name="Math" line="3333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="tan" line="3333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                   <node name="/" line="3333" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                                     <node name="*" line="3333" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                                       <node name="angle" line="3333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                         <node name="Math" line="3333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                         </node>
                                                         <node name="PI" line="3333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                         </node>
                                                       </node>
                                                     </node>
                                                     <node name="180" line="3333" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                             <node name="1" line="3333" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                             </node>
                                             <node name="0" line="3333" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                             </node>
                                             <node name="0" line="3333" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="if" line="3335" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="type" line="3335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="equals" line="3335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="&quot;skewY&quot;" line="3335" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                 <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                                   <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                                   </node>
                                   <node name="double" line="3336" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                   </node>
                                   <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                     <node name="angle" line="3336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </statement_node>
                                 <statement_node name="if" line="3337" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                   <node name="!=" line="3337" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="tt" line="3337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="nextToken" line="3337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="StreamPosTokenizer" line="3337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="TT_NUMBER" line="3337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                     <statement_node name="throw" line="3338" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                         <node name="IOException" line="3338" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="+" line="3338" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                               <node name="&quot;Skew angle not found in transform &quot;" line="3338" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                               </node>
                                               <node name="str" line="3338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </statement_node>
                                   </statement_node>
                                 </statement_node>
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="=" line="3340" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                     <node name="angle" line="3340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="tt" line="3340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="nval" line="3340" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="t" line="3341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="concatenate" line="3341" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                           <node name="AffineTransform" line="3341" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                               <node name="1" line="3342" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                   <node name="Math" line="3342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                   <node name="tan" line="3342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                 </node>
                                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                     <node name="/" line="3342" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                                       <node name="*" line="3342" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                                                         <node name="angle" line="3342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                         </node>
                                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                           <node name="Math" line="3342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                           </node>
                                                           <node name="PI" line="3342" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                           </node>
                                                         </node>
                                                       </node>
                                                       <node name="180" line="3342" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                               <node name="0" line="3342" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                               <node name="1" line="3342" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                               <node name="0" line="3342" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                               <node name="0" line="3342" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                 </statement_node>
                               </statement_node>
                               <statement_node name="if" line="3344" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="type" line="3344" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="equals" line="3344" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                       <node name="&quot;ref&quot;" line="3344" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                       </node>
                                     </node>
                                   </node>
                                 </node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="System" line="3345" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="err" line="3345" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="println" line="3345" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="+" line="3345" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                             <node name="&quot;SVGInputFormat warning: ignored ref(...) transform attribute in element &quot;" line="3345" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                             </node>
                                             <node name="elem" line="3345" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="while" line="3346" instruction_class="LOOP_STATEMENT" instruction="WHILE_STATEMENT">
                                     <node name="&amp;&amp;" line="3346" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                       <node name="!=" line="3346" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                             <node name="tt" line="3346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="nextToken" line="3346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           </node>
                                         </node>
                                         <node name="&#039;)&#039;" line="3346" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                                         </node>
                                       </node>
                                       <node name="!=" line="3346" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="tt" line="3346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="ttype" line="3346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                           <node name="StreamPosTokenizer" line="3346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="TT_EOF" line="3346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                     </statement_node>
                                   </statement_node>
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="tt" line="3349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="pushBack" line="3349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                   </statement_node>
                                 </statement_node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="throw" line="3351" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                       <node name="IOException" line="3351" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="+" line="3351" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                             <node name="+" line="3351" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                               <node name="+" line="3351" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                 <node name="+" line="3351" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                   <node name="+" line="3351" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                     <node name="&quot;Unknown transform &quot;" line="3351" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                     </node>
                                                     <node name="type" line="3351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                   </node>
                                                   <node name="&quot; in &quot;" line="3351" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                                   </node>
                                                 </node>
                                                 <node name="str" line="3351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                               </node>
                                               <node name="&quot; in element &quot;" line="3351" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                               </node>
                                             </node>
                                             <node name="elem" line="3351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="if" line="3353" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="3353" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="tt" line="3353" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nextToken" line="3353" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="&#039;)&#039;" line="3353" instruction_class="LITERAL" instruction="CHARACTER_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="throw" line="3354" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                         <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                           <node name="IOException" line="3354" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="+" line="3354" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="&quot;&#039;)&#039; not found in transform &quot;" line="3354" instruction_class="LITERAL" instruction="STRING_LITERAL">
                                 </node>
                                 <node name="str" line="3354" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="3358" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="t" line="3358" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="3361" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
               <node name="javax" line="3361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="swing" line="3361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="filechooser" line="3361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FileFilter" line="3361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="getFileFilter" line="3361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="3362" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
               <node name="ExtensionFileFilter" line="3362" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;Scalable Vector Graphics (SVG)&quot;" line="3362" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                   <node name="&quot;svg&quot;" line="3362" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="3365" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="JComponent" line="3365" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getInputFormatAccessory" line="3365" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="3366" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="null" line="3366" instruction_class="LITERAL" instruction="NULL_LITERAL">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="3369" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="read" line="3369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="File" line="3369" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="file" line="3369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Drawing" line="3369" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="drawing" line="3369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="3369" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="replace" line="3369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="3369" instruction_class="throws" instruction="throws">
           <node name="IOException" line="3369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3370" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="url" line="3370" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="file" line="3370" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="toURL" line="3370" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="BufferedInputStream" line="3371" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="in" line="3371" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="BufferedInputStream" line="3371" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                       <node name="FileInputStream" line="3371" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="file" line="3371" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="3372" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="read" line="3373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="in" line="3373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="drawing" line="3373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="replace" line="3373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="finally" line="3374" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="in" line="3375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="close" line="3375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3377" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="url" line="3377" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="null" line="3377" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="3380" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="read" line="3380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="URL" line="3380" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="url" line="3380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Drawing" line="3380" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="drawing" line="3380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="3380" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="replace" line="3380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="3380" instruction_class="throws" instruction="throws">
           <node name="IOException" line="3380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3381" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="url" line="3381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="url" line="3381" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="InputStream" line="3382" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="in" line="3382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="url" line="3382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="openStream" line="3382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="3383" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="read" line="3384" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="in" line="3384" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="drawing" line="3384" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="replace" line="3384" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="finally" line="3385" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="in" line="3386" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="close" line="3386" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="3388" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="url" line="3388" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="null" line="3388" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="3391" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="3391" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="isDataFlavorSupported" line="3391" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DataFlavor" line="3391" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="flavor" line="3391" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="3392" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="&amp;&amp;" line="3392" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="flavor" line="3392" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getPrimaryType" line="3392" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="equals" line="3392" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;image&quot;" line="3392" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="flavor" line="3393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getSubType" line="3393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="equals" line="3393" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;svg+xml&quot;" line="3393" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="3396" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="read" line="3396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Transferable" line="3396" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="t" line="3396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Drawing" line="3396" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="drawing" line="3396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="3396" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="replace" line="3396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="3396" instruction_class="throws" instruction="throws">
           <node name="UnsupportedFlavorException" line="3396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="IOException" line="3396" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="InputStream" line="3397" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="in" line="3397" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="InputStream" line="3397" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="t" line="3397" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="getTransferData" line="3397" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="DataFlavor" line="3397" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="&quot;image/svg+xml&quot;" line="3397" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                             <node name="&quot;Image SVG&quot;" line="3397" instruction_class="LITERAL" instruction="STRING_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="try" line="3398" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="read" line="3399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="in" line="3399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="drawing" line="3399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="false" line="3399" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="finally" line="3400" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_FINALLY">
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="in" line="3401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="close" line="3401" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
     </node>
   </class_statement_node>
 </node>
</srcfile>