<?xml version="1.0" ?>
<srcfile name="LineConnectionFigure.java" file_path="/Users/valerio/Research/Code/Source Code Comments Classification/comments_classification/media/jhotdraw/7.4.1/jhotdraw7zip/extracted/jhotdraw7/src/main/java/org/jhotdraw/draw/LineConnectionFigure.java" >
 <node name="COMPILATION_UNIT" line="0" instruction_class="COMPILATION_UNIT" instruction="COMPILATION_UNIT">
   <node name="PACKAGE_DECLARATION" line="0" instruction_class="KEYWORD" instruction="PACKAGE_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="draw" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="draw" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="liner" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Liner" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="draw" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="event" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="FigureAdapter" line="17" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="draw" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="event" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="FigureEvent" line="18" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="draw" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="handle" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="BezierOutlineHandle" line="19" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="draw" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="handle" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="BezierNodeHandle" line="20" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="draw" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="connector" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Connector" line="21" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="22" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="22" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="event" line="22" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="java" line="23" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="awt" line="23" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="geom" line="23" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="java" line="24" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="util" line="24" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="javax" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="swing" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="undo" line="25" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="java" line="26" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
       <node name="io" line="26" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="27" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="27" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="draw" line="27" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="handle" line="27" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="ConnectionEndHandle" line="27" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="28" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="28" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="draw" line="28" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="handle" line="28" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="ConnectionStartHandle" line="28" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="29" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="29" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="draw" line="29" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="handle" line="29" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="Handle" line="29" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="geom" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="org" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="jhotdraw" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="xml" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="DOMInput" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="SINGLE_TYPE_IMPORT_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="org" line="32" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="jhotdraw" line="32" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="xml" line="32" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="DOMOutput" line="32" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
       <node name="public" line="44" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
       </node>
     </node>
     <node name="LineConnectionFigure" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
     </node>
     <node name="extends" line="44" instruction_class="KEYWORD" instruction="INHERITANCE_KEYWORD">
       <node name="LineFigure" line="44" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
       </node>
     </node>
     <node name="implements" line="45" instruction_class="KEYWORD" instruction="INTERFACE_IMPLEMENTATION_KEYWORD">
       <node name="ConnectionFigure" line="45" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
       </node>
     </node>
     <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="48" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="final" line="48" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="48" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="48" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="LINER_PROPERTY" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="&quot;liner&quot;" line="48" instruction_class="LITERAL" instruction="STRING_LITERAL">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="49" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Connector" line="49" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="startConnector" line="49" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="50" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Connector" line="50" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="endConnector" line="50" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="51" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Liner" line="51" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="liner" line="51" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="56" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ConnectionHandler" line="56" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="connectionHandler" line="56" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
             <node name="ConnectionHandler" line="56" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
               </node>
             </node>
           </node>
         </node>
       </statement_node>
       <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="58" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
           <node name="static" line="58" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ConnectionHandler" line="58" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="extends" line="58" instruction_class="KEYWORD" instruction="INHERITANCE_KEYWORD">
           <node name="FigureAdapter" line="58" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           </node>
         </node>
         <node name="implements" line="58" instruction_class="KEYWORD" instruction="INTERFACE_IMPLEMENTATION_KEYWORD">
           <node name="Serializable" line="58" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           </node>
         </node>
         <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
           <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="60" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="LineConnectionFigure" line="60" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="owner" line="60" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="private" line="62" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="ConnectionHandler" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="LineConnectionFigure" line="62" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="owner" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="63" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                     </node>
                     <node name="owner" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="owner" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
                 <node name="Override" line="66" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="public" line="67" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
             </node>
             <node name="figureRemoved" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="FigureEvent" line="67" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="evt" line="67" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="owner" line="77" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="fireFigureRequestRemove" line="77" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </method_statement_node>
           <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
               <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
                 <node name="Override" line="80" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="public" line="81" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
               </node>
             </node>
             <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
             </node>
             <node name="figureChanged" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="FigureEvent" line="81" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="e" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
               <statement_node name="if" line="82" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="||" line="82" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="==" line="82" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="e" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getSource" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="owner" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getStartFigure" line="82" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                   <node name="==" line="83" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="e" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getSource" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="owner" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getEndFigure" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="owner" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="willChange" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="owner" line="85" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="updateConnection" line="85" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="owner" line="86" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="changed" line="86" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </method_statement_node>
         </node>
       </class_statement_node>
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="92" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="LineConnectionFigure" line="92" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="101" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="102" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="transform" line="102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="AffineTransform" line="102" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="tx" line="102" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                 </node>
                 <node name="transform" line="103" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="tx" line="103" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="updateConnection" line="104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="114" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="115" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
           <node name="Collection" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
           <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
             <node name="Handle" line="115" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
           </node>
         </node>
         <node name="createHandles" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="115" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="detailLevel" line="115" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="ArrayList" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="Handle" line="116" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="handles" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="ArrayList" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                     <node name="Handle" line="116" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="getNodeCount" line="116" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="switch" line="117" instruction_class="CONDITIONAL_STATEMENT" instruction="SWITCH_STATEMENT">
             <node name="detailLevel" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
               <node name="case" line="118" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                 <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                   <node name="-" line="118" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="1" line="118" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="handles" line="119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="BezierOutlineHandle" line="119" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                             </node>
                             <node name="true" line="119" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="break" line="120" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
               </statement_node>
             </node>
             <node name="SWITCH_BLOCK_STATEMENT_GROUP" line="0" instruction_class="SWITCH_BLOCK_STATEMENT_GROUP" instruction="SWITCH_BLOCK_STATEMENT_GROUP">
               <node name="case" line="121" instruction_class="CONDITIONAL_STATEMENT" instruction="CASE_STATEMENT">
                 <node name="0" line="121" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="handles" line="122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="122" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="BezierOutlineHandle" line="122" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="123" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="==" line="123" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="getLiner" line="123" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="null" line="123" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="for" line="124" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                     <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                       <node name="FOR_INIT_DECLARATION" line="0" instruction_class="FOR_INIT_DECLARATION" instruction="FOR_INIT_DECLARATION">
                         <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                           <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                           </node>
                           <node name="int" line="124" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                           <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                             <node name="i" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="124" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                           <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                             <node name="n" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="-" line="124" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="getNodeCount" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="1" line="124" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                         </statement_node>
                       </node>
                       <node name="&lt;" line="124" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                         <node name="i" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="n" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                             <node name="i" line="124" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="handles" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="add" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                                 <node name="BezierNodeHandle" line="125" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                     <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                                     </node>
                                     <node name="i" line="125" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="handles" line="128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="128" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="ConnectionStartHandle" line="128" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="handles" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="add" line="129" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                         <node name="ConnectionEndHandle" line="129" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="break" line="130" instruction_class="CONTROLFLOW_STATEMENT" instruction="BREAK_STATEMENT">
               </statement_node>
             </node>
           </statement_node>
           <statement_node name="return" line="132" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="handles" line="132" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="140" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="141" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="setConnectable" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="141" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="newValue" line="141" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                 </node>
                 <node name="setConnectable" line="142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="false" line="142" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="145" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="updateConnection" line="145" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="willChange" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="147" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="147" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="getStartConnector" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="null" line="147" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="start" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getStartConnector" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="findStart" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="149" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="149" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="start" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="149" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="setStartPoint" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="start" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="153" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="153" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="getEndConnector" line="153" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="null" line="153" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="end" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getEndConnector" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="findEnd" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="156" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="156" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="end" line="156" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="156" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="setEndPoint" line="157" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="end" line="157" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="changed" line="160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="163" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="164" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="validate" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                 </node>
                 <node name="validate" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="lineout" line="166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="169" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="169" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="canConnect" line="169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Connector" line="169" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="start" line="169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Connector" line="169" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="end" line="169" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="170" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="&amp;&amp;" line="170" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="start" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getOwner" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="isConnectable" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="end" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getOwner" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="isConnectable" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="173" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Connector" line="173" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getEndConnector" line="173" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="174" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="endConnector" line="174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="177" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="177" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getEndFigure" line="177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="178" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="?" line="178" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="178" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="endConnector" line="178" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="178" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="null" line="178" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="endConnector" line="178" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getOwner" line="178" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="181" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Connector" line="181" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getStartConnector" line="181" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="182" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="startConnector" line="182" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="185" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Figure" line="185" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getStartFigure" line="185" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="186" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="?" line="186" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="186" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="startConnector" line="186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="186" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="null" line="186" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="startConnector" line="186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getOwner" line="186" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="189" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="setEndConnector" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Connector" line="189" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="newEnd" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="190" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="190" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="newEnd" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="endConnector" line="190" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="191" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="191" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="endConnector" line="191" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="191" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="getEndFigure" line="192" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="removeFigureListener" line="192" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="connectionHandler" line="192" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="193" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="193" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getStartFigure" line="193" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="null" line="193" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="194" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="194" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="getDrawing" line="194" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="null" line="194" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="handleDisconnect" line="195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="getStartConnector" line="195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="getEndConnector" line="195" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="199" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="endConnector" line="199" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="newEnd" line="199" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="200" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="200" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="endConnector" line="200" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="200" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="getEndFigure" line="201" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="addFigureListener" line="201" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="connectionHandler" line="201" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="202" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&amp;&amp;" line="202" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="!=" line="202" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="getStartFigure" line="202" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="null" line="202" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                       <node name="!=" line="202" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="getEndFigure" line="202" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="null" line="202" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="if" line="203" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="!=" line="203" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="getDrawing" line="203" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="null" line="203" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="handleConnect" line="204" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="getStartConnector" line="204" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                     <node name="getEndConnector" line="204" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                     </node>
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="updateConnection" line="205" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="212" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="setStartConnector" line="212" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Connector" line="212" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="newStart" line="212" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="213" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="213" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="newStart" line="213" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="startConnector" line="213" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="214" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="214" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="startConnector" line="214" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="214" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="getStartFigure" line="215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="removeFigureListener" line="215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="connectionHandler" line="215" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="216" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="216" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getEndFigure" line="216" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="null" line="216" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="handleDisconnect" line="217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="getStartConnector" line="217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="getEndConnector" line="217" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="220" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="startConnector" line="220" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="newStart" line="220" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="221" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="221" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="startConnector" line="221" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="221" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="getStartFigure" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="addFigureListener" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="connectionHandler" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="223" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="&amp;&amp;" line="223" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="!=" line="223" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="getStartFigure" line="223" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="null" line="223" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                       <node name="!=" line="223" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="getEndFigure" line="223" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                         <node name="null" line="223" instruction_class="LITERAL" instruction="NULL_LITERAL">
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="handleConnect" line="224" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="getStartConnector" line="224" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                 <node name="getEndConnector" line="224" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                 </node>
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="updateConnection" line="225" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="277" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="278" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="addNotify" line="278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Drawing" line="278" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="drawing" line="278" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                 </node>
                 <node name="addNotify" line="279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="drawing" line="279" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="281" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="281" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="281" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="getStartConnector" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="null" line="281" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="!=" line="281" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="getEndConnector" line="281" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="null" line="281" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="handleConnect" line="282" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getStartConnector" line="282" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getEndConnector" line="282" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="updateConnection" line="283" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="293" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="294" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="removeNotify" line="294" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Drawing" line="294" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="drawing" line="294" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="295" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="295" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="295" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="getStartConnector" line="295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="null" line="295" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="!=" line="295" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="getEndConnector" line="295" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="null" line="295" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="handleDisconnect" line="296" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getStartConnector" line="296" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getEndConnector" line="296" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                 </node>
                 <node name="removeNotify" line="306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="drawing" line="306" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="protected" line="319" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="handleDisconnect" line="319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Connector" line="319" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="start" line="319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Connector" line="319" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="end" line="319" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="protected" line="330" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="handleConnect" line="330" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Connector" line="330" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="start" line="330" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Connector" line="330" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="end" line="330" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="333" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="334" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="LineConnectionFigure" line="334" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="clone" line="334" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="LineConnectionFigure" line="335" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="that" line="335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="LineConnectionFigure" line="335" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                     </node>
                     <node name="clone" line="335" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="336" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="that" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="connectionHandler" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                 <node name="ConnectionHandler" line="336" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="that" line="336" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="337" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="337" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="liner" line="337" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="null" line="337" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="338" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="that" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="liner" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="Liner" line="338" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                           </node>
                           <node name="liner" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="clone" line="338" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="345" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="345" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="startConnector" line="345" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="null" line="345" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="346" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="that" line="346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="startConnector" line="346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="Connector" line="346" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                           </node>
                           <node name="startConnector" line="346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="clone" line="346" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="that" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getStartFigure" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="addFigureListener" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="that" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="connectionHandler" line="347" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="349" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="349" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="endConnector" line="349" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="null" line="349" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="350" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="that" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="endConnector" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="Connector" line="350" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                           </node>
                           <node name="endConnector" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="clone" line="350" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="that" line="351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getEndFigure" line="351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="addFigureListener" line="351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="that" line="351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="connectionHandler" line="351" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="353" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="353" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="353" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="that" line="353" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="startConnector" line="353" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="null" line="353" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="!=" line="353" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="that" line="353" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="endConnector" line="353" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="null" line="353" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="that" line="355" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="updateConnection" line="355" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="357" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="that" line="357" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="360" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="361" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="remap" line="361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="INSTANTIATION" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Map" line="361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="TYPE_ARGUMENTS" line="0" instruction_class="TYPE_ARGUMENTS" instruction="TYPE_ARGUMENTS">
                 <node name="Figure" line="361" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="Figure" line="361" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
               </node>
             </node>
             <node name="oldToNew" line="361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="361" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="disconnectIfNotInMap" line="361" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="willChange" line="362" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                 </node>
                 <node name="remap" line="363" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="oldToNew" line="363" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="disconnectIfNotInMap" line="363" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="364" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="newStartFigure" line="364" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="364" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Figure" line="365" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="newEndFigure" line="365" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="365" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="366" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="366" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="getStartFigure" line="366" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="null" line="366" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="367" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="newStartFigure" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="Figure" line="367" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="oldToNew" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="getStartFigure" line="367" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="368" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="368" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="==" line="368" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="newStartFigure" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="null" line="368" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                   <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                     <node name="!" line="368" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                       <node name="disconnectIfNotInMap" line="368" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="369" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="newStartFigure" line="369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getStartFigure" line="369" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="372" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="372" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="getEndFigure" line="372" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 </node>
               </node>
               <node name="null" line="372" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="373" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="newEndFigure" line="373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="Figure" line="373" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="oldToNew" line="373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="get" line="373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="getEndFigure" line="373" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="374" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="&amp;&amp;" line="374" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                   <node name="==" line="374" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="newEndFigure" line="374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="null" line="374" instruction_class="LITERAL" instruction="NULL_LITERAL">
                     </node>
                   </node>
                   <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                     <node name="!" line="374" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                       <node name="disconnectIfNotInMap" line="374" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="=" line="375" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="newEndFigure" line="375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getEndFigure" line="375" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="379" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="379" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="newStartFigure" line="379" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="379" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="setStartConnector" line="380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="newStartFigure" line="380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="findCompatibleConnector" line="380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="getStartConnector" line="380" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="true" line="380" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="382" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="disconnectIfNotInMap" line="382" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="setStartConnector" line="383" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="null" line="383" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="if" line="386" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="386" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="newEndFigure" line="386" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="386" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="setEndConnector" line="387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="newEndFigure" line="387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="findCompatibleConnector" line="387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="getEndConnector" line="387" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                             <node name="false" line="387" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="389" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="disconnectIfNotInMap" line="389" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="setEndConnector" line="390" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="null" line="390" instruction_class="LITERAL" instruction="NULL_LITERAL">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="updateConnection" line="394" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="changed" line="395" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="398" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="398" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="canConnect" line="398" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Connector" line="398" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="start" line="398" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="399" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="start" line="399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="getOwner" line="399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="isConnectable" line="399" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="405" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="406" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="406" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="handleMouseClick" line="406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="p" line="406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="MouseEvent" line="406" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="evt" line="406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DrawingView" line="406" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="view" line="406" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="407" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="407" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="407" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="getLiner" line="407" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="null" line="407" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="==" line="408" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="evt" line="408" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="getClickCount" line="408" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="2" line="408" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="willChange" line="409" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                   <node name="final" line="410" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
                   </node>
                 </node>
                 <node name="int" line="410" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="index" line="410" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="splitSegment" line="410" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="p" line="410" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                           <node name="float" line="410" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                           </node>
                           <node name="/" line="410" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                             <node name="5f" line="410" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="view" line="410" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="getScaleFactor" line="410" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="if" line="411" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="411" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="index" line="411" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                     <node name="-" line="411" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                       <node name="1" line="411" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                       <node name="final" line="412" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
                       </node>
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="BezierPath" line="412" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Node" line="412" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="newNode" line="412" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getNode" line="412" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="index" line="412" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="fireUndoableEditHappened" line="413" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                             <node name="AbstractUndoableEdit" line="413" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                             <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
                               <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
                                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                                   <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
                                     <node name="Override" line="415" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="public" line="416" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
                                   </node>
                                 </node>
                                 <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
                                 </node>
                                 <node name="redo" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
                                 </node>
                                 <node name="throws" line="416" instruction_class="throws" instruction="throws">
                                   <node name="CannotRedoException" line="416" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                                         </node>
                                         <node name="redo" line="417" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="willChange" line="418" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="addNode" line="419" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="index" line="419" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                           <node name="newNode" line="419" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="changed" line="420" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                   </statement_node>
                                 </statement_node>
                               </method_statement_node>
                               <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
                                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                                   <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
                                     <node name="Override" line="423" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="public" line="424" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
                                   </node>
                                 </node>
                                 <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
                                 </node>
                                 <node name="undo" line="424" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
                                 </node>
                                 <node name="throws" line="424" instruction_class="throws" instruction="throws">
                                   <node name="CannotUndoException" line="424" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                                         </node>
                                         <node name="undo" line="425" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="willChange" line="426" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="removeNode" line="427" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                           <node name="index" line="427" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </statement_node>
                                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                       <node name="changed" line="428" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                       </node>
                                     </node>
                                   </statement_node>
                                 </statement_node>
                               </method_statement_node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="changed" line="431" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="return" line="432" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                     <node name="true" line="432" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="return" line="435" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="false" line="435" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="439" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="protected" line="440" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readPoints" line="440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DOMInput" line="440" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="in" line="440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="440" instruction_class="throws" instruction="throws">
           <node name="IOException" line="440" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                 </node>
                 <node name="readPoints" line="441" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="in" line="441" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="in" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="openElement" line="442" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;startConnector&quot;" line="442" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="setStartConnector" line="443" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="Connector" line="443" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="in" line="443" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="readObject" line="443" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="in" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="closeElement" line="444" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="in" line="445" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="openElement" line="445" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;endConnector&quot;" line="445" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="setEndConnector" line="446" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="Connector" line="446" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="in" line="446" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="readObject" line="446" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="in" line="447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="closeElement" line="447" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="450" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="451" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="read" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DOMInput" line="451" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="in" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="451" instruction_class="throws" instruction="throws">
           <node name="IOException" line="451" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readAttributes" line="452" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="in" line="452" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readLiner" line="453" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="in" line="453" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="readPoints" line="457" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="in" line="457" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="protected" line="460" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="readLiner" line="460" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DOMInput" line="460" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="in" line="460" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="460" instruction_class="throws" instruction="throws">
           <node name="IOException" line="460" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="461" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&gt;" line="461" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="in" line="461" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="getElementCount" line="461" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                     <node name="&quot;liner&quot;" line="461" instruction_class="LITERAL" instruction="STRING_LITERAL">
                     </node>
                   </node>
                 </node>
               </node>
               <node name="0" line="461" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="in" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="openElement" line="462" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;liner&quot;" line="462" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="463" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="liner" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="Liner" line="463" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="in" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="readObject" line="463" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="in" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="closeElement" line="464" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="466" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="liner" line="466" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="null" line="466" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="471" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="472" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="write" line="472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DOMOutput" line="472" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="out" line="472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="472" instruction_class="throws" instruction="throws">
           <node name="IOException" line="472" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="writePoints" line="473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="out" line="473" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="writeAttributes" line="474" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="out" line="474" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="writeLiner" line="475" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="out" line="475" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="protected" line="478" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="writeLiner" line="478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DOMOutput" line="478" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="out" line="478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="478" instruction_class="throws" instruction="throws">
           <node name="IOException" line="478" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="479" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="479" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="liner" line="479" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="479" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="out" line="480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="openElement" line="480" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="&quot;liner&quot;" line="480" instruction_class="LITERAL" instruction="STRING_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="out" line="481" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="writeObject" line="481" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="liner" line="481" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="out" line="482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="closeElement" line="482" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="486" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="protected" line="487" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="writePoints" line="487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="DOMOutput" line="487" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="out" line="487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <node name="throws" line="487" instruction_class="throws" instruction="throws">
           <node name="IOException" line="487" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                 </node>
                 <node name="writePoints" line="488" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="out" line="488" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="out" line="489" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="openElement" line="489" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;startConnector&quot;" line="489" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="out" line="490" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="writeObject" line="490" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="getStartConnector" line="490" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="out" line="491" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="closeElement" line="491" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="out" line="492" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="openElement" line="492" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="&quot;endConnector&quot;" line="492" instruction_class="LITERAL" instruction="STRING_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="out" line="493" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="writeObject" line="493" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="getEndConnector" line="493" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="out" line="494" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="closeElement" line="494" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="497" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="setLiner" line="497" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Liner" line="497" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="newValue" line="497" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Liner" line="498" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
               <node name="oldValue" line="498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="liner" line="498" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="499" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="liner" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="newValue" line="499" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="firePropertyChange" line="500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="LINER_PROPERTY" line="500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="oldValue" line="500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="newValue" line="500" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="503" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="504" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="setNode" line="504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="504" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="index" line="504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="BezierPath" line="504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Node" line="504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="p" line="504" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="505" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="505" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="505" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="index" line="505" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0" line="505" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="!=" line="505" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="index" line="505" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="-" line="505" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="getNodeCount" line="505" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="1" line="505" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="if" line="506" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="506" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="getStartConnector" line="506" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="null" line="506" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="507" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="507" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="start" line="507" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="getStartConnector" line="507" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="findStart" line="507" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="508" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="508" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="start" line="508" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="null" line="508" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="setStartPoint" line="509" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="start" line="509" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="if" line="512" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                 <node name="!=" line="512" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="getEndConnector" line="512" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="null" line="512" instruction_class="LITERAL" instruction="NULL_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                       <node name="Point2D" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="Double" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="end" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="getEndConnector" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                           <node name="findEnd" line="513" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="515" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="!=" line="515" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                       <node name="end" line="515" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="null" line="515" instruction_class="LITERAL" instruction="NULL_LITERAL">
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="setEndPoint" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                               <node name="end" line="516" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="UNQUALIFIED_SUPER" line="0" instruction_class="UNQUALIFIED_SUPER" instruction="UNQUALIFIED_SUPER">
                 </node>
                 <node name="setNode" line="520" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="index" line="520" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="p" line="520" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="543" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="lineout" line="543" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="544" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="!=" line="544" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="liner" line="544" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="null" line="544" instruction_class="LITERAL" instruction="NULL_LITERAL">
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="liner" line="545" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="lineout" line="545" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="552" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="553" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="BezierPath" line="553" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getBezierPath" line="553" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="554" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="path" line="554" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="557" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Liner" line="557" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getLiner" line="557" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="558" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="liner" line="558" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="561" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="562" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="setStartPoint" line="562" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="562" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="562" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="p" line="562" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="setPoint" line="563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="0" line="563" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="p" line="563" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="566" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="567" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="setPoint" line="567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="567" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="index" line="567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="p" line="567" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="setPoint" line="568" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="index" line="568" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="568" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="p" line="568" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="MARKER_ANNOTATION" line="0" instruction_class="MARKER_ANNOTATION" instruction="MARKER_ANNOTATION">
             <node name="Override" line="571" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="public" line="572" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="setEndPoint" line="572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
               <node name="Point2D" line="572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="Double" line="572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
             <node name="p" line="572" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="setPoint" line="573" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                 <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                   <node name="-" line="573" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="getNodeCount" line="573" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="1" line="573" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="p" line="573" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="576" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="reverseConnection" line="576" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="577" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="&amp;&amp;" line="577" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="!=" line="577" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="startConnector" line="577" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="577" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="!=" line="577" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="endConnector" line="577" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="577" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="handleDisconnect" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="startConnector" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="endConnector" line="578" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="Connector" line="579" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="tmpC" line="579" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="startConnector" line="579" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="580" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="startConnector" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="endConnector" line="580" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="581" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="endConnector" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="tmpC" line="581" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="SELECT" line="0" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                   <node name="Point2D" line="582" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="Double" line="582" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="tmpP" line="582" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="getStartPoint" line="582" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="setStartPoint" line="583" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="getEndPoint" line="583" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="setEndPoint" line="584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="tmpP" line="584" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="handleConnect" line="585" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="startConnector" line="585" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="endConnector" line="585" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="updateConnection" line="586" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
         </statement_node>
       </method_statement_node>
     </node>
   </class_statement_node>
 </node>
</srcfile>