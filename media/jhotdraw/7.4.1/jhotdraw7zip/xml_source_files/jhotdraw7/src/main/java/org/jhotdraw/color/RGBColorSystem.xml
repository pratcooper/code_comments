<?xml version="1.0" ?>
<srcfile name="RGBColorSystem.java" file_path="/Users/valerio/Research/Code/Source Code Comments Classification/comments_classification/media/jhotdraw/7.4.1/jhotdraw7zip/extracted/jhotdraw7/src/main/java/org/jhotdraw/color/RGBColorSystem.java" >
 <node name="COMPILATION_UNIT" line="0" instruction_class="COMPILATION_UNIT" instruction="COMPILATION_UNIT">
   <node name="PACKAGE_DECLARATION" line="0" instruction_class="KEYWORD" instruction="PACKAGE_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="org" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="jhotdraw" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="color" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
       <node name="public" line="22" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
       </node>
     </node>
     <node name="RGBColorSystem" line="22" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
     </node>
     <node name="extends" line="22" instruction_class="KEYWORD" instruction="INHERITANCE_KEYWORD">
       <node name="AbstractColorSystem" line="22" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
       </node>
     </node>
     <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="27" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="RGBColorSystem" line="27" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="30" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="float" line="30" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="toComponents" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="30" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="r" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="30" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="g" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="30" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="b" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
               <node name="float" line="30" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
               </node>
             </node>
             <node name="components" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="31" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="||" line="31" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="31" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="components" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="null" line="31" instruction_class="LITERAL" instruction="NULL_LITERAL">
                 </node>
               </node>
               <node name="!=" line="31" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="components" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="length" line="31" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
                 <node name="3" line="31" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="32" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="components" line="32" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="NEW_ARRAY" line="0" instruction_class="NEW_ARRAY" instruction="NEW_ARRAY">
                     <node name="float" line="32" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="3" line="32" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="34" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="components" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="0" line="34" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="/" line="34" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="r" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="255f" line="34" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="35" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="components" line="35" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="1" line="35" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="/" line="35" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="g" line="35" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="255f" line="35" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="36" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                 <node name="components" line="36" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="2" line="36" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="/" line="36" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                 <node name="b" line="36" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="255f" line="36" instruction_class="LITERAL" instruction="FLOATING_POINT_LITERAL">
                 </node>
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="37" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="components" line="37" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="40" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="40" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="toRGB" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="LAST_FORMAL_PARAMETER" line="0" instruction_class="LAST_FORMAL_PARAMETER" instruction="LAST_FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="float" line="40" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="components" line="40" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="41" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="|" line="43" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
               <node name="|" line="42" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                 <node name="|" line="41" instruction_class="OPERATOR" instruction="BITWISE_OPERATOR">
                   <node name="0xff000000" line="41" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                   <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                     <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                       <node name="int" line="42" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                       </node>
                       <node name="*" line="42" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="components" line="42" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="0" line="42" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                           </node>
                         </node>
                         <node name="255" line="42" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                     <node name="16" line="42" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
                 <node name="LEFT_SHIFT" line="0" instruction_class="OPERATOR" instruction="SHIFT_OPERATOR">
                   <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                     <node name="int" line="43" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="*" line="43" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                       <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                         <node name="components" line="43" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="1" line="43" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="255" line="43" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                     </node>
                   </node>
                   <node name="8" line="43" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
               <node name="CAST" line="0" instruction_class="CAST" instruction="CAST">
                 <node name="int" line="44" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="*" line="44" instruction_class="OPERATOR" instruction="MULTIPLICATIVE_OPERATOR">
                   <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                     <node name="components" line="44" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="2" line="44" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                   <node name="255" line="44" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="47" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="47" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="getComponentCount" line="47" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="48" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="3" line="48" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
     </node>
   </class_statement_node>
 </node>
</srcfile>