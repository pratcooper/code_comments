<?xml version="1.0" ?>
<srcfile name="Matcher.java" file_path="/Users/valerio/Research/Code/Source Code Comments Classification/comments_classification/media/jhotdraw/7.4.1/jhotdraw7zip/extracted/jhotdraw7/src/main/java/org/jhotdraw/samples/teddy/regex/Matcher.java" >
 <node name="COMPILATION_UNIT" line="0" instruction_class="COMPILATION_UNIT" instruction="COMPILATION_UNIT">
   <node name="PACKAGE_DECLARATION" line="0" instruction_class="KEYWORD" instruction="PACKAGE_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
             <node name="org" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <node name="jhotdraw" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="samples" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
         <node name="teddy" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="regex" line="14" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <node name="TYPE_IMPORT_ON_DEMAND_DECLARATION" line="0" instruction_class="KEYWORD" instruction="IMPORT_KEYWORD">
     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
         <node name="javax" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="swing" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
       </node>
       <node name="text" line="16" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
       </node>
     </node>
   </node>
   <class_statement_node name="CLASS_DECLARATION" line="0" instruction_class="CLASS_DECLARATION" instruction="CLASS_KEYWORD">
     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
       <node name="public" line="26" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
       </node>
     </node>
     <node name="Matcher" line="26" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
     </node>
     <node name="CLASS_BODY" line="0" instruction_class="CLASS_BODY" instruction="CLASS_BODY">
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="30" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Document" line="30" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="document" line="30" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="34" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="34" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="findString" line="34" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="38" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="38" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="startIndex" line="38" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="43" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="char" line="43" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="matchLowerCase" line="43" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="48" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="ARRAY_OF" line="0" instruction_class="ARRAY_OF" instruction="ARRAY_OF">
           <node name="char" line="48" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
           </node>
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="matchUpperCase" line="48" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <statement_node name="FIELD_DECLARATION" line="0" instruction_class="FIELD_DECLARATION" instruction="FIELD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="53" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="MatchType" line="53" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
           <node name="matchType" line="53" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
           </node>
         </node>
       </statement_node>
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="62" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Matcher" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Document" line="62" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="document" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="62" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="findString" line="62" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
           <node name="ALTERNATE_CONSTRUCTOR_INVOCATION" line="0" instruction_class="ALTERNATE_CONSTRUCTOR_INVOCATION" instruction="ALTERNATE_CONSTRUCTOR_INVOCATION">
             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                 <node name="document" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="findString" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="true" line="63" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                 </node>
                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                   <node name="MatchType" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CONTAINS" line="63" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </node>
             </node>
           </node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="CONSTRUCTOR_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="CONSTRUCTOR_METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="74" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="Matcher" line="74" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="Document" line="74" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="document" line="74" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="String" line="74" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="findString" line="74" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="boolean" line="74" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="matchCase" line="74" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="MatchType" line="74" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
             </node>
             <node name="matchType" line="74" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="CONSTRUCTOR_BODY" line="0" instruction_class="CONSTRUCTOR_BODY" instruction="CONSTRUCTOR_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="75" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="document" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="document" line="75" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="76" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="findString" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="findString" line="76" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="77" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="startIndex" line="77" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="77" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
           <statement_node name="if" line="80" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="matchCase" line="80" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="81" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="matchLowerCase" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="=" line="81" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                     <node name="matchUpperCase" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="findString" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="toCharArray" line="81" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="83" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="matchUpperCase" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="findString" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="toUpperCase" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="toCharArray" line="83" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="=" line="84" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                   <node name="matchLowerCase" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="findString" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="toLowerCase" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                       <node name="toCharArray" line="84" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="87" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="matchType" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="matchType" line="87" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="90" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="String" line="90" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getFindString" line="90" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="91" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="findString" line="91" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="94" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="94" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="isMatchCase" line="94" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="95" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="==" line="95" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
               <node name="matchLowerCase" line="95" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="matchUpperCase" line="95" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="97" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="MatchType" line="97" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
         </node>
         <node name="getMatchType" line="97" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="return" line="98" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="matchType" line="98" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="104" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="setStartIndex" line="104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="104" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="newValue" line="104" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="105" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="startIndex" line="105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="newValue" line="105" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="117" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="117" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="findNext" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="117" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="startIndex" line="117" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="118" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="startIndex" line="118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="startIndex" line="118" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="119" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="findNext" line="119" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="134" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="134" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="findNext" line="134" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="136" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="||" line="136" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="136" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="findString" line="136" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="length" line="136" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="0" line="136" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="&lt;" line="137" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="-" line="137" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="document" line="137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="getLength" line="137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="findString" line="137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
                 <node name="startIndex" line="137" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="138" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                   <node name="-" line="138" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="1" line="138" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="try" line="141" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="142" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="nextMatch" line="142" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="142" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="Segment" line="145" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="text" line="145" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="Segment" line="145" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="text" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="setPartialReturn" line="146" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="true" line="146" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="147" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="offset" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="startIndex" line="147" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="148" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="nleft" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="-" line="148" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="document" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getLength" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       </node>
                     </node>
                     <node name="startIndex" line="148" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="while" line="149" instruction_class="LOOP_STATEMENT" instruction="WHILE_STATEMENT">
                 <node name="&gt;" line="149" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                   <node name="nleft" line="149" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="0" line="149" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="document" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="getText" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                       <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="offset" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nleft" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="text" line="150" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="char" line="153" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="next" line="153" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="text" line="153" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="first" line="153" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="for" line="154" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                     <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                       <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="text" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="first" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="!=" line="154" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="next" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="Segment" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="DONE" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                         <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                           <node name="=" line="154" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                             <node name="next" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="text" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="next" line="154" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                               </node>
                             </node>
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                         </node>
                         <node name="char" line="158" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                         </node>
                         <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                           <node name="current" line="158" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="text" line="158" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="current" line="158" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="159" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="||" line="159" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                           <node name="==" line="159" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                             <node name="current" line="159" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="matchUpperCase" line="159" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextMatch" line="159" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                           <node name="==" line="160" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                             <node name="current" line="160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                               <node name="matchLowerCase" line="160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="nextMatch" line="160" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="POST_INCREMENT_EXPRESSION" line="0" instruction_class="POST_INCREMENT_EXPRESSION" instruction="POST_INCREMENT_EXPRESSION">
                               <node name="nextMatch" line="161" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="if" line="164" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="==" line="164" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="nextMatch" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="matchLowerCase" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="length" line="164" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                                 </node>
                                 <node name="int" line="165" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                                 </node>
                                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                                   <node name="foundIndex" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="+" line="166" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                     <node name="-" line="165" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                       <node name="+" line="165" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                         <node name="-" line="165" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="text" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="getIndex" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             </node>
                                           </node>
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                               <node name="text" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="getBeginIndex" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                             </node>
                                           </node>
                                         </node>
                                         <node name="offset" line="165" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="matchLowerCase" line="166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="length" line="166" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                     <node name="1" line="166" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                     </node>
                                   </node>
                                 </node>
                               </statement_node>
                               <statement_node name="if" line="167" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                 <node name="==" line="167" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                   <node name="matchType" line="167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="MatchType" line="167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="CONTAINS" line="167" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="return" line="168" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                                     <node name="foundIndex" line="168" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </statement_node>
                                 </statement_node>
                                 <statement_node name="if" line="170" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                   <node name="==" line="170" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                     <node name="matchType" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                       <node name="MatchType" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="STARTS_WITH" line="170" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </node>
                                   </node>
                                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                     <statement_node name="if" line="171" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                                         <node name="!" line="171" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="isWordChar" line="171" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                 <node name="-" line="171" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                   <node name="foundIndex" line="171" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                   <node name="1" line="171" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                         <statement_node name="return" line="172" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                                           <node name="foundIndex" line="172" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                           </node>
                                         </statement_node>
                                       </statement_node>
                                     </statement_node>
                                   </statement_node>
                                   <statement_node name="if" line="174" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                     <node name="==" line="174" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                       <node name="matchType" line="174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                         <node name="MatchType" line="174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="FULL_WORD" line="174" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </node>
                                     </node>
                                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                       <statement_node name="if" line="175" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                         <node name="&amp;&amp;" line="175" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                           <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                                             <node name="!" line="175" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                 <node name="isWordChar" line="175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                     <node name="-" line="175" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                       <node name="foundIndex" line="175" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                       <node name="1" line="175" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                           <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                                             <node name="!" line="176" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                                               <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                                 <node name="isWordChar" line="176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                 </node>
                                                 <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                                   <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                     <node name="+" line="176" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                       <node name="foundIndex" line="176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                       </node>
                                                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                         <node name="matchLowerCase" line="176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                         </node>
                                                         <node name="length" line="176" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                         </node>
                                                       </node>
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                           <statement_node name="return" line="177" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                                             <node name="foundIndex" line="177" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                           </statement_node>
                                         </statement_node>
                                       </statement_node>
                                     </statement_node>
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                                 <node name="=" line="180" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                                   <node name="nextMatch" line="180" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="0" line="180" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                   </node>
                                 </node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                         </statement_node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="183" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="nextMatch" line="183" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="0" line="183" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="-=" line="188" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="nleft" line="188" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="text" line="188" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="count" line="188" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                     <node name="+=" line="189" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                       <node name="offset" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                         <node name="text" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="count" line="189" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="return" line="191" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                   <node name="-" line="191" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="1" line="191" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="192" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="BadLocationException" line="192" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="e" line="192" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="throw" line="193" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="IndexOutOfBoundsException" line="193" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="205" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="205" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="findPrevious" line="205" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="205" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="startIndex" line="205" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="206" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                 <node name="THIS" line="0" instruction_class="THIS" instruction="THIS">
                 </node>
                 <node name="startIndex" line="206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <node name="startIndex" line="206" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
             </node>
           </statement_node>
           <statement_node name="return" line="207" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
             <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
               <node name="findPrevious" line="207" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="222" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="int" line="222" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="findPrevious" line="222" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="if" line="224" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
             <node name="||" line="224" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
               <node name="==" line="224" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="findString" line="224" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="length" line="224" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                   </node>
                 </node>
                 <node name="0" line="224" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                 </node>
               </node>
               <node name="&lt;" line="225" instruction_class="OPERATOR" instruction="RELATIONAL_OPERATOR">
                 <node name="startIndex" line="225" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
                 <node name="-" line="225" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="findString" line="225" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="225" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                   <node name="1" line="225" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                   </node>
                 </node>
               </node>
             </node>
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="return" line="227" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                   <node name="-" line="227" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="1" line="227" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
           </statement_node>
           <statement_node name="try" line="230" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="int" line="231" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="nextMatch" line="231" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="-" line="231" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="matchLowerCase" line="231" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="length" line="231" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="1" line="231" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="Segment" line="235" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="text" line="235" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="Segment" line="235" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="text" line="236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="setPartialReturn" line="236" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="false" line="236" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="document" line="237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="getText" line="237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="0" line="237" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                       </node>
                       <node name="+" line="237" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                         <node name="startIndex" line="237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="1" line="237" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                       <node name="text" line="237" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="char" line="240" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="previous" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="text" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="last" line="240" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="for" line="242" instruction_class="LOOP_STATEMENT" instruction="FOR_STATEMENT">
                 <node name="BASIC_FOR_CONTROL" line="0" instruction_class="BASIC_FOR_CONTROL" instruction="BASIC_FOR_CONTROL">
                   <node name="FOR_INIT_EXPRESSION_LIST" line="0" instruction_class="FOR_INIT_EXPRESSION_LIST" instruction="FOR_INIT_EXPRESSION_LIST">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="text" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="last" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </node>
                   <node name="!=" line="242" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                     <node name="previous" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="Segment" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="DONE" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                   <node name="FOR_UPDATE" line="0" instruction_class="FOR_UPDATE" instruction="FOR_UPDATE">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="=" line="242" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                         <node name="previous" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                           <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                             <node name="text" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="previous" line="242" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                           </node>
                           <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           </node>
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                   <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                     <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                     </node>
                     <node name="char" line="246" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                     </node>
                     <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                       <node name="current" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="text" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="current" line="246" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                         </node>
                       </node>
                     </node>
                   </statement_node>
                   <statement_node name="if" line="247" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                     <node name="||" line="247" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                       <node name="==" line="247" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="current" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="matchUpperCase" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nextMatch" line="247" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                       <node name="==" line="248" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                         <node name="current" line="248" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                         </node>
                         <node name="ARRAY_ACCESS" line="0" instruction_class="ARRAY_ACCESS" instruction="ARRAY_ACCESS">
                           <node name="matchLowerCase" line="248" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="nextMatch" line="248" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </node>
                     </node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="POST_DECREMENT_EXPRESSION" line="0" instruction_class="POST_DECREMENT_EXPRESSION" instruction="POST_DECREMENT_EXPRESSION">
                           <node name="nextMatch" line="249" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                       </statement_node>
                       <statement_node name="if" line="252" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                         <node name="==" line="252" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                           <node name="nextMatch" line="252" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                             <node name="-" line="252" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                               <node name="1" line="252" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                               </node>
                             </node>
                           </node>
                         </node>
                         <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                           <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                             </node>
                             <node name="int" line="253" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                             </node>
                             <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                               <node name="foundIndex" line="253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="-" line="253" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="text" line="253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="getIndex" line="253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="text" line="253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="getBeginIndex" line="253" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                   </node>
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                           <statement_node name="if" line="255" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                             <node name="==" line="255" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                               <node name="matchType" line="255" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                 <node name="MatchType" line="255" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="CONTAINS" line="255" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </node>
                             </node>
                             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                               <statement_node name="return" line="256" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                                 <node name="foundIndex" line="256" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                               </statement_node>
                             </statement_node>
                             <statement_node name="if" line="257" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                               <node name="==" line="257" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                 <node name="matchType" line="257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                 </node>
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="MatchType" line="257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="STARTS_WITH" line="257" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                               </node>
                               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                 <statement_node name="if" line="258" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                   <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                                     <node name="!" line="258" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                         <node name="isWordChar" line="258" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                             <node name="-" line="258" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                               <node name="foundIndex" line="258" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                               </node>
                                               <node name="1" line="258" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                   </node>
                                   <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                     <statement_node name="return" line="259" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                                       <node name="foundIndex" line="259" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                       </node>
                                     </statement_node>
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                               <statement_node name="if" line="261" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                 <node name="==" line="261" instruction_class="OPERATOR" instruction="EQUALITY_OPERATOR">
                                   <node name="matchType" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                     <node name="MatchType" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                     <node name="FULL_WORD" line="261" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                     </node>
                                   </node>
                                 </node>
                                 <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                   <statement_node name="if" line="262" instruction_class="CONDITIONAL_STATEMENT" instruction="IF_STATEMENT">
                                     <node name="&amp;&amp;" line="262" instruction_class="OPERATOR" instruction="CONDITIONAL_OPERATOR">
                                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                                         <node name="!" line="262" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="isWordChar" line="262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                 <node name="-" line="262" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                   <node name="foundIndex" line="262" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                   <node name="1" line="262" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                       <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                                         <node name="!" line="263" instruction_class="OPERATOR" instruction="LOGICAL_OPERATOR">
                                           <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                                             <node name="isWordChar" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                             </node>
                                             <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                                               <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                                                 <node name="+" line="263" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                                   <node name="foundIndex" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                   </node>
                                                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                                     <node name="matchLowerCase" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                     <node name="length" line="263" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                                     </node>
                                                   </node>
                                                 </node>
                                               </node>
                                             </node>
                                           </node>
                                         </node>
                                       </node>
                                     </node>
                                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                                       <statement_node name="return" line="264" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                                         <node name="foundIndex" line="264" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                         </node>
                                       </statement_node>
                                     </statement_node>
                                   </statement_node>
                                 </statement_node>
                               </statement_node>
                             </statement_node>
                           </statement_node>
                           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                             <node name="=" line="267" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                               <node name="nextMatch" line="267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="-" line="267" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                                 <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                                   <node name="matchLowerCase" line="267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                   <node name="length" line="267" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                                   </node>
                                 </node>
                                 <node name="1" line="267" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                                 </node>
                               </node>
                             </node>
                           </statement_node>
                         </statement_node>
                       </statement_node>
                     </statement_node>
                     <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                       <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
                         <node name="=" line="270" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
                           <node name="nextMatch" line="270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="-" line="270" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                             <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                               <node name="matchLowerCase" line="270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                               <node name="length" line="270" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                               </node>
                             </node>
                             <node name="1" line="270" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </statement_node>
                     </statement_node>
                   </statement_node>
                 </statement_node>
               </statement_node>
               <statement_node name="return" line="274" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="PREFIX_EXPRESSION" line="0" instruction_class="PREFIX_EXPRESSION" instruction="PREFIX_EXPRESSION">
                   <node name="-" line="274" instruction_class="OPERATOR" instruction="ADDITIVE_OPERATOR">
                     <node name="1" line="274" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="275" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="BadLocationException" line="275" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="e" line="275" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="throw" line="276" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_THROW">
                   <node name="UNQUALIFIED_CLASS_INSTANCE_CREATION" line="0" instruction_class="UNQUALIFIED_CLASS_INSTANCE_CREATION" instruction="UNQUALIFIED_CLASS_INSTANCE_CREATION">
                     <node name="IndexOutOfBoundsException" line="276" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     </node>
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="public" line="283" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="VOID" line="0" instruction_class="VOID" instruction="VOID">
         </node>
         <node name="reset" line="283" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="EXPRESSION_STATEMENT" line="0" instruction_class="EXPRESSION_STATEMENT" instruction="EXPRESSION_STATEMENT">
             <node name="=" line="284" instruction_class="OPERATOR" instruction="ASSIGNEMENT_OPERATOR">
               <node name="startIndex" line="284" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
               </node>
               <node name="0" line="284" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
               </node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
       <method_statement_node name="METHOD_DECLARATION" line="0" instruction_class="METHOD_DECLARATION" instruction="METHOD_DECLARATION">
         <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
           <node name="private" line="287" instruction_class="MODIFIER" instruction="ACCESS_LEVEL_MODIFIER">
           </node>
         </node>
         <node name="boolean" line="287" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
         </node>
         <node name="isWordChar" line="287" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
         </node>
         <node name="FORMAL_PARAMETERS" line="0" instruction_class="FORMAL_PARAMETERS" instruction="FORMAL_PARAMETERS">
           <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
             <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
             </node>
             <node name="int" line="287" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
             </node>
             <node name="index" line="287" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
             </node>
           </node>
         </node>
         <statement_node name="METHOD_BODY" line="0" instruction_class="METHOD_BODY" instruction="METHOD_BODY">
           <statement_node name="try" line="288" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_TRY">
             <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
               <statement_node name="LOCAL_VARIABLE_DECLARATION" line="0" instruction_class="LOCAL_VARIABLE_DECLARATION" instruction="LOCAL_VARIABLE_DECLARATION">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="char" line="289" instruction_class="TYPE" instruction="PRIMITIVE_TYPE">
                 </node>
                 <node name="VARIABLE_DECLARATOR" line="0" instruction_class="VARIABLE_DECLARATOR" instruction="VARIABLE_DECLARATOR">
                   <node name="ch" line="289" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                   </node>
                   <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                     <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                       <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                         <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                           <node name="document" line="289" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                           <node name="getText" line="289" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                           </node>
                         </node>
                         <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                           <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                             <node name="index" line="289" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                             </node>
                             <node name="1" line="289" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                             </node>
                           </node>
                         </node>
                       </node>
                       <node name="charAt" line="289" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                     <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                       <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                         <node name="0" line="289" instruction_class="LITERAL" instruction="INTEGER_LITERAL">
                         </node>
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
               <statement_node name="return" line="290" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                 <node name="CALL" line="0" instruction_class="CALL" instruction="CALL">
                   <node name="SELECT" line="0" instruction_class="SELECT" instruction="SELECT">
                     <node name="Character" line="290" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                     <node name="isLetterOrDigit" line="290" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                     </node>
                   </node>
                   <node name="ARGUMENTS" line="0" instruction_class="ARGUMENTS" instruction="ARGUMENTS">
                     <node name="EXPRESSION_LIST" line="0" instruction_class="EXPRESSION_LIST" instruction="EXPRESSION_LIST">
                       <node name="ch" line="290" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                       </node>
                     </node>
                   </node>
                 </node>
               </statement_node>
             </statement_node>
             <node name="catch" line="291" instruction_class="CONTROLFLOW_STATEMENT" instruction="EXCEPTION_CATCH">
               <node name="FORMAL_PARAMETER" line="0" instruction_class="FORMAL_PARAMETER" instruction="FORMAL_PARAMETER">
                 <node name="MODIFIERS" line="0" instruction_class="MODIFIERS" instruction="MODIFIERS">
                 </node>
                 <node name="BadLocationException" line="291" instruction_class="TYPE" instruction="CLASS_OR_INTERFACE_TYPE">
                 </node>
                 <node name="e" line="291" instruction_class="IDENTIFIER" instruction="IDENTIFIER">
                 </node>
               </node>
               <statement_node name="BLOCK" line="0" instruction_class="BLOCK" instruction="BLOCK">
                 <statement_node name="return" line="292" instruction_class="CONTROLFLOW_STATEMENT" instruction="RETURN_STATEMENT">
                   <node name="false" line="292" instruction_class="LITERAL" instruction="BOOLEAN_LITERAL">
                   </node>
                 </statement_node>
               </statement_node>
             </node>
           </statement_node>
         </statement_node>
       </method_statement_node>
     </node>
   </class_statement_node>
 </node>
</srcfile>